lex category (postags) = Unary(WRB VB JJR NN VB)	-1.0
question prefix = 'be' ^ isDate	0.0
lex category (postags) = Unary(WDT NN VB NN)	-1.0
template arg pos tags = NN RB	0.0
parser lexical rule = fullPatternWhenBeIn	1.0
lex category (postags) = Unary(WP VBP JJ NN VB)	-1.0
lex type = Unary ^ rightTag = VBP	0.0
lex category (postags) = Unary(WDT VB NN VBP IN)	-1.0
template prefix how many => how many	1.0
action type = RelSynRule	0.0
evidence similarity with question	2.6123641880994817
action type = ParsedQuestion	0.0
relSynRule pmi	1.0
lex category (postags) = Unary(WP VBP NN NN)	1.0
parser lexical rule = punctIdentity	0.0
answer is def noun	-1.0
lex category (postags) = Unary(WDT NN NN VBP VB NN)	1.0
template arg pos tags = NN JJ	0.0
lex category (postags) = Unary(WDT NN VB VB NN)	-1.0
minimum join key similarity	-0.6566498316498319
question prefix = 'where' ^ answer shape = 'aaaa aaaa aaaa aaaa aaaa'	-1.0
lex category (postags) = Unary(WDT NNS VBP IN NN)	0.0
lex category (postags) = Unary(WDT VB JJ NN NNS NN)	0.0
template prefix when => what	-1.0
lex type = Identity ^ leftTag = IN	2.0
dropNameOf	0.0
question prefix = 'what' ^ answer shape = 'aaaa aaaa aaaa'	-1.0
template pair pmi	-0.4297398328781128
lex category (postags) = Unary(WDT VB DT NN IN JJ NN)	0.0
lex category (postags) = Unary(WDT VB NN NN VBN IN)	1.0
lex category (postags) = Unary(WRB VBP JJ NN VBN IN)	-1.0
fbid join key violation	0.0
question prefix = 'UNK' ^ answer shape = 'Aaa Aaaaa'	1.0
template arg pos tags = NN NN VB	1.0
question prefix = 'UNK' ^ answer shape = 'a aaaa'	0.0
question prefix = 'what' ^ answer shape = 'aaa Aaaaa'	-1.0
lex category (postags) = Unary(WRB VB NN NN)	0.0
question prefix = 'what' ^ answer shape = 'Aaa'	1.0
answer is linked to freebase	1.0
template arg pos tags = VB NN	0.0
template arg pos tags = VB JJR NN	1.0
parser lexical rule = fullPatternWhenOn	-1.0
lex category (postags) = Unary(WDT NN VB JJ NN)	1.0
template prefix where => what	0.0
parser lexical rule = auxIdentity	0.0
lex category (postags) = Unary(WRB VBP NN RB VBN IN)	1.0
lex category (postags) = Unary(WDT NN VBP DT NN VB)	-1.0
question prefix = 'be' ^ answer shape = 'aaaa'	-1.0
question prefix = 'be' ^ isNumber	0.0
tuple conceptVagueness_f	-1.6177331049890942
question prefix = 'how' ^ answer shape = 'aaaa aaaa'	0.0
template prefix UNK => UNK	1.0
question prefix = 'what' ^ answer shape = 'Aaa aaaa'	-1.0
template arg pos tags = VB JJ	0.0
question prefix = 'where' ^ answer shape = 'Aaaaa'	1.0
tuple num_extrs_i	0.9648371589742939
lex category (postags) = Unary(WDT NN VBP NN NN NN VB)	0.0
dropPP	-2.0
parser combinator rule = UnaryIdentity	0.0
template arg pos tags = JJR NN	-1.0
question prefix = 'how many' ^ isNumber	2.0
lex category (postags) = Unary(WDT VB IN PRP NN)	-1.0
answer from namespace 'probase'	2.0
template arg pos tags = NN NN NN	0.0
action type = ProjectAction$	0.0
answer from namespace 'reverb'	0.0
template arg pos tags = VB NN NN	0.0
template arg pos tags = JJ NN	-1.0
action type = DropStopAction$	-1.0
lex type = Identity ^ leftTag = NN	0.0
parser combinator rule = UnaryIntersect	-1.0
lex category (postags) = Unary(WDT VB DT NN IN NN NN NN)	0.0
question prefix = 'what' ^ answer shape = 'aaaa-aaa aaaa'	-1.0
question prefix = 'be' ^ answer shape = 'a aaaa , aaaa aaaa'	1.0
lex category (postags) = Unary(WP VBP IN NN)	-1.0
question prefix = 'what' ^ answer shape = 'AAAA aaa'	1.0
lex category (postags) = Unary(WDT VB DT JJ NN IN DT NN)	0.0
template arg pos tags = VB DT JJ NN	1.0
template prefix what => who	1.0
paraphrase lm	-0.0340499999999998
question prefix = 'what' ^ answer shape = 'Aaaaa aaaa'	0.0
num lexical rules	-1.2
parser lexical rule = fullPatternWhereIn	0.0
lex category (postags) = Unary(WRB JJ NN VBP NN VB)	1.0
dropTypeOf	2.0
lex category (postags) = Unary(WRB JJ NNS VBP IN DT NN)	1.0
template arg pos tags = DT NN	-1.0
lex type = Unary ^ leftTag = NNS	-1.0
lex category (postags) = Unary(WDT VB DT NN VB NN IN)	1.0
template prefix be => what	0.0
lex category (postags) = Unary(WDT NN VBP NN)	-1.0
template prefix how => who	0.0
question prefix = 'how' ^ isDate	0.0
lex category (postags) = Identity(CC)	0.0
question prefix = 'how' ^ isNumber	0.0
num conjuncts	-2.0
lex category (postags) = Unary(WRB JJ NNS VB RB IN DT NN)	-1.0
question prefix = 'what' ^ answer shape = '11 aaaa'	-1.0
action type = DropStopAction	1.0
question prefix = 'what' ^ answer shape = 'Aa Aaaaa'	1.0
lex category (postags) = Unary(WDT VB NNS)	-1.0
answer from namespace 'nell'	0.0
question prefix = 'what' ^ answer shape = 'aaa-aaa aaaa'	1.0
template prefix be => who	1.0
lex category (postags) = Unary(WDT VB DT JJ NN IN NN NN)	0.0
template prefix who => who	-1.0
question prefix = 'how many' ^ answer shape = 'Aaaaa'	-1.0
answer from namespace 'freebase'	1.0
parser lexical rule = conjIdentity	0.0
question prefix = 'how' ^ answer shape = 'aaa aaaa'	1.0
lex type = Identity ^ leftTag = RB	-1.0
lex category (postags) = Unary(WDT VB NN NN)	-1.0
lex category (postags) = Unary(WDT VB DT JJ NN VB)	-1.0
template arg pos tags = NN VB ''	0.0
template arg pos tags = NN IN JJ NN	0.0
lex category (postags) = Unary(WDT VB DT NN IN DT NN NN)	1.0
template arg pos tags = DT RBS JJ NN	0.0
question prefix = 'how many' ^ answer shape = 'AAAA'	-1.0
parser lexical rule = fullPatternDobj	0.0
tuple freq_i	-0.3858141388815728
question prefix = 'UNK' ^ answer shape = 'aaaa'	-1.0
question prefix = 'when' and isDate	1.0
query relation is light verb	1.0
question prefix = 'where' ^ isDate	0.0
lex category (postags) = Unary(WDT VB NN NNS NN)	1.0
lex category (postags) = Unary(WP VB NN NN)	1.0
template prefix who => where	1.0
template prefix how => what	1.0
template arg pos tags = WDT VB DT NN	0.0
parser lexical rule = fullPatternSubj	0.0
question prefix = 'who' ^ answer shape = 'Aaaa aa aaa Aaaaa'	1.0
lex category (postags) = Unary(WDT VB JJ NN)	4.0
template prefix when => where	-1.0
action type = ExecutionAction$	0.0
lex category (postags) = Unary(WDT VBP DT NN)	-1.0
question prefix = 'how' ^ answer shape = 'Aaa Aaaaa Aaa Aaa'	1.0
parser lexical rule = fullPatternPoss	1.0
template prefix how => when	-1.0
question prefix = 'what' ^ answer shape = 'aaaa aaaa'	1.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaa'	-1.0
template prefix what => where	-1.0
lex category (postags) = Unary(WDT VB VBN DT NN)	1.0
question prefix = 'how many' ^ answer shape = '11 aaaa'	1.0
template pair count1	-0.9269460588693619
parser lexical rule = fullPatternTypeSubj	-2.0
question prefix = 'UNK' ^ answer shape = 'aa aaaa'	1.0
lex type = Identity ^ rightTag = </s>	0.0
parser lexical rule = whIdentity	0.0
question prefix = 'what' ^ isDate	0.0
question prefix = 'what' ^ answer shape = 'aaaa aa aaaa aaaa'	0.0
parser lexical rule = fullPatternWhereIs	-1.0
lex category (postags) = Unary(WDT VB DT NN IN DT NN)	-1.0
lex category (postags) = Unary(WP VBP DT NN NN)	1.0
lex category (postags) = Unary(WRB JJ NN VBP NN VB IN)	-1.0
lex category (postags) = Unary(WP VBP NN RB)	-1.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaaa'	1.0
lex type = Unary ^ leftTag = <s>	0.0
question prefix = 'when' ^ isDate	1.0
lex category (postags) = Unary(WRB JJ NN VBP DT NN VB)	1.0
question prefix = 'where' and isDate	-1.0
lex category (postags) = Unary(WP VBP VB DT NN)	0.0
lex category (postags) = Unary(WDT NN VBP NN VB)	1.0
question prefix = 'what' ^ answer shape = 'aaaa Aaaaa'	1.0
question prefix = 'how many' ^ answer shape = 'Aaaaa-Aaaaa'	-1.0
lex type = Unary ^ rightTag = WRB	0.0
template prefix what => what	-1.0
question prefix = 'UNK' ^ answer shape = 'Aaaaa aaaa aa aaaa'	-1.0
question prefix = 'what' ^ answer shape = 'aa aaaa'	0.0
dropAdverb	-2.0
lex category (postags) = Unary(WDT VB DT NN VBZ NN)	0.0
action type = ParaphraseRule	0.0
template pair count2	0.004266276955604553
lex type = Unary ^ leftTag = NN	0.0
question prefix = 'how many' ^ answer shape = 'Aaaaa Aaaaa'	1.0
question prefix = 'what' ^ answer shape = 'a aaaa aaaa'	0.0
lex category (postags) = Unary(WDT VB DT JJ NN IN NN)	1.0
parser lexical rule = fullPatternDefn	0.0
parser lexical rule = fullPatternHaveProp	1.0
question prefix = 'what' ^ answer shape = 'aaaa'	0.0
question prefix = 'how many' ^ answer shape = 'aaaa'	0.0
question prefix = 'how many' ^ answer shape = '1,111?A'	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaaa'	0.0
lex category (postags) = Identity(VB)	0.0
question prefix = 'what' ^ answer shape = 'a Aaaaa aaaa aaaa'	1.0
template arg pos tags = NN NN	-1.0
uses full parser pattern	1.0
question prefix = 'what' ^ answer shape = 'a aaaa'	0.0
template prefix why => what	0.0
question prefix = 'why' ^ isNumber	0.0
parser lexical rule = fullPatternProperty	0.0
question prefix = 'who' ^ answer shape = 'aaa aaa'	-1.0
question prefix = 'what' ^ isNumber	-1.0
question prefix = 'who' ^ isDate	0.0
lex category (postags) = Unary(WDT VB DT NN NN VB IN)	0.0
template pair count12	0.606315903365612
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaaa'	1.0
template prefix how many => what	-1.0
lex category (postags) = Unary(WDT VB DT NN IN NN)	-1.0
lex category (postags) = Unary(WRB VB JJ NN)	-1.0
tuple popularity_i	-0.5214998709918892
template arg pos tags = '' NN ''	0.0
template prefix UNK => who	0.0
question prefix = 'be' ^ answer shape = 'Aaaaa'	0.0
template arg pos tags = PRP NN	-1.0
lex type = Identity ^ leftTag = VB	-1.0
lex category (postags) = Unary(WRB VB DT JJ PRP NN)	1.0
template arg pos tags = NN IN NN	0.0
template arg pos tags = VBN JJ	0.0
question prefix = 'what' ^ answer shape = 'aaaa a. aaaa'	-1.0
question prefix = 'how' ^ answer shape = 'aaaa'	-2.0
question prefix = 'when' ^ answer shape = 'aaaa'	-1.0
question prefix = 'UNK' ^ isNumber	0.0
template arg pos tags = DT NN VBZ NN	0.0
template arg pos tags = DT JJ NN	0.0
question prefix = 'UNK' ^ isDate	0.0
question prefix = 'what' ^ answer shape = 'Aaaa'	0.0
template prefix UNK => what	-1.0
lex category (postags) = Unary(WDT NN VBP NN NN)	-1.0
parser lexical rule = fullPatternCopRel	0.0
steps	-2.25
question prefix = 'when' ^ answer shape = '1111'	1.0
lex category (postags) = Unary(WDT VB DT NN IN NN NN)	-1.0
action type = AbstractArgAction	-2.0
answer from namespace 'openie4'	-2.0
question prefix = 'how' ^ answer shape = 'aaa-AA, aaa-aaaa aaaa aaaa'	1.0
question prefix = 'who' ^ isNumber	0.0
parser lexical rule = fullPatternTypeDobj	1.0
lex category (postags) = Unary(WDT VB DT JJS NN IN DT NN)	1.0
question prefix = 'why' ^ isDate	0.0
lex type = Unary ^ rightTag = </s>	0.0
lex category (postags) = Unary(WDT VB NN IN NN)	-1.0
template arg pos tags = JJ JJ	1.0
question prefix = 'where' ^ answer shape = 'aaaa'	-1.0
query similarity with question	3.0980103230103238
lex category (postags) = Unary(WDT VB DT NN)	-1.0
question prefix = 'when' ^ isNumber	1.0
lex category (postags) = Unary(WDT NN VBP DT NN VB IN)	1.0
question prefix = 'how' ^ answer shape = 'Aaaaa'	-1.0
template prefix be => where	-1.0
template arg pos tags = JJ	-1.0
lex category (postags) = Unary(WDT VB VB JJR NN)	1.0
lex category (postags) = Identity(WRB)	0.0
template arg pos tags = NN IN NN NN	0.0
lex category (postags) = Unary(WP VBP VB NN IN DT NN)	-1.0
lex type = Identity ^ leftTag = WRB	0.0
question prefix = 'what year' and isDate	1.0
lex category (postags) = Unary(WP VBP NN VB IN)	1.0
question prefix = 'how many' ^ isDate	0.0
action type = TemplatePair	-2.0
lex category (postags) = Unary(WP VBP NN)	0.0
template prefix where => when	-1.0
question prefix = 'why' ^ answer shape = 'Aaa Aaaaa aaaa Aaaaa'	1.0
question prefix = 'where' ^ isNumber	0.0
lex category (postags) = Unary(WDT VB DT NN NN)	-1.0
question prefix = 'what' ^ answer shape = 'Aaaaa'	-1.0
lex type = Unary ^ rightTag = VB	-1.0
lex category (postags) = Unary(WP VBP DT NN VB IN)	0.0
template arg pos tags = NN	0.0
template is typed	2.0
tuple conf_f	-0.6478281617164612
lex category (postags) = Unary(WP VB VB VB DT JJ NN)	1.0
template arg pos tags = DT NN NN	0.0
lex category (postags) = Unary(WDT NN VBP DT JJ NN VB)	0.0
template arg pos tags = DT NN NN VB	0.0
lex category (postags) = Unary(WDT VB DT NN IN DT RBS JJ NN)	0.0
template prefix where => where	0.0
lex type = Identity ^ leftTag = CC	0.0
lex category (postags) = Unary(WP VBP VB JJ NN)	-1.0
lex category (postags) = Identity(.)	0.0
question prefix = 'why' ^ answer shape = 'AAA'	-1.0
