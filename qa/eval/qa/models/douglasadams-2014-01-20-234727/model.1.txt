lex category (postags) = Identity(DT IN)	1.0
question prefix = 'where' ^ answer shape = 'Aaa Aaaaa'	1.0
question prefix = 'UNK' ^ answer shape = 'aaa Aaaaa Aaaaa'	1.0
lex category (postags) = Unary(WDT NN VB JJ NNP)	0.0
lex category (postags) = Unary(WRB VBP DT NNP NN VB)	0.0
lex category (postags) = Unary(WRB VBP DT JJ NN VB)	0.0
lex category (postags) = Unary(WDT VB JJ NN NN)	1.0
lex category (postags) = Unary(NN VBP DT JJ NN VB)	1.0
question prefix = 'who' ^ answer shape = '1111 Aaaa'	-1.0
parser lexical rule = quantIdentity	2.0
lex category (postags) = Arg(JJ)	-3.0
parser lexical rule = finalNounHack	-1.0
lex category (postags) = Unary(WP VBP JJ NN VB)	0.0
lex category (postags) = Unary(WDT NN VB JJ NN VB)	1.0
action type = RelSynRule	-1.0
lex category (postags) = Unary(WDT NN VBP NN NN VB)	0.0
lex category (postags) = Arg(PRP NNS)	0.0
question prefix = 'who' ^ answer shape = 'Aaaaa AA'	1.0
lex category (postags) = Unary(WRB VBP DT NN NN VB)	-1.0
evidence similarity with question	5.7534804365824055
action type = ParsedQuestion	0.0
question prefix = 'where' ^ answer shape = 'aaa Aaaaa Aaaaa'	0.0
lex type = Identity ^ rightTag = WP	-1.0
parser lexical rule = npArg	-4.0
template arg pos tags = DT JJ NN NN	1.0
lex category (postags) = Unary(WP VB DT NN IN NN NN)	1.0
relSynRule pmi	1.0
lex category (postags) = Unary(WRB VBP DT NN)	0.0
lex category (postags) = Arg(PRP$ NN)	-1.0
lex type = Unary ^ rightTag = NN	-2.0
template arg pos tags = VBN	1.0
question prefix = 'what' ^ answer shape = 'aaa'	-1.0
lex category (postags) = Unary(WP VBP NN NN)	0.0
lex category (postags) = Unary(WDT NN VBP NN VB IN)	1.0
template arg pos tags = NN VBP NN JJ	-1.0
parser lexical rule = punctIdentity	1.0
answer is def noun	-1.0
lex category (postags) = Unary(VBP NN JJ NN .)	1.0
question prefix = 'what year' ^ isNumber	1.0
template arg pos tags = NN JJ	1.0
question prefix = 'who' ^ answer shape = 'Aaaa Aaaaa'	1.0
lex category (postags) = Unary(WDT NN VBP DT NNS VB)	0.0
minimum join key similarity	0.01959346685025487
question prefix = 'where' ^ answer shape = 'Aaaaa Aaa'	-1.0
template prefix what => when	-1.0
parser lexical rule = fullPatternCop	0.0
lex category (postags) = Unary(WDT VB JJ NN NNS NN)	0.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaaa Aaaaa: Aaaaa'	-1.0
lex category (postags) = Unary(WDT NN VBP NN NNS VBP IN)	2.0
template prefix when => what	0.0
lex category (postags) = Unary(WDT VB DT NN IN DT JJ NN)	-1.0
lex category (postags) = Unary(WDT VB DT NN IN NNP NNP)	1.0
question prefix = 'what' ^ answer shape = 'AA ?'	1.0
lex type = Unary ^ leftTag = CC	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaa'	0.0
lex category (postags) = Unary(WP VB NN IN NN)	0.0
question prefix = 'when' ^ answer shape = 'Aaaaa'	-1.0
lex category (postags) = Unary(WP VBP NNS VB IN)	0.0
lex category (postags) = Unary(WDT NN VB NN IN JJ NN)	0.0
lex type = Identity ^ leftTag = IN	3.0
dropNameOf	1.0
lex category (postags) = Unary(DT NN IN NN)	-1.0
question prefix = 'what' ^ answer shape = 'aaaa aaaa aaaa'	0.0
lex type = Identity ^ leftTag = VBN	0.0
template pair pmi	3.738047182559967
lex category (postags) = Unary(VBP DT NN NN NN .)	1.0
lex category (postags) = Unary(DT NN NN JJ NNS NN)	-1.0
lex type = Binary ^ rightTag = NN	-1.0
lex category (postags) = Unary(WP VB NN NNS NN)	0.0
question prefix = 'who' ^ answer shape = 'Aaaa AaAaaaa'	1.0
fbid join key violation	0.0
question prefix = 'what' ^ answer shape = '1111-11-11'	-1.0
lex category (postags) = Unary(WRB VBP NNP NNP)	-1.0
question prefix = 'what' ^ answer shape = 'Aaaa a'aaaa'	1.0
lex category (postags) = Unary(JJ NN NNS JJS NN)	1.0
lex category (postags) = Unary(WDT NN NNS VBP IN NN)	0.0
template arg pos tags = NN NN VB	3.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaa Aaaaa'	-1.0
lex category (postags) = Unary(WRB VBP DT NN VB)	-1.0
parser lexical rule = ofProp	-4.0
lex category (postags) = Unary(VB VBN NN NN .)	2.0
question prefix = 'what' ^ answer shape = 'aaa Aaaaa'	-1.0
question prefix = 'what' ^ answer shape = 'aaa Aaaa Aaaaa'	1.0
lex category (postags) = Unary(WRB VB NN NN)	0.0
parser lexical rule = fullPatternRelType	3.0
lex category (postags) = Identity(WDT)	1.0
question prefix = 'who' ^ answer shape = 'a aaaa aaaa aa'	-1.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaaa aa Aaaaa'	1.0
answer is linked to freebase	3.0
lex category (postags) = Unary(NN VBP NN VB)	3.0
lex category (postags) = Unary(WRB VB DT JJ NN VB)	-1.0
lex type = Arg ^ rightTag = TO	-1.0
question prefix = 'where' ^ answer shape = 'a aaaa aaaa'	0.0
posToOf	1.0
lex type = Binary ^ leftTag = NNS	0.0
template arg pos tags = VB NN	-1.0
question prefix = 'what' ^ answer shape = 'aaa aaaa'	0.0
parser lexical rule = fullPatternWhenOn	0.0
lex category (postags) = Unary(VBP DT JJ NN NN .)	0.0
question prefix = 'where' ^ answer shape = 'a Aaaaa'	-1.0
lex category (postags) = Unary(WDT NN VB JJ NN)	0.0
lex category (postags) = Binary(VBN)	0.0
lex category (postags) = Arg(DT JJ JJ NN)	0.0
lex category (postags) = Unary(WP VBP CD JJ)	0.0
template prefix where => what	3.0
template arg pos tags = JJ NNS	-1.0
question prefix = 'what year' ^ answer shape = 'Aaaaa Aaaa AAAA'	1.0
lex type = Identity ^ leftTag = TO	0.0
question prefix = 'who' ^ answer shape = 'aaaa AAA'	1.0
parser lexical rule = auxIdentity	-4.0
question prefix = 'what year' ^ answer shape = 'Aaaa'	-1.0
question prefix = 'what' ^ answer shape = '? Aaaaa'	-1.0
question prefix = 'what' ^ answer shape = 'Aaa-aaa'	-1.0
lex category (postags) = Unary(WDT NN VBP VBN NN VB)	1.0
lex category (postags) = Unary(WDT NN NN VBP NN VB IN)	0.0
lex category (postags) = Unary(WDT NN VBP DT NN VB)	2.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaa Aaaaa Aaaaa aa Aaaaa'	1.0
tuple conceptVagueness_f	0.7937223587928404
question prefix = 'what' ^ answer shape = 'Aaa aaaa'	2.0
lex category (postags) = Arg(DT NN IN NN NN)	0.0
lex category (postags) = Unary(WP DT NN VBP NN VB)	1.0
lex type = Identity ^ leftTag = <s>	-2.0
lex category (postags) = Binary(VB DT NN NN)	0.0
template arg pos tags = NN NNS	0.0
lex category (postags) = Unary(WRB VBP NN JJ VB)	1.0
template arg pos tags = DT NN IN	-1.0
lex type = Identity ^ rightTag = TO	1.0
question prefix = 'who' ^ answer shape = 'Aaaa'	0.0
question prefix = 'where' ^ answer shape = 'Aaaaa'	1.0
parser combinator rule = LeftApply	-2.0
tuple num_extrs_i	-0.5968893116415198
question prefix = 'who' ^ answer shape = 'Aaaa Aaaa'	1.0
lex category (postags) = Unary(VBP NN NN NN .)	1.0
question prefix = 'how' ^ answer shape = 'Aaa Aaaaa'	-1.0
lex category (postags) = Unary(VB DT NN NN JJ NN .)	1.0
template arg pos tags = JJ IN JJ NN	0.0
lex category (postags) = Unary(WP VB NN VB IN)	1.0
template arg pos tags = NN JJ IN	0.0
lex category (postags) = Unary(WDT NN VBP NN NN NN VB)	1.0
template arg pos tags = NN VB RB VB	-1.0
lex category (postags) = Binary(VBP IN)	-1.0
lex category (postags) = Arg(DT JJ NN NN)	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa aa aaa Aaaaa'a Aaaaa aa Aaaaa'	1.0
lex category (postags) = Unary(NN VBP NN NN VB)	-1.0
dropPP	-8.0
lex type = Identity ^ rightTag = VBP	1.0
lex category (postags) = Unary(WDT NN VBP JJ NN VBN IN)	1.0
lex category (postags) = Unary(WDT VB NNS DT JJ NN VB)	-1.0
template arg pos tags = VB TO VB NN	0.0
parser combinator rule = UnaryIdentity	2.0
lex type = Arg ^ rightTag = PRP$	1.0
lex category (postags) = Identity(JJS)	0.0
template arg pos tags = WRB VB NN NN	-1.0
lex type = Arg ^ leftTag = WDT	-3.0
lex type = Arg ^ rightTag = JJ	1.0
answer from namespace 'probase'	0.0
template arg pos tags = NN NN NN	0.0
template arg pos tags = NN IN JJ	0.0
action type = ProjectAction$	0.0
lex category (postags) = Unary(WP VB DT JJ NN NN VB)	-1.0
answer from namespace 'reverb'	-2.0
lex type = Unary ^ rightTag = PRP$	-1.0
template arg pos tags = VB NN NN	-1.0
lex category (postags) = Unary(NN IN NN)	-1.0
question prefix = 'what year' ^ answer shape = 'aaa Aaaaa Aaaa'	-1.0
question prefix = 'who' ^ answer shape = 'Aaa AaAaaa'	-1.0
lex category (postags) = Unary(WP VB JJ NN NN VB IN)	0.0
template arg pos tags = JJ NN	0.0
action type = DropStopAction$	-2.0
lex type = Identity ^ leftTag = NN	1.0
question prefix = 'what' ^ answer shape = 'aaa aaa aaaa'	-1.0
lex category (postags) = Unary(WDT NN VB NN IN NN)	-1.0
parser combinator rule = UnaryIntersect	-6.0
lex type = Unary ^ rightTag = TO	-1.0
lex type = Unary ^ leftTag = VB	-3.0
lex type = Binary ^ leftTag = WDT	3.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaaa Aaaaa Aaaaa'	0.0
template arg pos tags = DT JJ	0.0
lex category (postags) = Unary(WDT VB DT NN NN IN NN)	1.0
lex type = Identity ^ rightTag = VB	-4.0
lex type = Binary ^ leftTag = JJ	-3.0
lex category (postags) = Unary(WDT NN VB NN NN)	0.0
template arg pos tags = DT NN IN NN	0.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaa'	0.0
lex category (postags) = Unary(WP VBP VB DT NN NN)	0.0
template arg pos tags = VB DT JJ NN	1.0
lex type = Unary ^ leftTag = JJ	0.0
template prefix what => who	0.0
lex category (postags) = Arg(JJ JJ NN)	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaaa Aaaaa'	0.0
paraphrase lm	2.947393333333334
question prefix = 'what' ^ answer shape = 'Aaaaa aaaa'	1.0
num lexical rules	-3.600000000000002
parser lexical rule = fullPatternWhereIn	-4.0
question prefix = 'when' ^ answer shape = 'Aaaaa 1111'	-1.0
lex category (postags) = Binary(NN IN)	0.0
lex type = Unary ^ leftTag = IN	1.0
lex category (postags) = Identity(IN)	1.0
question prefix = 'what' ^ answer shape = '1.11'	-1.0
lex category (postags) = Unary(WDT NN VB VB IN NN)	1.0
dropTypeOf	2.0
lex type = Binary ^ leftTag = WP	-2.0
lex type = Binary ^ rightTag = IN	0.0
lex category (postags) = Unary(VB NN NN NN .)	0.0
template arg pos tags = DT NN	1.0
lex category (postags) = Unary(WDT VB DT NN IN NN JJ)	0.0
question prefix = 'who' ^ answer shape = 'Aa. Aaaa'	1.0
lex type = Binary ^ rightTag = RB	-1.0
question prefix = 'how' ^ answer shape = 'Aaaaa Aaaaa aaa aaa Aaaa Aaaaa'	1.0
template prefix where => what year	1.0
question prefix = 'who' ^ answer shape = 'Aaaaa'	0.0
template arg pos tags = DT	0.0
template arg pos tags = JJR VB NN	0.0
template arg pos tags = NN VBP JJ NN	0.0
template arg pos tags = IN NN	-1.0
lex category (postags) = Unary(NN VBP JJ NN VB)	0.0
lex category (postags) = Unary(WRB VB DT NN JJ VB)	-1.0
lex type = Arg ^ leftTag = IN	0.0
question prefix = 'what' ^ answer shape = 'AaaaaAaa'	-1.0
question prefix = 'what' ^ answer shape = '1111'	1.0
lex type = Identity ^ rightTag = JJ	-2.0
lex type = Binary ^ leftTag = NN	-1.0
lex category (postags) = Unary(WRB VBP NN)	-2.0
question prefix = 'UNK' ^ answer shape = 'Aaaaa'	-1.0
question prefix = 'where' ^ answer shape = 'AAAA AAAA'	1.0
lex category (postags) = Unary(WP VBP NN NN VBP VB)	1.0
lex category (postags) = Arg(DT NN)	2.0
template arg pos tags = CC NN	0.0
question prefix = 'how' ^ isDate	0.0
question prefix = 'what' ^ answer shape = 'a aaa aaaa'	1.0
lex category (postags) = Identity(CC)	-1.0
lex type = Binary ^ leftTag = DT	1.0
question prefix = 'how' ^ isNumber	0.0
num conjuncts	-3.0
action type = DropStopAction	1.0
lex category (postags) = Unary(WDT NN VB IN JJ NN)	0.0
question prefix = 'who' ^ answer shape = 'Aaa Aaaaa Aaaa aaaa'	1.0
lex type = Arg ^ rightTag = DT	-1.0
answer from namespace 'nell'	1.0
lex category (postags) = Identity(WP)	0.0
parser lexical rule = ignoreTypesIdentity	0.0
question prefix = 'who' ^ answer shape = 'aaa Aaaaa'	-1.0
template prefix who => who	1.0
lex category (postags) = Unary(WDT NN VBP NNS VB)	0.0
lex category (postags) = Unary(WP VB JJ NN)	1.0
lex category (postags) = Unary(WP VB DT NN IN NN)	1.0
template arg pos tags = VB NN NN NN	2.0
lex category (postags) = Binary(VBP DT NN IN)	0.0
answer from namespace 'freebase'	5.0
lex category (postags) = Unary(WDT NN NN VBP NN VB)	0.0
question prefix = 'what' ^ answer shape = '? Aaaa'	1.0
question prefix = 'what' ^ answer shape = 'Aaaa Aaaaa Aaaaa'	-1.0
parser lexical rule = conjIdentity	-1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaa Aaaa Aaaaa Aaaaa'	-1.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaa'	0.0
lex category (postags) = Unary(WDT NN VB VBN IN JJ NN)	0.0
lex category (postags) = Unary(WP VBP DT JJ NN VBP IN)	1.0
lex type = Identity ^ leftTag = RB	-1.0
lex type = Identity ^ rightTag = WRB	0.0
whatDate	-1.0
lex category (postags) = Binary(VB TO)	-1.0
lex category (postags) = Unary(WDT VB NN NN)	-1.0
lex category (postags) = Unary(WDT NN VB DT NN IN NN)	1.0
lex category (postags) = Unary(WDT VB DT JJ NN VB)	-1.0
lex category (postags) = Unary(WDT JJ NN VB JJ NN)	0.0
parser lexical rule = fullPatternDobj	-1.0
lex type = Binary ^ leftTag = IN	0.0
tuple freq_i	0.8922742175017611
question prefix = 'where' ^ answer shape = 'Aaaaa-Aaaaa'	-1.0
template arg pos tags = DT NN NN JJ	-1.0
question prefix = 'UNK' ^ answer shape = 'aaaa'	-1.0
question prefix = 'who' ^ answer shape = 'Aaaa Aaaa aa aaa Aaaaa Aaaaa'	-1.0
lex category (postags) = Unary(VBP NN NN .)	0.0
lex type = Identity ^ rightTag = CD	1.0
lex category (postags) = Identity(DT)	1.0
question prefix = 'when' and isDate	1.0
lex category (postags) = Arg(JJ NNS)	0.0
lex category (postags) = Unary(WDT NN VBP JJ NN VB)	-1.0
question prefix = 'what' ^ answer shape = 'aa AAA'	-1.0
query relation is light verb	4.0
question prefix = 'where' ^ answer shape = 'Aaa Aaaa Aaaa'	1.0
lex type = Arg ^ rightTag = NN	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa aa Aaaaa Aaaaa'	0.0
question prefix = 'where' ^ isDate	-2.0
lex category (postags) = Unary(WDT VB NN NNS NN)	0.0
lex type = Binary ^ leftTag = CD	1.0
template prefix what => UNK	-2.0
question prefix = 'who' ^ answer shape = 'aaa-aaaa-aaaa'	1.0
lex category (postags) = Unary(WP VB NN NN)	1.0
lex category (postags) = Unary(WDT NN VBP JJ NN VBP VB)	0.0
lex category (postags) = Arg(NN IN NN)	-1.0
lex type = Binary ^ rightTag = VB	-1.0
question prefix = 'what' ^ answer shape = 'Aaaaa'a Aaa'	-1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaa Aaaaa Aaaa'	1.0
lex category (postags) = Unary(WDT NN VB VBP VBN NN)	1.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaaa Aaaaa'	-1.0
template prefix who => where	-1.0
lex type = Arg ^ rightTag = </s>	-2.0
template prefix how => what	0.0
question prefix = 'where' ^ answer shape = 'Aaaa 1aa'	-1.0
parser lexical rule = fullPatternSubj	-2.0
question prefix = 'who' ^ answer shape = 'Aaa Aaaaa'	0.0
lex category (postags) = Unary(VBP DT NN NN .)	0.0
lex type = Unary ^ leftTag = WDT	1.0
template prefix what => why	1.0
template arg pos tags = NN VBP VBN NN	-1.0
lex category (postags) = Unary(WDT VB JJ NN)	-1.0
template prefix when => where	-1.0
action type = ExecutionAction$	0.0
question prefix = 'what year' ^ answer shape = '1111'	1.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaaa Aaaaa Aaaaa'	1.0
lex category (postags) = Identity(NN)	0.0
lex category (postags) = Arg(DT JJ NN)	0.0
lex category (postags) = Unary(WDT NN VB IN NN)	-1.0
parser lexical rule = npTitle	0.0
template arg pos tags = VBP DT JJ NN	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaa A.'	2.0
lex category (postags) = Arg(NN NN NN)	1.0
template arg pos tags = DT JJ NN VBN	0.0
parser combinator rule = RightApply	-3.0
lex category (postags) = Arg(DT NN IN NN)	0.0
lex category (postags) = Binary(VB NN IN)	0.0
parser lexical rule = fullPatternPoss	1.0
lex type = Arg ^ leftTag = VBP	-1.0
question prefix = 'what' ^ answer shape = 'aaaa aaaa'	-1.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaa'	0.0
template prefix what => where	-2.0
question prefix = 'UNK' ^ answer shape = 'Aaaaa Aaaaa'	1.0
lex category (postags) = Unary(WDT JJ NN VB IN NN)	1.0
lex type = Unary ^ leftTag = WRB	2.0
lex type = Binary ^ leftTag = WRB	-2.0
template pair count1	-4.926205560564995
question prefix = 'when' ^ answer shape = '1111 AAAA Aaaaa Aaa aaaa AAAA'	-1.0
lex type = Identity ^ rightTag = NNS	0.0
parser lexical rule = fullPatternTypeSubj	1.0
lex category (postags) = Unary(WDT NN VBP NN NN VBP DT NN NN IN)	0.0
lex type = Binary ^ leftTag = NNP	-1.0
question prefix = 'who' ^ answer shape = 'Aaaaa AAA'	1.0
parser lexical rule = adjPrepBinary	-1.0
question prefix = 'UNK' ^ answer shape = 'aa aaaa'	-1.0
lex category (postags) = Unary(WP VBP DT JJ NN NN)	0.0
lex category (postags) = Binary(VB NN NN)	-1.0
lex category (postags) = Unary(WDT VB IN NN)	0.0
lex type = Identity ^ rightTag = </s>	1.0
parser lexical rule = whIdentity	-2.0
lex category (postags) = Unary(WP VBP NN NN NN VB)	-1.0
lex category (postags) = Binary(VBP NN NN)	1.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaa'	2.0
lex category (postags) = Binary(VB DT JJ NN IN)	0.0
question prefix = 'what' ^ isDate	-1.0
lex type = Binary ^ rightTag = CD	-1.0
template prefix where => be	-1.0
question prefix = 'what' ^ answer shape = 'Aa aaaa'	1.0
parser lexical rule = fullPatternWhereIs	0.0
question prefix = 'where' ^ answer shape = '11 aaaa'	-1.0
lex category (postags) = Unary(NN VBP DT NN VB)	-1.0
lex category (postags) = Unary(WRB VB DT NN NN)	1.0
lex type = Binary ^ leftTag = VB	-1.0
question prefix = 'what year' ^ answer shape = '11 aaaa'	-1.0
template arg pos tags = VBP JJ NN NN	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa?Aaaaa Aaaa Aaaa'	2.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaaa'	1.0
lex type = Identity ^ leftTag = WP	1.0
lex type = Unary ^ leftTag = <s>	3.0
question prefix = 'when' ^ isDate	2.0
question prefix = 'what' ^ answer shape = 'Aaaaa aa Aa Aaaaa'	1.0
lex type = Identity ^ leftTag = VBP	0.0
question prefix = 'where' ^ answer shape = 'aaa aaaa'	0.0
lex category (postags) = Arg(DT NN NN)	1.0
question prefix = 'where' ^ answer shape = 'aaa Aaaaa Aaaa'	-1.0
lex category (postags) = Unary(WDT VB NN NNS NN NN)	1.0
lex category (postags) = Binary(VB)	0.0
question prefix = 'where' and isDate	-1.0
lex category (postags) = Unary(WDT VB JJ NN VB IN)	0.0
lex category (postags) = Binary(VBP NN)	0.0
lex category (postags) = Unary(WDT NN VBP NN VB)	-2.0
template arg pos tags = JJ VB NN NN	1.0
question prefix = 'what' ^ answer shape = 'aaaa Aaaaa'	-1.0
question prefix = 'where' ^ answer shape = 'a Aaaaa Aaaaa aaaa'	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa aa aaa Aaaaa'	-1.0
lex category (postags) = Binary(VB JJ NN IN)	0.0
lex category (postags) = Unary(WRB VBP NN NN NN VB)	0.0
parser lexical rule = haveProp	1.0
lex category (postags) = Unary(WP VB DT NN NN)	-1.0
lex category (postags) = Arg(JJ JJ)	1.0
question prefix = 'who' ^ answer shape = 'aaaa aaaa'	-2.0
template prefix what => what	6.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaa Aaaaa'	-1.0
lex type = Arg ^ rightTag = CD	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa aaa Aaaaa'	1.0
lex type = Arg ^ leftTag = WRB	0.0
lex category (postags) = Unary(NN VBP NN NN NN VB)	-1.0
lex type = Arg ^ leftTag = VB	0.0
lex category (postags) = Binary(VB PRP$ NN)	1.0
lex category (postags) = Unary(WDT NN VBP NN NN VBP VB)	0.0
lex type = Binary ^ rightTag = JJ	1.0
dropAdverb	1.0
template prefix what => be	-1.0
lex type = Arg ^ leftTag = JJS	0.0
template arg pos tags = WP VB JJ NN	0.0
lex category (postags) = Unary(VB DT JJ NN NN NN .)	0.0
lex category (postags) = Unary(VB VBN NNS NN NN .)	1.0
lex type = Binary ^ rightTag = VBP	0.0
template prefix who => what	-1.0
lex type = Identity ^ leftTag = CD	0.0
lex category (postags) = Binary(VBN IN)	1.0
template prefix what year => what	1.0
lex category (postags) = Unary(WRB VB NN JJ JJ VBP IN)	0.0
action type = ParaphraseRule	-2.0
question prefix = 'who' ^ answer shape = '111 aaaa'	1.0
question prefix = 'what year' ^ answer shape = 'AA1111'	1.0
dropFinalPrep	0.0
lex category (postags) = Unary(WP VB JJ NN VB)	0.0
question prefix = 'who' ^ answer shape = 'aaaa aaaa aaaa'	0.0
lex category (postags) = Binary(VB VBN)	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa aaaa aa Aaaaa'	1.0
lex category (postags) = Unary(WDT NN VBP IN NN)	0.0
question prefix = 'what' ^ answer shape = 'Aaa 11aa Aaaaa Aaaaa Aaaaa Aaaaa'	1.0
lex type = Arg ^ leftTag = TO	0.0
template pair count2	-1.7912167459726334
lex category (postags) = Unary(WDT NN VBP NN NN VB TO)	0.0
lex category (postags) = Binary(JJ IN)	-1.0
lex type = Unary ^ leftTag = NN	-1.0
lex category (postags) = Binary(VB IN)	0.0
parser lexical rule = reverbBinary	-1.0
question prefix = 'what' ^ answer shape = 'a aaaa aaaa'	0.0
lex category (postags) = Unary(WDT JJ NN VBP NN VB)	-2.0
question prefix = 'where' ^ answer shape = 'aaa AA.'	1.0
question prefix = 'where' ^ answer shape = 'aaa Aaaa Aaa'	1.0
lex category (postags) = Binary(DT NN IN)	-1.0
lex category (postags) = Unary(WDT VB DT JJ NN IN NN)	1.0
parser lexical rule = fullPatternDefn	-1.0
lex category (postags) = Binary(VB NN)	-1.0
lex category (postags) = Binary(VBP JJ NN NN)	-1.0
question prefix = 'what' ^ answer shape = 'aaaa'	-3.0
question prefix = 'where' ^ answer shape = 'Aaaaa Aaaa Aaaa'	0.0
parser lexical rule = adjArg	-2.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaaa'	0.0
lex category (postags) = Identity(VB)	-3.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaa'	-1.0
question prefix = 'who' ^ answer shape = 'Aaa Aaaaa Aaaaa Aaaaa'	0.0
lex category (postags) = Unary(DT NN IN DT NN)	-1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaa Aaaa'	-1.0
parser lexical rule = beInstanceOf	-1.0
lex type = Arg ^ rightTag = VB	-1.0
template arg pos tags = VBP NN NN NN	-1.0
lex category (postags) = Unary(WDT NN VB DT NN VB IN)	-1.0
lex type = Identity ^ rightTag = NN	-3.0
lex category (postags) = Unary(WDT NN VBP DT JJ NN VBN IN)	0.0
template arg pos tags = NN NN	-2.0
lex type = Arg ^ rightTag = VBP	-1.0
uses full parser pattern	4.0
question prefix = 'what' ^ answer shape = 'Aa. Aaaaa Aaaaa'	-1.0
question prefix = 'who' ^ answer shape = 'AAAA'	-1.0
question prefix = 'what' ^ answer shape = 'a aaaa'	0.0
question prefix = 'when' ^ answer shape = 'Aaaaa 11 , 1111'	1.0
lex category (postags) = Unary(WDT NN VBP NN NN VB IN)	1.0
parser lexical rule = possessiveUnary	1.0
question prefix = 'who' ^ answer shape = 'Aaa Aaaa'	1.0
parser lexical rule = fullPatternProperty	4.0
question prefix = 'who' ^ answer shape = 'aaa aaa'	-1.0
lex category (postags) = Identity(WRB JJ)	0.0
lex category (postags) = Unary(VB VBN NNS NN .)	-1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaaa aa Aaaaa'	1.0
question prefix = 'who' ^ answer shape = 'aaa aaaa aaaa'	1.0
question prefix = 'who' ^ answer shape = 'aaa aaaa'	-1.0
question prefix = 'what' ^ isNumber	0.0
lex category (postags) = Binary(VB DT NN IN)	-1.0
lex type = Identity ^ rightTag = NNP	0.0
lex category (postags) = Unary(VB NN NN NN NN .)	0.0
lex category (postags) = Binary(VBD)	0.0
template arg pos tags = VBN NN	-1.0
lex type = Arg ^ leftTag = VBD	0.0
template prefix UNK => when	1.0
lex type = Unary ^ leftTag = VBP	-2.0
question prefix = 'who' ^ isDate	-1.0
template pair count12	1.2556503936648369
lex category (postags) = Unary(VB DT NN NN NN .)	-1.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaaa'	2.0
template arg pos tags = VBP VBN NN	1.0
lex type = Identity ^ rightTag = VBN	2.0
lex category (postags) = Unary(WDT VB DT NN IN NN)	-1.0
question prefix = 'what' ^ answer shape = 'AAAA'	-2.0
lex category (postags) = Unary(WRB VB JJ NN)	0.0
tuple popularity_i	0.5640563554820734
template arg pos tags = WP VBP NN NN	-1.0
lex category (postags) = Unary(DT NN IN NN NN)	-1.0
lex category (postags) = Unary(VBP VBN NN NN .)	-1.0
lex type = Identity ^ rightTag = CC	0.0
template prefix UNK => who	-2.0
template arg pos tags = VB	-1.0
lex type = Identity ^ leftTag = VB	-2.0
lex category (postags) = Binary(VB VB VB)	1.0
template arg pos tags = NN IN DT NN	1.0
template arg pos tags = JJ VBP IN	-1.0
question prefix = 'what' ^ answer shape = 'aa aaaa aaaa'	-1.0
template arg pos tags = RB	1.0
lex type = Binary ^ rightTag = </s>	-3.0
lex category (postags) = Binary(VB VB)	-3.0
lex category (postags) = Unary(VB DT NN NN .)	-2.0
parser lexical rule = npOfArg	-1.0
template arg pos tags = NN IN NN	0.0
question prefix = 'what' ^ answer shape = 'aa a aaaa aaaa'	-1.0
lex category (postags) = Unary(WRB JJ NN VBP NN NN VB)	-1.0
question prefix = 'who' ^ answer shape = 'Aaa'	1.0
lex type = Identity ^ leftTag = WDT	0.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaaa aa Aaaaa'	0.0
lex category (postags) = Unary(WP VB CD VB)	-1.0
lex type = Unary ^ leftTag = WP	0.0
question prefix = 'what year' ^ isDate	0.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaaa'	-1.0
parser lexical rule = reverbBinaryNoPrep	-1.0
lex category (postags) = Unary(VB NNS NN .)	-1.0
template arg pos tags = NN JJ VB	0.0
question prefix = 'UNK' ^ isNumber	0.0
lex type = Unary ^ rightTag = VBN	0.0
question prefix = 'when' ^ answer shape = 'Aaaaa aaaa'	-1.0
lex type = Arg ^ rightTag = VBN	0.0
lex category (postags) = Unary(VB JJ NN NN .)	0.0
lex type = Binary ^ leftTag = <s>	-1.0
lex category (postags) = Unary(VB NN NN .)	-1.0
template arg pos tags = VBP DT NN	0.0
template arg pos tags = DT JJ NN	0.0
lex type = Identity ^ rightTag = IN	0.0
question prefix = 'UNK' ^ isDate	0.0
question prefix = 'what' ^ answer shape = 'Aaaa'	-1.0
template prefix UNK => what	0.0
lex type = Arg ^ rightTag = NNS	0.0
lex type = Identity ^ rightTag = JJS	0.0
lex category (postags) = Arg(NN NN)	0.0
lex category (postags) = Unary(NN NNS NN)	1.0
parser lexical rule = fullPatternCopRel	0.0
steps	-3.25
question prefix = 'when' ^ answer shape = '1111'	4.0
lex category (postags) = Unary(VB DT CD NN .)	1.0
lex category (postags) = Unary(WDT VB DT NN IN NN NN)	0.0
lex category (postags) = Unary(VB DT CD JJS NN .)	-1.0
action type = AbstractArgAction	-2.0
lex category (postags) = Arg(NNS)	0.0
lex category (postags) = Unary(WRB VB DT NN NNS VB)	0.0
lex type = Arg ^ rightTag = IN	-2.0
question prefix = 'who' ^ answer shape = 'a aaaa'	-1.0
answer from namespace 'openie4'	-2.0
lex type = Binary ^ leftTag = VBP	0.0
question prefix = 'where' ^ answer shape = 'a aaaa'	-1.0
question prefix = 'who' ^ answer shape = 'aaaa aaaa 11 aaaa'	-1.0
lex category (postags) = Unary(WRB VB NN)	1.0
lex category (postags) = Arg(NNP)	0.0
lex category (postags) = Unary(WRB VB NN VB)	0.0
question prefix = 'who' ^ answer shape = 'Aaa-Aaaaa'	-1.0
question prefix = 'who' ^ isNumber	-2.0
template arg pos tags = JJ NN VB	0.0
question prefix = 'where' ^ answer shape = 'aaaa aaaa'	-1.0
lex category (postags) = Arg(NN NNS)	0.0
question prefix = 'what' ^ answer shape = 'Aa. Aaaaa'	1.0
parser lexical rule = relMarkerIdentity	2.0
parser lexical rule = fullPatternTypeDobj	2.0
question prefix = 'who' ^ answer shape = 'aaa Aaaaa aaaa'	1.0
parser lexical rule = nounPrepBinary	-2.0
template arg pos tags = NNP NNP	1.0
template arg pos tags = NN VBP NN	-1.0
lex category (postags) = Unary(WP VBP NN NN VB)	0.0
question prefix = 'where' ^ answer shape = 'Aaa Aaaaa Aaaaa Aaa'	1.0
lex type = Unary ^ rightTag = </s>	6.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaaaa Aaaaa'	-1.0
lex category (postags) = Unary(WDT NN VBP DT JJ NN VBP JJ NN IN)	0.0
template arg pos tags = JJ JJ	0.0
question prefix = 'where' ^ answer shape = 'aaaa'	0.0
question prefix = 'where' ^ answer shape = 'aaaa-aaaa'	-1.0
lex category (postags) = Unary(WRB VB VBN NN)	1.0
query similarity with question	4.958574758574758
lex type = Arg ^ leftTag = NN	-2.0
lex type = Identity ^ rightTag = PRP	0.0
lex category (postags) = Unary(WDT NN VB NN VB)	1.0
question prefix = 'when' ^ isNumber	2.0
question prefix = 'UNK' ^ answer shape = 'Aaaaa aaa Aaaaa'	1.0
lex category (postags) = Arg(JJ NN)	-2.0
lex category (postags) = Unary(NN VBP NN JJ VB)	0.0
lex type = Identity ^ leftTag = JJ	-1.0
lex type = Unary ^ leftTag = CD	-1.0
question prefix = 'who' ^ answer shape = 'aaa Aaaaa Aaaaa'	-1.0
question prefix = 'who' ^ answer shape = 'aaa'	-2.0
lex category (postags) = Unary(WP VBP NN NN NN)	0.0
template arg pos tags = VBP PRP	0.0
question prefix = 'what' ^ answer shape = 'aaa AAA'	1.0
question prefix = 'when' ^ answer shape = 'Aaaaa 1 , 1111'	-1.0
template arg pos tags = JJ	-1.0
lex category (postags) = Arg(NN RB)	-1.0
lex category (postags) = Unary(WP VBP NN CD)	0.0
lex category (postags) = Identity(WRB)	-2.0
question prefix = 'where' ^ answer shape = 'aaa aaaa aaaa'	0.0
lex type = Identity ^ leftTag = WRB	-1.0
template prefix when => how many	0.0
question prefix = 'what year' and isDate	1.0
template prefix who => be	-1.0
lex category (postags) = Unary(WP VB DT NN IN NNP)	0.0
lex category (postags) = Unary(VB NN DT NN .)	-1.0
lex category (postags) = Unary(WP VBP NN VB IN)	0.0
action type = TemplatePair	-2.0
lex category (postags) = Unary(WP VBP NN)	-1.0
template prefix where => when	0.0
question prefix = 'where' ^ answer shape = 'aaa Aaaaa'	0.0
lex category (postags) = Unary(VB DT NNS NN .)	0.0
lex category (postags) = Identity(JJ)	0.0
template arg pos tags = JJ VB	-1.0
question prefix = 'who' ^ answer shape = 'Aa Aaaa'	1.0
lex category (postags) = Unary(WP VB NN NN VBZ NN)	0.0
question prefix = 'who' ^ answer shape = 'aaaa'	-3.0
lex category (postags) = Identity(CD)	0.0
question prefix = 'what' ^ answer shape = 'a aaaa aaa'	1.0
template arg pos tags = NN VB	1.0
lex category (postags) = Unary(WDT NN VBP VB DT JJ NN)	-1.0
question prefix = 'where' ^ isNumber	-2.0
lex category (postags) = Unary(WDT NN VBP NN VBP VB)	0.0
lex category (postags) = Unary(WP VB DT JJ NN IN NN)	0.0
lex category (postags) = Arg(NN JJ)	-2.0
question prefix = 'what' ^ answer shape = 'Aaaaa'	0.0
lex category (postags) = Unary(WP VBP JJ NNS VB)	1.0
lex type = Unary ^ rightTag = VB	-2.0
lex category (postags) = Binary(VB DT NN NN IN)	1.0
lex category (postags) = Unary(WRB VBP NN NNS VB)	-1.0
lex type = Identity ^ rightTag = DT	3.0
question prefix = 'who' ^ answer shape = 'Aaaa AaaAaaaa'	1.0
lex category (postags) = Identity(NNS)	0.0
parser lexical rule = fullPatternWhenIn	0.0
lex category (postags) = Unary(VB DT JJ NN NN .)	0.0
template arg pos tags = NN	4.0
question prefix = 'what' ^ answer shape = 'Aaaa Aaaaa'	0.0
template arg pos tags = JJ VBP	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa AAa'	-1.0
template arg pos tags = VBP NN VB	0.0
lex category (postags) = Unary(WDT NN VB VB DT JJ NN)	1.0
template prefix who => how many	-1.0
template is typed	4.0
lex category (postags) = Unary(WDT NN VBP NN VB NN IN)	-1.0
lex category (postags) = Binary(VB NN TO)	1.0
lex category (postags) = Arg(NN)	-4.0
tuple conf_f	-0.9343072772026062
lex category (postags) = Binary(JJ NN IN)	-1.0
lex category (postags) = Unary(WP VB DT NN)	-1.0
lex category (postags) = Arg(DT NN NN JJ)	0.0
question prefix = 'who' ^ answer shape = 'aaaa aaaa Aaaaa Aaaaa'	1.0
template arg pos tags = DT NN NN	-2.0
lex type = Identity ^ leftTag = NNP	1.0
lex category (postags) = Binary(VBP)	-2.0
question prefix = 'who' ^ answer shape = 'Aaaaa Aaa-aa Aaa'	1.0
template prefix when => UNK	-1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaaa Aaaa'	0.0
lex category (postags) = Unary(WDT NN VBP NN JJ VB)	2.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaa Aaaaa Aaaaa Aa.Aaa. Aaa Aaaaa Aaaa'	1.0
lex category (postags) = Identity(VBP)	-1.0
template prefix where => where	-2.0
lex category (postags) = Unary(VBP JJ NN NN .)	0.0
question prefix = 'who' ^ answer shape = 'AAA'	-1.0
template arg pos tags = WRB VBP NN JJ	1.0
lex type = Identity ^ leftTag = CC	-1.0
template arg pos tags = DT NN NN IN	-1.0
lex category (postags) = Unary(WDT NN VBP JJ NN)	-1.0
template arg pos tags = JJ NN IN	-1.0
question prefix = 'who' ^ answer shape = 'Aaaaa 11'	-1.0
lex category (postags) = Identity(.)	1.0
question prefix = 'what' ^ answer shape = 'Aaa Aaaaa Aaaaa'	1.0
question prefix = 'what' ^ answer shape = 'Aaaaa Aaaa Aaaa'	3.0
lex category (postags) = Unary(WDT NN VB NN VB RB VB)	-1.0
template prefix who => UNK	-1.0
question prefix = 'what' ^ answer shape = 'AA Aaaaa'	0.0
