what animal represents california?	woman	1.6821840196840183	what animal represents california? => $x: ($x, "is a kind of", animal) ($x, represents, california) => $x: ($x, "is a kind of", animal) ($x, represents, california) => (r0.arg1: A woman, r1.rel: represented the state of, r0.namespace: openie4, r1.arg2: California, r0.arg2: animal, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: A woman) => A woman; what animal represents california? => $x: ($x, "is a kind of", animal) ($x, represents, california) => $x: ($x, "is a kind of", animal) ($x, represents, california) => (r0.arg1: A woman, r1.rel: represented, r0.namespace: openie4, r1.arg2: the state of California, r0.arg2: animal, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: A woman) => A woman
what animal represents california?	roger	0.36771395271395146	what animal represents california? => $x: ($x, "type", animal) ($x, represents, california) => $x: ($x, "type", animal) ($x, represents, california) => (r0.arg1: Roger, r1.rel: represents, r0.namespace: freebase, r1.arg2: California, r0.arg2: Zoo Animal, r0.rel: Type, r1.namespace: reverb, r1.arg1: Roger) => Roger
what are italians classified as?	urban	1.3547627372627362	what are italians classified as? => $x: (italians, are classified as, $x) => $x: (italians, are classified as, $x) => (r0.arg1: Italian population, r0.namespace: reverb, r0.arg2: urban, r0.rel: is classified as) => urban; what are italians classified as? => $x: (italians, classified as, $x) => $x: (italians, classified as, $x) => (r0.arg1: Italian population, r0.namespace: reverb, r0.arg2: urban, r0.rel: is classified as) => urban
what are italians classified as?	?white?	0.5469084486941622	what are italians classified as? => $x: (italians, are classified as, $x) => $x: (italians, are classified as, $x) => (r0.arg1: an Italian immigrant, r0.namespace: reverb, r0.arg2: ?white?, r0.rel: would be classified as) => ?white?; what are italians classified as? => $x: (italians, classified as, $x) => $x: (italians, classified as, $x) => (r0.arg1: an Italian immigrant, r0.namespace: reverb, r0.arg2: ?white?, r0.rel: would be classified as) => ?white?
what are italians classified as?	a2 feminine	0.5469084486941622	what are italians classified as? => $x: (italians, classified as, $x) => $x: (italians, classified as, $x) => (r0.arg1: the Italian Club Cariparma Sigrade, r0.namespace: reverb, r0.arg2: A2 Feminine, r0.rel: classified as) => A2 Feminine
what are italians classified as?	low risk	0.5229445554445544	what are italians classified as? => $x: (italians, are classified as, $x) => $x: (italians, are classified as, $x) => (r0.arg1: Italian PoWs, r0.namespace: reverb, r0.arg2: low risk, r0.rel: were classified as) => low risk; what are italians classified as? => $x: (italians, classified as, $x) => $x: (italians, classified as, $x) => (r0.arg1: Italian PoWs, r0.namespace: reverb, r0.arg2: low risk, r0.rel: were classified as) => low risk
what are the official languages of argentina?	spanish	1.3547627372627362	what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: openie4, r0.arg2: Argentina, r0.rel: is the official language of) => Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Argentina , Chile and Peru, r0.rel: is the official language of) => Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: openie4, r0.arg2: Argentina, r0.rel: is the official language of) => Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Argentina , Chile and Peru, r0.rel: is the official language of) => Spanish
what are the official languages of argentina?	ba ? spanish	0.46702880452880274	what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: BA ? Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => BA ? Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: BA ? Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => BA ? Spanish
what are the official languages of argentina?	language spanish	0.46702880452880274	what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: LANGUAGE Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => LANGUAGE Spanish; what are the official languages of argentina? => $x: ($x, are the official languages of, argentina) => $x: ($x, are the official languages of, argentina) => (r0.arg1: LANGUAGE Spanish, r0.namespace: reverb, r0.arg2: Argentina, r0.rel: is the official language of) => LANGUAGE Spanish
what are the official languages of the eu?	english	0.4869987155701426	what are the official languages of the eu? => $x: ($x, are the official languages of, the eu) => $x: ($x, are the official languages of, the eu) => (r0.arg1: English, r0.namespace: reverb, r0.arg2: the EU, r0.rel: will be the official language of) => English; what are the official languages of the eu? => $x: ($x, are the official languages of, the eu) => $x: ($x, are the official languages of, the eu) => (r0.arg1: English, r0.namespace: reverb, r0.arg2: the EU, r0.rel: will be the official language of) => English
what are the sports in spain?	football	0.5069686266114825	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Football, r0.namespace: reverb, r0.arg2: Spain, r0.rel: is the most popular sport in) => Football; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Football, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => Football; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Football, r0.namespace: reverb, r0.arg2: Spain, r0.rel: is the most popular sport in) => Football; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Football, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => Football
what are the sports in spain?	spectator sports soccer	0.5069686266114825	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Spectator Sports Soccer, r0.namespace: reverb, r0.arg2: Spain, r0.rel: is the most popular sport in) => Spectator Sports Soccer; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: Spectator Sports Soccer, r0.namespace: reverb, r0.arg2: Spain, r0.rel: is the most popular sport in) => Spectator Sports Soccer
what are the sports in spain?	soccer	-0.07766076516076616	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: SOCCER, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => SOCCER; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: SOCCER, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => SOCCER
what are the sports in spain?	basketball	-0.07766076516076616	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: basketball, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => basketball; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: basketball, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => basketball; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: basketball, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => basketball; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: basketball, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport with fans in the country) => basketball
what are the sports in spain?	skiing	-0.08736836080586191	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: skiing, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => skiing; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: skiing, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => skiing
what are the sports in spain?	ski	-0.08736836080586191	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: ski, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => ski; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: ski, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => ski
what are the sports in spain?	golf	-0.08736836080586191	what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: GOLF, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => GOLF; what are the sports in spain? => $x: ($x, are the sports in, spain) => $x: ($x, are the sports in, spain) => (r0.arg1: GOLF, r0.namespace: nell, r0.arg2: SPAIN, r0.rel: is a sport taught in the country) => GOLF
what are the supreme court cases?	gwinnett	1.3609755984755973	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: Gwinnett, r0.namespace: reverb, r0.arg2: the Supreme Court case, r0.rel: was also the lead plaintiff in) => Gwinnett
what are the supreme court cases?	london	1.3512680028305017	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: London, r0.namespace: reverb, r0.arg2: the infamous United States Supreme Court case, r0.rel: is) => London
what are the supreme court cases?	miranda rights	1.3512680028305017	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: Miranda rights, r0.namespace: reverb, r0.arg2: the famous Supreme Court case, r0.rel: are named for) => Miranda rights
what are the supreme court cases?	ten commandments	1.3512680028305017	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: the Ten Commandments, r0.namespace: reverb, r0.arg2: the 1980 Supreme Court case, r0.rel: is based on) => the Ten Commandments
what are the supreme court cases?	action	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: The action, r0.namespace: reverb, r0.arg2: the Supreme Court case, r0.rel: was based on) => The action
what are the supreme court cases?	associated press	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: the Associated Press, r0.namespace: reverb, r0.arg2: the Supreme Court privacy case, r0.rel: was about) => the Associated Press
what are the supreme court cases?	constitution	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: the Constitution, r0.namespace: reverb, r0.arg2: the U. S. Supreme Court case, r0.rel: was) => the Constitution
what are the supreme court cases?	staub	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: Staub, r0.namespace: reverb, r0.arg2: the first Supreme Court case, r0.rel: will be) => Staub
what are the supreme court cases?	obama	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: Obama, r0.namespace: reverb, r0.arg2: the Supreme Court case, r0.rel: was thinking about) => Obama
what are the supreme court cases?	district	1.3387868084296644	what are the supreme court cases? => $x: ($x, are, the supreme court cases) => $x: ($x, are, the supreme court cases) => (r0.arg1: the District, r0.namespace: reverb, r0.arg2: the Supreme Court case, r0.rel: are affected by) => the District
what awards did marilyn monroe won?	50 years mambo	0.14512035583464056	what awards did marilyn monroe won? => $x: ($x, "type", awards) (marilyn monroe, won, $x) => $x: ($x, "type", awards) (marilyn monroe, won, $x) => (r0.arg1: 50 Years of Mambo, r1.rel: won, r0.namespace: freebase, r1.arg2: 50 years ago, r0.arg2: Award-Nominated Work, r0.rel: Type, r1.namespace: openie4, r1.arg1: Marilyn Monroe) => 50 Years of Mambo
what bible do catholics follow?	vulgate	0.3996658103800952	what bible do catholics follow? => $x: ($x, "type", bible) (catholics, follow, $x) => $x: ($x, "type", bible) (catholics, follow, $x) => (r0.arg1: Vulgate, r1.rel: follow, r0.namespace: freebase, r1.arg2: the Vulgate, r0.arg2: Bible translation, r0.rel: Type, r1.namespace: reverb, r1.arg1: modern Roman Catholic bibles) => Vulgate
what book did benjamin franklin published?	america	0.5305694305694296	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: AMERICA, r1.rel: published the first novel in, r0.namespace: freebase, r1.arg2: America, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Even Benjamin Franklin) => AMERICA; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: America, r1.rel: published the first novel in, r0.namespace: freebase, r1.arg2: America, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Even Benjamin Franklin) => America; what book did benjamin franklin published? => $x: ($x, "is a", book) (benjamin franklin, published, $x) => $x: ($x, "is a", book) (benjamin franklin, published, $x) => (r0.arg1: America, r1.rel: published the first novel in, r0.namespace: nell, r1.arg2: America, r0.arg2: book, r0.rel: is a, r1.namespace: reverb, r1.arg1: Even Benjamin Franklin) => America
what book did benjamin franklin published?	americas	0.4096507659007651	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Americas, r1.rel: published the first novel in, r0.namespace: freebase, r1.arg2: America, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Even Benjamin Franklin) => Americas
what book did benjamin franklin published?	america!	0.4096507659007651	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: America!, r1.rel: published the first novel in, r0.namespace: freebase, r1.arg2: America, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Even Benjamin Franklin) => America!
what book did benjamin franklin published?	poor richard	0.40188468938468835	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: first published, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: begins publishing, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: published, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: 1732AD Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: first published, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: begins publishing, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: published, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: 1732AD Benjamin Franklin) => Poor Richard; what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Poor Richard, r1.rel: published the first edition of, r0.namespace: freebase, r1.arg2: Poor Richard, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Poor Richard
what book did benjamin franklin published?	fd philadelphia	0.39217709373959275	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: FD PHILADELPHIA, r1.rel: publishes German newspaper in, r0.namespace: freebase, r1.arg2: Philadelphia, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => FD PHILADELPHIA
what book did benjamin franklin published?	philadelphia	0.39217709373959275	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Philadelphia, r1.rel: publishes German newspaper in, r0.namespace: freebase, r1.arg2: Philadelphia, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Philadelphia
what book did benjamin franklin published?	philadelphia now	0.39217709373959275	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Philadelphia then and now, r1.rel: publishes German newspaper in, r0.namespace: freebase, r1.arg2: Philadelphia, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Philadelphia then and now
what book did benjamin franklin published?	watt	0.37969589933875536	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Watt, r1.rel: published a book of, r0.namespace: freebase, r1.arg2: Watts, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Watt
what book did benjamin franklin published?	watts	0.37969589933875536	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Watts, r1.rel: published a book of, r0.namespace: freebase, r1.arg2: Watts, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Benjamin Franklin) => Watts
what book did benjamin franklin published?	cicero	0.3630543068043055	what book did benjamin franklin published? => $x: ($x, "type", book) (benjamin franklin, published, $x) => $x: ($x, "type", book) (benjamin franklin, published, $x) => (r0.arg1: Cicero, r1.rel: published, r0.namespace: freebase, r1.arg2: ' Cicero, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: 1744 Benjamin Franklin) => Cicero
what books are written by suzanne collins?	book q	0.46702880452880274	what books are written by suzanne collins? => $x: ($x, "is a", books) ($x, are written by, suzanne collins) => $x: ($x, "is a", books) ($x, are written by, suzanne collins) => (r0.arg1: The Book of Q, r1.rel: was written by, r0.namespace: nell, r1.arg2: Suzanne Collins, r0.arg2: book, r0.rel: is a, r1.namespace: openie4, r1.arg1: The book) => The Book of Q; what books are written by suzanne collins? => $x: ($x, "is a", books) ($x, are written by, suzanne collins) => $x: ($x, "is a", books) ($x, are written by, suzanne collins) => (r0.arg1: The Book of Q, r1.rel: is written by, r0.namespace: nell, r1.arg2: Suzanne Collins, r0.arg2: book, r0.rel: is a, r1.namespace: reverb, r1.arg1: The book) => The Book of Q
what books are written by suzanne collins?	hunger games	0.38169289044288934	what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: was written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: was written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: is a book written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: is a novel written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: was written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: was written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: is a book written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games; what books are written by suzanne collins? => $x: ($x, "type", books) ($x, are written by, suzanne collins) => $x: ($x, "type", books) ($x, are written by, suzanne collins) => (r0.arg1: The Hunger Games, r1.rel: is a novel written by, r0.namespace: freebase, r1.arg2: Suzanne Collins, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Hunger Games) => The Hunger Games
what books did agatha christie wrote?	books	0.8348336848336833	what books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: her book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Agatha Christie) => books; what books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: a book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Agatha Christie) => books; what books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: was superb at writing, r0.namespace: reverb, r1.arg2: this book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Agatha Christie) => books
what books did agatha christie wrote?	endless night	0.3630543068043055	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless Night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless Night; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless Night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless Night
what books did agatha christie wrote?	endless night.	0.3630543068043055	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night., r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night.
what books did agatha christie wrote?	death	0.3397560772560757	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Death
what books did agatha christie wrote?	deaths	0.3397560772560757	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Deaths, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Deaths; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Deaths, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Deaths
what books did agatha christie wrote?	death!	0.3397560772560757	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death!, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death!; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death!, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Death!
what books did agatha christie wrote?	death nile	0.10850885225885087	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death on the Nile, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death on the Nile, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death on the Nile; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death on the Nile, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death on the Nile, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death on the Nile
what books did agatha christie wrote?	murder mysteries	0.10850885225885087	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mysteries; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mysteries
what books did agatha christie wrote?	murder mystery series	0.10850885225885087	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mystery Series, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mystery Series; what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mystery Series, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mystery Series
what books did agatha christie wrote?	death nile.	0.10850885225885087	what books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death on the Nile., r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death on the Nile, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death on the Nile.
what books did ernest hemingway write?	novel	0.8348336848336833	what books did ernest hemingway write? => $x: ($x, "is a kind of", books) (ernest hemingway, write, $x) => $x: ($x, "is a kind of", books) (ernest hemingway, write, $x) => (r0.arg1: a novel, r1.rel: wrote, r0.namespace: reverb, r1.arg2: a novel, r0.arg2: book, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => a novel; what books did ernest hemingway write? => $x: ($x, "is a kind of", books) (ernest hemingway, write, $x) => $x: ($x, "is a kind of", books) (ernest hemingway, write, $x) => (r0.arg1: a novel, r1.rel: to write, r0.namespace: reverb, r1.arg2: a novel, r0.arg2: book, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => a novel
what books did ernest hemingway write?	books	0.8348336848336833	what books did ernest hemingway write? => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: the book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => books; what books did ernest hemingway write? => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: some of his books, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => books; what books did ernest hemingway write? => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => (r0.arg1: books, r1.rel: wrote some of, r0.namespace: reverb, r1.arg2: his books, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => books; what books did ernest hemingway write? => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => $x: ($x, "is an example of", books) (ernest hemingway, write, $x) => (r0.arg1: books, r1.rel: wrote some of, r0.namespace: reverb, r1.arg2: his books, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Home Ernest Hemingway) => books
what books did ernest hemingway write?	key-west	0.4869987155701426	what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: Key-West, r1.rel: wrote in, r0.namespace: nell, r1.arg2: Key West, r0.arg2: book, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => Key-West
what books did ernest hemingway write?	sun also rises	0.46702880452880274	what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The Sun Also Rises, r1.rel: wrote, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => The Sun Also Rises; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The sun also rises, r1.rel: wrote, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => The sun also rises; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The Sun Also Rises, r1.rel: wrote, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => The Sun Also Rises; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The sun also rises, r1.rel: wrote, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => The sun also rises; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The sun also rises, r1.rel: Works written, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book, r0.rel: Type, r1.namespace: freebase, r1.arg1: Ernest Hemingway) => The sun also rises; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The Sun Also Rises, r1.rel: Works written, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book, r0.rel: Type, r1.namespace: freebase, r1.arg1: Ernest Hemingway) => The Sun Also Rises; what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: the sun also rises, r1.rel: wrote, r0.namespace: nell, r1.arg2: The Sun Also Rises, r0.arg2: book, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => the sun also rises; what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: the sun also rises, r1.rel: Works written, r0.namespace: nell, r1.arg2: The Sun Also Rises, r0.arg2: book, r0.rel: is a, r1.namespace: freebase, r1.arg1: Ernest Hemingway) => the sun also rises
what books did ernest hemingway write?	one	0.46702880452880274	what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: One of Ours, r1.rel: wrote, r0.namespace: nell, r1.arg2: one, r0.arg2: book, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => One of Ours; what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: One of Ours, r1.rel: wrote, r0.namespace: nell, r1.arg2: once, r0.arg2: book, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => One of Ours; what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: One of Ours, r1.rel: wrote, r0.namespace: nell, r1.arg2: one, r0.arg2: book, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => One of Ours
what books did ernest hemingway write?	sun also rises.	0.3630543068043055	what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: The sun also rises., r1.rel: wrote, r0.namespace: freebase, r1.arg2: The Sun Also Rises, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => The sun also rises.
what books did ernest hemingway write?	key west	0.3630543068043055	what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: Key West, r1.rel: wrote in, r0.namespace: freebase, r1.arg2: Key West, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => Key West; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: In Key West, r1.rel: wrote in, r0.namespace: freebase, r1.arg2: Key West, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ernest Hemingway) => In Key West
what books did ernest hemingway write?	book q	0.21248334998334817	what books did ernest hemingway write? => $x: ($x, "is a", books) (ernest hemingway, write, $x) => $x: ($x, "is a", books) (ernest hemingway, write, $x) => (r0.arg1: The Book of Q, r1.rel: wrote, r0.namespace: nell, r1.arg2: the book, r0.arg2: book, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => The Book of Q
what books did ernest hemingway write?	essay	0.10850885225885087	what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: An essay, r1.rel: wrote in, r0.namespace: freebase, r1.arg2: an essay, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => An essay; what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: An Essay, r1.rel: wrote in, r0.namespace: freebase, r1.arg2: an essay, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => An Essay
what books did ernest hemingway write?	short story	0.08521062271062108	what books did ernest hemingway write? => $x: ($x, "type", books) (ernest hemingway, write, $x) => $x: ($x, "type", books) (ernest hemingway, write, $x) => (r0.arg1: A Short Story, r1.rel: wrote, r0.namespace: freebase, r1.arg2: a short story, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ernest Hemingway) => A Short Story
what celebrities has brody jenner dated?	avril lavigne	0.3630543068043055	what celebrities has brody jenner dated? => $x: ($x, "type", celebrities) (brody jenner, dated, $x) => $x: ($x, "type", celebrities) (brody jenner, dated, $x) => (r0.arg1: Avril Lavigne, r1.rel: is dating, r0.namespace: freebase, r1.arg2: Avril Lavigne, r0.arg2: Celebrity, r0.rel: Type, r1.namespace: openie4, r1.arg1: Brody Jenner) => Avril Lavigne; what celebrities has brody jenner dated? => $x: ($x, "type", celebrities) (brody jenner, dated, $x) => $x: ($x, "type", celebrities) (brody jenner, dated, $x) => (r0.arg1: Avril Lavigne, r1.rel: is dating, r0.namespace: freebase, r1.arg2: Avril Lavigne, r0.arg2: Celebrity, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brody Jenner) => Avril Lavigne
what characters does matt stone do?	cannibal	0.3630543068043055	what characters does matt stone do? => $x: ($x, "type", characters) (matt stone, do, $x) => $x: ($x, "type", characters) (matt stone, do, $x) => (r0.arg1: Cannibal, r1.rel: did, r0.namespace: freebase, r1.arg2: Cannibal, r0.arg2: Fictional Character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Matt Stone) => Cannibal; what characters does matt stone do? => $x: ($x, "type", characters) (matt stone, do, $x) => $x: ($x, "type", characters) (matt stone, do, $x) => (r0.arg1: Cannibal, r1.rel: did, r0.namespace: freebase, r1.arg2: Cannibal, r0.arg2: Film character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Matt Stone) => Cannibal; what characters does matt stone do? => $x: ($x, "type", characters) (matt stone, do, $x) => $x: ($x, "type", characters) (matt stone, do, $x) => (r0.arg1: Cannibal, r1.rel: did, r0.namespace: freebase, r1.arg2: Cannibal, r0.arg2: TV Character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Matt Stone) => Cannibal
what characters does matt stone do?	cartman	0.3630543068043055	what characters does matt stone do? => $x: ($x, "type", characters) (matt stone, do, $x) => $x: ($x, "type", characters) (matt stone, do, $x) => (r0.arg1: Cartman, r1.rel: does, r0.namespace: freebase, r1.arg2: Cartman, r0.arg2: TV Character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Matt Stone) => Cartman; what characters does matt stone do? => $x: ($x, "type", characters) (matt stone, do, $x) => $x: ($x, "type", characters) (matt stone, do, $x) => (r0.arg1: Cartman, r1.rel: does, r0.namespace: freebase, r1.arg2: Cartman, r0.arg2: Fictional Character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Matt Stone) => Cartman
what colleges did albert einstein teach at?	princeton university	0.39217709373959275	what colleges did albert einstein teach at? => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => (r0.arg1: Princeton University, r1.rel: was teaching at, r0.namespace: freebase, r1.arg2: Princeton University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Albert Einstein) => Princeton University; what colleges did albert einstein teach at? => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => (r0.arg1: Princeton University, r1.rel: was teaching at, r0.namespace: freebase, r1.arg2: Princeton University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Albert Einstein) => Princeton University; what colleges did albert einstein teach at? => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => $x: ($x, "type", colleges) (albert einstein, teach at, $x) => (r0.arg1: Princeton University, r1.rel: taught at, r0.namespace: freebase, r1.arg2: Princeton University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Prof. Albert Einstein) => Princeton University
what countries are located near egypt?	cyprus	0.5019761488511475	what countries are located near egypt? => $x: ($x, "type", countries) ($x, are located near, egypt) => $x: ($x, "type", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: freebase, r1.arg2: Egypt and Turkey, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus; what countries are located near egypt? => $x: ($x, "type", countries) ($x, are located near, egypt) => $x: ($x, "type", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: freebase, r1.arg2: Egypt and Turkey, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus; what countries are located near egypt? => $x: ($x, "type", countries) ($x, are located near, egypt) => $x: ($x, "type", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: freebase, r1.arg2: Egypt and Turkey, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus; what countries are located near egypt? => $x: ($x, "type", countries) ($x, are located near, egypt) => $x: ($x, "type", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: freebase, r1.arg2: Egypt and Turkey, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus; what countries are located near egypt? => $x: ($x, "type", countries) ($x, are located near, egypt) => $x: ($x, "type", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: freebase, r1.arg2: Egypt and Turkey, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus; what countries are located near egypt? => $x: ($x, "is a", countries) ($x, are located near, egypt) => $x: ($x, "is a", countries) ($x, are located near, egypt) => (r0.arg1: Cyprus, r1.rel: is located near, r0.namespace: nell, r1.arg2: Egypt and Turkey, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Cyprus) => Cyprus
what countries are members of the security council?	mexico	1.6977161727161714	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the National Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the National Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the National Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the National Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the National Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: MExico, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Mexico) => MExico; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: MExico, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mexico) => MExico; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: MExico, r1.rel: was a member of, r0.namespace: nell, r1.arg2: the National Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mexico) => MExico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: openie4, r1.arg2: the National Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is currently a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: would be a member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: was a member of, r0.namespace: reverb, r1.arg2: the National Security Council, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: is currently a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Mexico, r1.rel: would be a member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Mexico
what countries are members of the security council?	malaysia	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a third world country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Malaysia) => Malaysia; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Malaysia, r1.rel: was a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a third world country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Malaysia) => Malaysia
what countries are members of the security council?	brazil	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: OECD GID-DB country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: brazil, r1.rel: was a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Brazil) => brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: is a temporary member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ? Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was an at-large member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: is currently a member of, r0.namespace: openie4, r1.arg2: the U.N. Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: is a temporary member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ? Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: was an at-large member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Brazil, r1.rel: is currently a member of, r0.namespace: reverb, r1.arg2: the U.N. Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => Brazil
what countries are members of the security council?	turkey	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: freebase, r1.arg2: the national security council, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: nell, r1.arg2: the national security council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: are the members of, r0.namespace: openie4, r1.arg2: the national security council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is currently a member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkey; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Turkey, r1.rel: is a non-permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkey
what countries are members of the security council?	tanzania	1.6860670579420565	what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Tanzania, r1.rel: was a non-permanent member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Tanzania) => Tanzania
what countries are members of the security council?	india	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: country, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: is a non-permanent member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: need to be a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: has previously been a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: must be a permanent member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: will be a non-permanent member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: were a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: is a non-permanent member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: must be a permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: need to be a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: has previously been a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: India, r1.rel: will be a non-permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India
what countries are members of the security council?	indonesia	1.6860670579420565	what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Indonesia, r1.rel: is also a member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: Asian countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ( Indonesia) => Indonesia; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Indonesia, r1.rel: is also a member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ( Indonesia) => Indonesia
what countries are members of the security council?	nigeria	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: is also a member of, r0.namespace: openie4, r1.arg2: the U.N. Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: was a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Nigeria, r1.rel: is also a member of, r0.namespace: reverb, r1.arg2: the U.N. Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Nigeria) => Nigeria
what countries are members of the security council?	france	1.6860670579420565	what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "type", countries) ($x, are members of, the security council) => $x: ($x, "type", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: freebase, r1.arg2: the Security Council, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is a", countries) ($x, are members of, the security council) => $x: ($x, "is a", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: nell, r1.arg2: the Security Council, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a permanent member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a permanent member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is the first permanent member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: has been a permanent member of, r0.namespace: reverb, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a permanent member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is a permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: has been a permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: France, r1.rel: is the first permanent member of, r0.namespace: openie4, r1.arg2: the Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: France) => France
what countries are members of the security council?	poland	1.6860670579420565	what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Poland, r1.rel: was also a member of, r0.namespace: reverb, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Poland) => Poland; what countries are members of the security council? => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => $x: ($x, "is an example of", countries) ($x, are members of, the security council) => (r0.arg1: Poland, r1.rel: was also a member of, r0.namespace: openie4, r1.arg2: the UN Security Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Poland) => Poland
what countries are part of the uk?	ireland	0.8701340326340314	what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: ireland, r1.rel: was part of, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ireland) => ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: ireland, r1.rel: is still part of, r0.namespace: nell, r1.arg2: the UK., r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: ireland, r1.rel: was still part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: ireland, r1.rel: is also part of, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is also part of, r0.namespace: reverb, r1.arg2: the UK,, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK,, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK,, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is still part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: are part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was still part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: N.Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: used to be part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was an integral part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was a constituent part of, r0.namespace: reverb, r1.arg2: the UK., r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: was thus an integral part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: has n?t been part of, r0.namespace: reverb, r1.arg2: the UK, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ireland) => Ireland; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Ireland, r1.rel: is a part of, r0.namespace: reverb, r1.arg2: the UK. 20 French, r0.arg2: a designated country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: 19 Ireland) => Ireland
what countries are part of the uk?	america	0.8658979908979897	what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: America, r1.rel: has only been either part of, r0.namespace: openie4, r1.arg2: the uk, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: America, r1.rel: has only been either part of, r0.namespace: reverb, r1.arg2: the uk, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America
what countries are part of the uk?	britain	0.8348336848336833	what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: Britain, r1.rel: is part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Britain) => Britain; what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: Britain, r1.rel: is part of, r0.namespace: openie4, r1.arg2: the UK, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Britain) => Britain
what countries are part of the uk?	dylan	0.5315469786623623	what countries are part of the uk? => $x: ($x, "is a kind of", countries) ($x, are part of, the uk) => $x: ($x, "is a kind of", countries) ($x, are part of, the uk) => (r0.arg1: Dylan, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the UK small press scene, r0.arg2: slow country-waltz, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Dylan) => Dylan
what countries are part of the uk?	uk	0.5207939496401024	what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: The UK, r1.rel: are a growing part of, r0.namespace: reverb, r1.arg2: the UK funds market place, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the UK) => The UK
what countries are part of the uk?	gibraltar	0.5136252636252624	what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Gibraltar, r1.rel: has been part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Gibraltar) => Gibraltar; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Gibraltar, r1.rel: is technically part of, r0.namespace: freebase, r1.arg2: the UK,, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Gibraltar) => Gibraltar; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: gibraltar, r1.rel: has been part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Gibraltar) => gibraltar; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: gibraltar, r1.rel: is technically part of, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Gibraltar) => gibraltar
what countries are part of the uk?	scotland	0.5136252636252624	what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is another part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is another part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is another part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: UK constituent country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is another part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: UK constituent country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: UK constituent country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: freebase, r1.arg2: the UK, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: the UK...., r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: the UK...., r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: the UK...., r0.arg2: UK constituent country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "type", countries) ($x, are part of, the uk) => $x: ($x, "type", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: the UK...., r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is another part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Scotland) => Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: Scotland, r1.rel: is considered part of, r0.namespace: nell, r1.arg2: the UK...., r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => Scotland
what countries are part of the uk?	uk, ireland	0.5136252636252624	what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Ireland, r1.rel: was part of, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ireland) => UK, Ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Ireland, r1.rel: is still part of, r0.namespace: nell, r1.arg2: the UK., r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => UK, Ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Ireland, r1.rel: was still part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => UK, Ireland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Ireland, r1.rel: is also part of, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ireland) => UK, Ireland
what countries are part of the uk?	uk, scotland	0.5136252636252624	what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Scotland, r1.rel: is another part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => UK, Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Scotland, r1.rel: is part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => UK, Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Scotland, r1.rel: is part of, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Scotland) => UK, Scotland; what countries are part of the uk? => $x: ($x, "is a", countries) ($x, are part of, the uk) => $x: ($x, "is a", countries) ($x, are part of, the uk) => (r0.arg1: UK, Scotland, r1.rel: is considered part of, r0.namespace: nell, r1.arg2: the UK...., r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Scotland) => UK, Scotland
what countries are part of the uk?	china	0.5136252636252624	what countries are part of the uk? => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => $x: ($x, "is an example of", countries) ($x, are part of, the uk) => (r0.arg1: China, r1.rel: is part of, r0.namespace: reverb, r1.arg2: the UK Crafts Council Collection, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: China) => China
what countries do the united nations help?	cambodia	1.7010444912230613	what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Cambodia, r1.rel: helped ultimately bring peace to, r0.namespace: openie4, r1.arg2: Cambodia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Cambodia; what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Cambodia, r1.rel: helped ultimately bring peace to, r0.namespace: reverb, r1.arg2: Cambodia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Cambodia
what countries do the united nations help?	haiti	1.6941318297087515	what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Haiti, r1.rel: are all committed to helping, r0.namespace: reverb, r1.arg2: Haiti, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Haiti; what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Haiti, r1.rel: are all committed to helping, r0.namespace: openie4, r1.arg2: Haiti, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Haiti
what countries do the united nations help?	indonesia	1.6860670579420565	what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: freebase, r1.arg2: Indonesia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: freebase, r1.arg2: Indonesia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: freebase, r1.arg2: Indonesia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: freebase, r1.arg2: Indonesia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia; what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: INDONESIA, r1.rel: was supposed to help, r0.namespace: nell, r1.arg2: Indonesia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the United Nations) => INDONESIA; what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: reverb, r1.arg2: Indonesia, r0.arg2: Asian countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia; what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Indonesia, r1.rel: was supposed to help, r0.namespace: openie4, r1.arg2: Indonesia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United Nations) => Indonesia
what countries do the united nations help?	israel	1.6765359640359625	what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Israel, r1.rel: will help, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Israel; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Israel, r1.rel: will help, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Israel; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Israel, r1.rel: will help, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Israel; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Israel, r1.rel: will help, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Israel; what countries do the united nations help? => $x: ($x, "is an example of", countries) (the united nations, help, $x) => $x: ($x, "is an example of", countries) (the united nations, help, $x) => (r0.arg1: Israel, r1.rel: will help, r0.namespace: openie4, r1.arg2: Israel, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The United Nations) => Israel
what countries do the united nations help?	egypt	0.5305694305694296	what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: freebase, r1.arg2: Egypt, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: freebase, r1.arg2: Egypt, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: freebase, r1.arg2: Egypt, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: freebase, r1.arg2: Egypt, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: freebase, r1.arg2: Egypt, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt; what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: Egypt, r1.rel: has offered to help, r0.namespace: nell, r1.arg2: Egypt, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: ?The United Nations) => Egypt
what countries do the united nations help?	lebanon(	0.5089656177156164	what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: Lebanon(, r1.rel: has agreed to help, r0.namespace: nell, r1.arg2: Lebanon, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: The United Nations) => Lebanon(
what countries do the united nations help?	albania	0.49809311059310923	what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Albania, r1.rel: has also been helping, r0.namespace: freebase, r1.arg2: Albania, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Albania; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Albania, r1.rel: has also been helping, r0.namespace: freebase, r1.arg2: Albania, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Albania; what countries do the united nations help? => $x: ($x, "type", countries) (the united nations, help, $x) => $x: ($x, "type", countries) (the united nations, help, $x) => (r0.arg1: Albania, r1.rel: has also been helping, r0.namespace: freebase, r1.arg2: Albania, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United Nations) => Albania; what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: Albania, r1.rel: has also been helping, r0.namespace: nell, r1.arg2: Albania, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: The United Nations) => Albania
what countries do the united nations help?	uk, indonesia	0.49809311059310923	what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: UK, Indonesia, r1.rel: was supposed to help, r0.namespace: nell, r1.arg2: Indonesia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the United Nations) => UK, Indonesia
what countries do the united nations help?	s-africa	0.49809311059310923	what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: s-africa, r1.rel: helps families in, r0.namespace: nell, r1.arg2: Africa, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the United Nations) => s-africa
what countries do the united nations help?	?israel	0.48450247668997515	what countries do the united nations help? => $x: ($x, "is a", countries) (the united nations, help, $x) => $x: ($x, "is a", countries) (the united nations, help, $x) => (r0.arg1: ?Israel, r1.rel: will help, r0.namespace: nell, r1.arg2: Israel, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: The United Nations) => ?Israel
what countries does canada have trade agreements with?	chile	1.6833788006864916	what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has also concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has also concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has also concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has also concluded trade agreements with, r0.namespace: freebase, r1.arg2: Chile, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: chile, r1.rel: has concluded trade agreements with, r0.namespace: nell, r1.arg2: Chile, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => chile; what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: chile, r1.rel: has also concluded trade agreements with, r0.namespace: nell, r1.arg2: Chile, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => chile; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has concluded trade agreements with, r0.namespace: openie4, r1.arg2: Chile, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => Chile; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: Chile, r1.rel: has also concluded trade agreements with, r0.namespace: openie4, r1.arg2: Chile, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => Chile
what countries does canada have trade agreements with?	united states	1.6744179431679416	what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: the united states, r1.rel: has free trade agreements with, r0.namespace: nell, r1.arg2: the United States, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => the united states; what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: the united states, r1.rel: already has a trade agreement with, r0.namespace: nell, r1.arg2: the United States, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => the united states; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: the United States, r1.rel: has free trade agreements with, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => the United States; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: the United States, r1.rel: already has a trade agreement with, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => the United States; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: The United States, r1.rel: has free trade agreements with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => The United States; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: The United States, r1.rel: already has a trade agreement with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => The United States
what countries does canada have trade agreements with?	israel	1.6744179431679416	what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Israel, r1.rel: has a free trade agreement with, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Israel; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Israel, r1.rel: has a free trade agreement with, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Israel; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Israel, r1.rel: has a free trade agreement with, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Israel; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Israel, r1.rel: has a free trade agreement with, r0.namespace: freebase, r1.arg2: Israel, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Israel; what countries does canada have trade agreements with? => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => $x: ($x, "is an example of", countries) (canada, have trade agreements with, $x) => (r0.arg1: Israel, r1.rel: has a free trade agreement with, r0.namespace: openie4, r1.arg2: Israel, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada) => Israel
what countries does canada have trade agreements with?	colombia	0.5051531801531789	what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Colombia, r1.rel: has trade agreements with, r0.namespace: freebase, r1.arg2: Colombia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Colombia; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Colombia, r1.rel: has trade agreements with, r0.namespace: freebase, r1.arg2: Colombia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Colombia; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Colombia, r1.rel: has signed a free trade agreement with, r0.namespace: freebase, r1.arg2: Colombia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: That Canada) => Colombia; what countries does canada have trade agreements with? => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => $x: ($x, "type", countries) (canada, have trade agreements with, $x) => (r0.arg1: Colombia, r1.rel: has signed a free trade agreement with, r0.namespace: freebase, r1.arg2: Colombia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: That Canada) => Colombia; what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: colombia, r1.rel: has trade agreements with, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => colombia; what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: colombia, r1.rel: has signed a free trade agreement with, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: That Canada) => colombia
what countries does canada have trade agreements with?	?israel	0.48256095756095596	what countries does canada have trade agreements with? => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => $x: ($x, "is a", countries) (canada, have trade agreements with, $x) => (r0.arg1: ?Israel, r1.rel: has a free trade agreement with, r0.namespace: nell, r1.arg2: Israel, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => ?Israel
what countries does nafta include?	united states	1.7019522144522132	what countries does nafta include? => $x: ($x, "is a", countries) (nafta, include, $x) => $x: ($x, "is a", countries) (nafta, include, $x) => (r0.arg1: the united states, r1.rel: includes, r0.namespace: nell, r1.arg2: the United States, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: The NAFTA trading bloc) => the united states; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: the United States, r1.rel: includes, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The NAFTA trading bloc) => the United States; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: The United States, r1.rel: includes, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The NAFTA trading bloc) => The United States
what countries does nafta include?	mexico	1.6930565268065254	what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "type", countries) (nafta, include, $x) => $x: ($x, "type", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: freebase, r1.arg2: Mexico, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "is a", countries) (nafta, include, $x) => $x: ($x, "is a", countries) (nafta, include, $x) => (r0.arg1: MExico, r1.rel: included, r0.namespace: nell, r1.arg2: Mexico, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: NAFTA) => MExico; what countries does nafta include? => $x: ($x, "is a", countries) (nafta, include, $x) => $x: ($x, "is a", countries) (nafta, include, $x) => (r0.arg1: MExico, r1.rel: does include, r0.namespace: nell, r1.arg2: Mexico, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the NAFTA) => MExico; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: openie4, r1.arg2: Mexico, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: included, r0.namespace: reverb, r1.arg2: Mexico, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: openie4, r1.arg2: Mexico, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico; what countries does nafta include? => $x: ($x, "is an example of", countries) (nafta, include, $x) => $x: ($x, "is an example of", countries) (nafta, include, $x) => (r0.arg1: Mexico, r1.rel: does include, r0.namespace: reverb, r1.arg2: Mexico, r0.arg2: this process.Countries, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the NAFTA) => Mexico
what countries does nafta include?	dominican republic	0.51944982101232	what countries does nafta include? => $x: ($x, "is a", countries) (nafta, include, $x) => $x: ($x, "is a", countries) (nafta, include, $x) => (r0.arg1: the dominican republic, r1.rel: also includes, r0.namespace: nell, r1.arg2: the Dominican Republic, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: NAFTA and CAFTA) => the dominican republic
what countries does nafta include?	origin	0.51944982101232	what countries does nafta include? => $x: ($x, "is a", countries) (nafta, include, $x) => $x: ($x, "is a", countries) (nafta, include, $x) => (r0.arg1: origin, r1.rel: includes tough rules of, r0.namespace: nell, r1.arg2: origin, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: NAFTA) => origin
what countries have english as their official language?	gambia	0.46702880452880274	what countries have english as their official language? => $x: ($x, "is a", countries) ($x, have english as, their official language) => $x: ($x, "is a", countries) ($x, have english as, their official language) => (r0.arg1: the Gambia, r1.rel: have English as, r0.namespace: nell, r1.arg2: their official language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the Gambia) => the Gambia
what countries have english as their official language?	us-missouri	0.46702880452880274	what countries have english as their official language? => $x: ($x, "is a", countries) ($x, have english as, their official language) => $x: ($x, "is a", countries) ($x, have english as, their official language) => (r0.arg1: US-Missouri, r1.rel: have English as, r0.namespace: nell, r1.arg2: their official language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Missouri) => US-Missouri
what countries have english as their official language?	s-africa	0.46702880452880274	what countries have english as their official language? => $x: ($x, "is a", countries) ($x, have english as, their official language) => $x: ($x, "is a", countries) ($x, have english as, their official language) => (r0.arg1: s-africa, r1.rel: have English as, r0.namespace: nell, r1.arg2: their official language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Africa) => s-africa
what countries included in oceania?	us-hawaii	0.4869987155701426	what countries included in oceania? => $x: ($x, "is a", countries) ($x, included in, oceania) => $x: ($x, "is a", countries) ($x, included in, oceania) => (r0.arg1: US-Hawaii, r1.rel: is generally included in, r0.namespace: nell, r1.arg2: Oceania, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Hawaii) => US-Hawaii
what countries included in the uk?	uk	0.5100409206178425	what countries included in the uk? => $x: ($x, "is an example of", countries) ($x, included in, the uk) => $x: ($x, "is an example of", countries) ($x, included in, the uk) => (r0.arg1: The UK, r1.rel: are included in, r0.namespace: reverb, r1.arg2: the population and UK forces, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the UK) => The UK
what countries included in the uk?	band	0.4096507659007651	what countries included in the uk? => $x: ($x, "type", countries) ($x, included in, the uk) => $x: ($x, "type", countries) ($x, included in, the uk) => (r0.arg1: The Band, r1.rel: included gigs in, r0.namespace: freebase, r1.arg2: the UK., r0.arg2: Country Musical Groups, r0.rel: Type, r1.namespace: reverb, r1.arg1: the band) => The Band
what countries makes up the uk?	uk	0.5169535821321524	what countries makes up the uk? => $x: ($x, "is an example of", countries) ($x, makes up, the uk) => $x: ($x, "is an example of", countries) ($x, makes up, the uk) => (r0.arg1: The UK, r1.rel: make up, r0.namespace: reverb, r1.arg2: the largest UK charity, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the UK) => The UK; what countries makes up the uk? => $x: ($x, "is an example of", countries) ($x, makes up, the uk) => $x: ($x, "is an example of", countries) ($x, makes up, the uk) => (r0.arg1: The UK, r1.rel: will make up, r0.namespace: reverb, r1.arg2: the UK Youth Media Council, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the UK) => The UK
what countries makes up the uk?	acp countries	0.46702880452880274	what countries makes up the uk? => $x: ($x, "is a", countries) ($x, makes up, the uk) => $x: ($x, "is a", countries) ($x, makes up, the uk) => (r0.arg1: ACP countries, r1.rel: make up, r0.namespace: nell, r1.arg2: the UK, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: countries) => ACP countries; what countries makes up the uk? => $x: ($x, "is a", countries) ($x, makes up, the uk) => $x: ($x, "is a", countries) ($x, makes up, the uk) => (r0.arg1: ACP countries, r1.rel: make up, r0.namespace: nell, r1.arg2: the UK,, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: the countries) => ACP countries; what countries makes up the uk? => $x: ($x, "is a", countries) ($x, makes up, the uk) => $x: ($x, "is a", countries) ($x, makes up, the uk) => (r0.arg1: ACP countries, r1.rel: make up, r0.namespace: nell, r1.arg2: the UK., r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: the countries) => ACP countries
what countries speak french as a first language?	canada.	0.46702880452880274	what countries speak french as a first language? => $x: ($x, "is a", countries) ($x, speak french as, a first language) => $x: ($x, "is a", countries) ($x, speak french as, a first language) => (r0.arg1: CANADA., r1.rel: speaks French as, r0.namespace: nell, r1.arg2: a first language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => CANADA.
what countries speak french as a first language?	canada - ns	0.46702880452880274	what countries speak french as a first language? => $x: ($x, "is a", countries) ($x, speak french as, a first language) => $x: ($x, "is a", countries) ($x, speak french as, a first language) => (r0.arg1: Canada - Ns, r1.rel: speak French as, r0.namespace: nell, r1.arg2: a first language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canadians) => Canada - Ns
what countries speak french as a first language?	canada -	0.46702880452880274	what countries speak french as a first language? => $x: ($x, "is a", countries) ($x, speak french as, a first language) => $x: ($x, "is a", countries) ($x, speak french as, a first language) => (r0.arg1: Canada - On, r1.rel: speaks French as, r0.namespace: nell, r1.arg2: a first language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Canada) => Canada - On
what countries speak french as a first language?	canada	0.3778804528804516	what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Yacht-racing Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada; what countries speak french as a first language? => $x: ($x, "type", countries) ($x, speak french as, a first language) => $x: ($x, "type", countries) ($x, speak french as, a first language) => (r0.arg1: Canada, r1.rel: speaks French as, r0.namespace: freebase, r1.arg2: a first language, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Canada) => Canada
what countries were part of the spanish empire?	united states	1.6860670579420565	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: the united states, r1.rel: were part of, r0.namespace: nell, r1.arg2: the Spanish Empire or Mexico, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the United States) => the united states; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: the United States, r1.rel: were part of, r0.namespace: openie4, r1.arg2: the Spanish Empire or Mexico, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The United States, r1.rel: were part of, r0.namespace: reverb, r1.arg2: the Spanish Empire or Mexico, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => The United States
what countries were part of the spanish empire?	netherlands	1.6765359640359625	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: nell, r1.arg2: the Spanish empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: openie4, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: openie4, r1.arg2: the Spanish empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: reverb, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: were part of, r0.namespace: reverb, r1.arg2: the Spanish empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: openie4, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: openie4, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: reverb, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Netherlands) => The Netherlands; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Netherlands, r1.rel: was a valuable part of, r0.namespace: reverb, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Netherlands) => The Netherlands
what countries were part of the spanish empire?	philippines	1.6650986513486496	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: the philippines, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: the Philippines) => the philippines; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: the philippines, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the Philippines) => the philippines; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Philippines, r1.rel: was part of, r0.namespace: openie4, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Philippines) => The Philippines; what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: The Philippines, r1.rel: was part of, r0.namespace: openie4, r1.arg2: the Spanish Empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Philippines) => The Philippines
what countries were part of the spanish empire?	?the netherlands	1.3128259240759226	what countries were part of the spanish empire? => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => $x: ($x, "is an example of", countries) ($x, were part of, the spanish empire) => (r0.arg1: ?The Netherlands, r1.rel: was part of, r0.namespace: reverb, r1.arg2: the Spanish empire, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ?The Netherlands) => ?The Netherlands
what countries were part of the spanish empire?	us-california	0.48256095756095596	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: US-California, r1.rel: was one part of, r0.namespace: nell, r1.arg2: the Spanish empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: California) => US-California
what countries were part of the spanish empire?	us-arizona	0.46702880452880274	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: US-Arizona, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Arizona) => US-Arizona
what countries were part of the spanish empire?	us-florida	0.46702880452880274	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: US-Florida, r1.rel: was a part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Florida) => US-Florida; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: US-Florida, r1.rel: was a part of, r0.namespace: nell, r1.arg2: the Spanish empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Florida) => US-Florida
what countries were part of the spanish empire?	us-new mexico	0.46702880452880274	what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: US-New Mexico, r1.rel: was a part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: New Mexico) => US-New Mexico
what countries were part of the spanish empire?	puerto rico	0.46702880452880274	what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto Rico, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Puerto Rico) => Puerto Rico; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto rico, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Puerto Rico) => Puerto rico; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: Puerto rico, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Puerto Rico) => Puerto rico
what countries were part of the spanish empire?	ecuador	0.46702880452880274	what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => $x: ($x, "type", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Spanish Empire, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ecuador) => Ecuador; what countries were part of the spanish empire? => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => $x: ($x, "is a", countries) ($x, were part of, the spanish empire) => (r0.arg1: Ecuador, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Spanish Empire, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Ecuador) => Ecuador
what country is dyson made?	us-california	0.5291574166574157	what country is dyson made? => $x: ($x, "is a", country) (dyson, made, $x) => $x: ($x, "is a", country) (dyson, made, $x) => (r0.arg1: US-California, r1.rel: also made racing history at, r0.namespace: nell, r1.arg2: California, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Dyson Racing) => US-California
what county is kansas city kansas?	leavenworth city	0.46702880452880274	what county is kansas city kansas? => $x: ($x, "is a", county) ($x, is, kansas city kansas) => $x: ($x, "is a", county) ($x, is, kansas city kansas) => (r0.arg1: Leavenworth City, r1.rel: was, r0.namespace: nell, r1.arg2: Kansas City, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Leavenworth) => Leavenworth City
what county is kansas city kansas?	city charlottesville	0.46702880452880274	what county is kansas city kansas? => $x: ($x, "is a", county) ($x, is, kansas city kansas) => $x: ($x, "is a", county) ($x, is, kansas city kansas) => (r0.arg1: City Of Charlottesville, r1.rel: were, r0.namespace: nell, r1.arg2: Kansas City, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Charlottesville) => City Of Charlottesville
what county is kansas city kansas?	oklahoma city	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Oklahoma City, r1.rel: were, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Oklahoma City) => Oklahoma City
what county is kansas city kansas?	williams	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Williams, r1.rel: was, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Williams) => Williams
what county is kansas city kansas?	metropolis	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Metropolis, r1.rel: was, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Metropolis) => Metropolis
what county is kansas city kansas?	charlottesville	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Charlottesville, r1.rel: were, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: US County, r0.rel: Type, r1.namespace: reverb, r1.arg1: Charlottesville) => Charlottesville; what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Charlottesville, r1.rel: were, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Charlottesville) => Charlottesville; what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Charlottesville, r1.rel: were, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: U.S. county, r0.rel: Type, r1.namespace: reverb, r1.arg1: Charlottesville) => Charlottesville
what county is kansas city kansas?	north	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: North, r1.rel: is, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: North) => North
what county is kansas city kansas?	leavenworth	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Leavenworth, r1.rel: was, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Leavenworth) => Leavenworth
what county is kansas city kansas?	blackwood	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Blackwood, r1.rel: was, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Blackwood) => Blackwood
what county is kansas city kansas?	kansas	0.37969589933875536	what county is kansas city kansas? => $x: ($x, "type", county) ($x, is, kansas city kansas) => $x: ($x, "type", county) ($x, is, kansas city kansas) => (r0.arg1: Kansas, r1.rel: are, r0.namespace: freebase, r1.arg2: Kansas City, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Kansas) => Kansas
what county is san francisco?	kent	0.543277555777555	what county is san francisco? => $x: ($x, "is a", county) ($x, is, san francisco) => $x: ($x, "is a", county) ($x, is, san francisco) => (r0.arg1: Kent, r1.rel: is, r0.namespace: nell, r1.arg2: a San Francisco programmer, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ken) => Kent; what county is san francisco? => $x: ($x, "is a", county) ($x, is, san francisco) => $x: ($x, "is a", county) ($x, is, san francisco) => (r0.arg1: Kent, r1.rel: can be contacted in, r0.namespace: nell, r1.arg2: the San Francisco office, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ken) => Kent; what county is san francisco? => $x: ($x, "is a", county) ($x, is, san francisco) => $x: ($x, "is a", county) ($x, is, san francisco) => (r0.arg1: Kent, r1.rel: was born in, r0.namespace: nell, r1.arg2: the San Francisco Bay Area, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ken) => Kent; what county is san francisco? => $x: ($x, "is a", county) ($x, is, san francisco) => $x: ($x, "is a", county) ($x, is, san francisco) => (r0.arg1: Kent, r1.rel: is very active in, r0.namespace: nell, r1.arg2: the San Francisco Bay Area, r0.arg2: county, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ken) => Kent
what county is san francisco?	turkey	0.4160048285048279	what county is san francisco? => $x: ($x, "type", county) ($x, is, san francisco) => $x: ($x, "type", county) ($x, is, san francisco) => (r0.arg1: Turkey, r1.rel: could be shipped alive to, r0.namespace: freebase, r1.arg2: San Francisco San Francisco, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: turkeys) => Turkey
what county is san francisco?	carson	0.37969589933875536	what county is san francisco? => $x: ($x, "type", county) ($x, is, san francisco) => $x: ($x, "type", county) ($x, is, san francisco) => (r0.arg1: Carson, r1.rel: is, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Carson) => Carson
what county is san francisco?	south san francisco	0.37969589933875536	what county is san francisco? => $x: ($x, "type", county) ($x, is, san francisco) => $x: ($x, "type", county) ($x, is, san francisco) => (r0.arg1: South San Francisco, r1.rel: is, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: South San Francisco) => South San Francisco
what county is san francisco?	mccall	0.37969589933875536	what county is san francisco? => $x: ($x, "type", county) ($x, is, san francisco) => $x: ($x, "type", county) ($x, is, san francisco) => (r0.arg1: McCall, r1.rel: were, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: call) => McCall
what county is san francisco?	castle	0.37969589933875536	what county is san francisco? => $x: ($x, "type", county) ($x, is, san francisco) => $x: ($x, "type", county) ($x, is, san francisco) => (r0.arg1: Castle, r1.rel: is, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: ' Castle) => Castle
what currency does singapore use?	currency	0.46702880452880274	what currency does singapore use? => $x: ($x, "is a", currency) (singapore, use, $x) => $x: ($x, "is a", currency) (singapore, use, $x) => (r0.arg1: To Currency, r1.rel: uses, r0.namespace: nell, r1.arg2: currency, r0.arg2: currency, r0.rel: is a, r1.namespace: reverb, r1.arg1: Singapore) => To Currency
what currency does singapore use?	singapore dollar	-0.2670621045621062	what currency does singapore use? => $x: ($x, "type", currency) (singapore, use, $x) => $x: ($x, "type", currency) (singapore, use, $x) => (r0.arg1: Singapore dollar, r1.rel: Currency Used, r0.namespace: freebase, r1.arg2: Singapore dollar, r0.arg2: Currency, r0.rel: Type, r1.namespace: freebase, r1.arg1: Singapore) => Singapore dollar; what currency does singapore use? => $x: ($x, "is a", currency) (singapore, use, $x) => $x: ($x, "is a", currency) (singapore, use, $x) => (r0.arg1: Singapore dollar, r1.rel: Currency Used, r0.namespace: nell, r1.arg2: Singapore dollar, r0.arg2: currency, r0.rel: is a, r1.namespace: freebase, r1.arg1: Singapore) => Singapore dollar
what currency does singapore use?	singapore dollars	-1.098880286380288	what currency does singapore use? => $x: ($x, "is a", currency) (singapore, use, $x) => $x: ($x, "is a", currency) (singapore, use, $x) => (r0.arg1: Singapore Dollars, r1.rel: Currency Used, r0.namespace: nell, r1.arg2: Singapore dollar, r0.arg2: currency, r0.rel: is a, r1.namespace: freebase, r1.arg1: Singapore) => Singapore Dollars
what currency is used in panama?	u.s. dollar	0.4869987155701426	what currency is used in panama? => $x: ($x, "is a", currency) ($x, is used in, panama) => $x: ($x, "is a", currency) ($x, is used in, panama) => (r0.arg1: u.s. dollar, r1.rel: is widely used in, r0.namespace: nell, r1.arg2: Panama, r0.arg2: currency, r0.rel: is a, r1.namespace: reverb, r1.arg1: U.S. Dollar) => u.s. dollar
what degrees did barack obama get?	high school	0.37969589933875536	what degrees did barack obama get? => $x: ($x, "type", degrees) (barack obama, get, $x) => $x: ($x, "type", degrees) (barack obama, get, $x) => (r0.arg1: High school, r1.rel: got out of, r0.namespace: freebase, r1.arg2: High School, r0.arg2: Degree, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => High school
what degrees does romney have?	water	1.368741674991674	what degrees does romney have? => $x: ($x, "is an example of", degrees) (romney, have, $x) => $x: ($x, "is an example of", degrees) (romney, have, $x) => (r0.arg1: Water, r1.rel: had walked on, r0.namespace: reverb, r1.arg2: water, r0.arg2: a first-degree substance, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Romney) => Water
what degrees does romney have?	model	1.368741674991674	what degrees does romney have? => $x: ($x, "is an example of", degrees) (romney, have, $x) => $x: ($x, "is an example of", degrees) (romney, have, $x) => (r0.arg1: model, r1.rel: has clearly viewed his efforts as, r0.namespace: reverb, r1.arg2: a model, r0.arg2: the high degree, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Romney) => model
what did andy irons die from?	heart attack	1.04430153180153	what did andy irons die from? => $x: (andy irons, die from, $x) => $x: (andy irons, die from, $x) => (r0.arg1: Andy Irons, r0.namespace: openie4, r0.arg2: a heart attack, r0.rel: died from) => a heart attack
what did bobby darin die of?	heart failure	1.04430153180153	what did bobby darin die of? => $x: (bobby darin, die of, $x) => $x: (bobby darin, die of, $x) => (r0.arg1: Bobby Darin, r0.namespace: openie4, r0.arg2: heart failure, r0.rel: died of) => heart failure
what did bobby darin die of?	heart disease	1.04430153180153	what did bobby darin die of? => $x: (bobby darin, die of, $x) => $x: (bobby darin, die of, $x) => (r0.arg1: Bobby Darin, r0.namespace: openie4, r0.arg2: heart disease, r0.rel: died of) => heart disease
what did charles babbage discover?	1983	0.30567626817626753	what did charles babbage discover? => $x: (charles babbage, discover, $x) => $x: (charles babbage, discover, $x) => (r0.arg1: the autopsy report for Charles Babbage, r0.namespace: openie4, r0.arg2: 1983, r0.rel: was discovered In) => 1983
what did elvis presley died from?	overdose	0.46702880452880274	what did elvis presley died from? => $x: (elvis presley, died from, $x) => $x: (elvis presley, died from, $x) => (r0.arg1: Elvis Presley, r0.namespace: reverb, r0.arg2: an overdose, r0.rel: died from) => an overdose
what did george washington carver made?	plastic	1.3268048618048605	what did george washington carver made? => $x: (george washington carver, made, $x) => $x: (george washington carver, made, $x) => (r0.arg1: George Washington Carver, r0.namespace: reverb, r0.arg2: plastic, r0.rel: was making) => plastic
what did george washington carver made?	peanut butter	1.2988469863469847	what did george washington carver made? => $x: (george washington carver, made, $x) => $x: (george washington carver, made, $x) => (r0.arg1: George Washington Carver, r0.namespace: reverb, r0.arg2: peanut butter, r0.rel: made) => peanut butter
what did george washington carver made?	phonograph needle	0.49498667998667856	what did george washington carver made? => $x: (george washington carver, made, $x) => $x: (george washington carver, made, $x) => (r0.arg1: George Washington Carver, r0.namespace: reverb, r0.arg2: a phonograph needle, r0.rel: once made) => a phonograph needle
what did george washington carver made?	first computer	0.21248334998334817	what did george washington carver made? => $x: (george washington carver, made, $x) => $x: (george washington carver, made, $x) => (r0.arg1: George Washington Carver, r0.namespace: openie4, r0.arg2: the first computer, r0.rel: made) => the first computer
what did gloria steinem founded?	ms. magazine	0.5369234931734923	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: reverb, r0.arg2: Ms. Magazine, r0.rel: founded) => Ms. Magazine; what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: reverb, r0.arg2: Ms. Magazine, r0.rel: co-founded) => Ms. Magazine; what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: A300 Auditorium Gloria Steinem, r0.namespace: reverb, r0.arg2: Ms. Magazine, r0.rel: founded) => Ms. Magazine
what did gloria steinem founded?	women's action alliance	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: Women's Action Alliance, r0.rel: Organizations founded) => Women's Action Alliance
what did gloria steinem founded?	new york media holdings, llc	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: New York Media Holdings, LLC, r0.rel: Organizations founded) => New York Media Holdings, LLC
what did gloria steinem founded?	choice usa	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: Choice USA, r0.rel: Organizations founded) => Choice USA
what did gloria steinem founded?	coalition labor union women	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: Coalition of Labor Union Women, r0.rel: Organizations founded) => Coalition of Labor Union Women
what did gloria steinem founded?	feminist majority foundation	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: Feminist Majority Foundation, r0.rel: Organizations founded) => Feminist Majority Foundation
what did gloria steinem founded?	national women's political caucus	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: National Women's Political Caucus, r0.rel: Organizations founded) => National Women's Political Caucus
what did gloria steinem founded?	ms. foundation women	-0.23211476023976152	what did gloria steinem founded? => $x: (gloria steinem, founded, $x) => $x: (gloria steinem, founded, $x) => (r0.arg1: Gloria Steinem, r0.namespace: freebase, r0.arg2: Ms. Foundation for Women, r0.rel: Organizations founded) => Ms. Foundation for Women
what did hayes do?	existence	1.382720612720612	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: existence, r0.rel: did this come to) => existence
what did hayes do?	law school	1.382720612720612	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: law school, r0.rel: do any work during) => law school
what did hayes do?	wladimir	1.3454434454434443	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Haye, r0.namespace: reverb, r0.arg2: Wladimir, r0.rel: did against) => Wladimir; what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Haye, r0.namespace: openie4, r0.arg2: Wladimir, r0.rel: did against) => Wladimir
what did hayes do?	rapping	1.3454434454434443	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: rapping, r0.rel: was doing) => rapping
what did hayes do?	oil paintings	1.3454434454434443	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: oil paintings, r0.rel: also does) => oil paintings
what did hayes do?	wladimir klitschko	1.3454434454434443	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Haye, r0.namespace: reverb, r0.arg2: Wladimir Klitschko, r0.rel: did against) => Wladimir Klitschko
what did hayes do?	coca cola	1.3454434454434443	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: Coca Cola, r0.rel: do besides) => Coca Cola
what did hayes do?	one piece	1.2988469863469847	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: one piece, r0.rel: did) => one piece
what did hayes do?	court?	0.583519952269952	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: ?Hayes, r0.namespace: reverb, r0.arg2: the court?, r0.rel: does other things on) => the court?
what did hayes do?	reading	0.5509024309024302	what did hayes do? => $x: (hayes, do, $x) => $x: (hayes, do, $x) => (r0.arg1: Hayes, r0.namespace: reverb, r0.arg2: reading, r0.rel: is now done with) => reading
what did isaac newton explain?	inertia	1.3862153471528464	what did isaac newton explain? => $x: (isaac newton, explain, $x) => $x: (isaac newton, explain, $x) => (r0.arg1: Sir Isaac Newton, r0.namespace: reverb, r0.arg2: inertia, r0.rel: once explained the law of) => inertia
what did isaac newton explain?	gravity	0.5229445554445544	what did isaac newton explain? => $x: (isaac newton, explain, $x) => $x: (isaac newton, explain, $x) => (r0.arg1: Isaac Newton, r0.namespace: reverb, r0.arg2: gravity, r0.rel: managed to explain) => gravity
what did isaac newton explain?	corollary	0.5229445554445544	what did isaac newton explain? => $x: (isaac newton, explain, $x) => $x: (isaac newton, explain, $x) => (r0.arg1: Isaac Newton, r0.namespace: reverb, r0.arg2: a corollary, r0.rel: explained this as) => a corollary
what did jesse owens won?	berlin	1.3966995504495499	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: openie4, r0.arg2: Berlin, r0.rel: winning four gold medals in) => Berlin; what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: reverb, r0.arg2: Berlin, r0.rel: won four gold medals in) => Berlin; what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: American athlete , Jesse Owens, r0.namespace: reverb, r0.arg2: Berlin, r0.rel: won four gold medals in) => Berlin
what did jesse owens won?	olympic games	1.368741674991674	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: reverb, r0.arg2: Olympic Games, r0.rel: wins broad jump at) => Olympic Games; what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: 1936- Jesse Owens, r0.namespace: reverb, r0.arg2: the Olympic Games, r0.rel: wins four gold medals at) => the Olympic Games
what did jesse owens won?	luz long	1.3547627372627362	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: reverb, r0.arg2: Luz Long, r0.rel: ? win over) => Luz Long
what did jesse owens won?	1936 summer olympics	1.1141962204462195	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: reverb, r0.arg2: the 1936 Summer Olympics, r0.rel: win at) => the 1936 Summer Olympics; what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: openie4, r0.arg2: the 1936 Summer Olympics, r0.rel: won the event in) => the 1936 Summer Olympics; what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: reverb, r0.arg2: the 1936 Summer Olympics, r0.rel: won the event in) => the 1936 Summer Olympics
what did jesse owens won?	front hitler	1.0792488761238748	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: openie4, r0.arg2: front of Hitler, r0.rel: winning in) => front of Hitler
what did jesse owens won?	long jump	1.0792488761238748	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: openie4, r0.arg2: the long jump, r0.rel: to win) => the long jump
what did jesse owens won?	gold	1.04430153180153	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Jesse Owens, r0.namespace: openie4, r0.arg2: the Gold, r0.rel: won) => the Gold
what did jesse owens won?	10.08	0.5602217227217221	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: the 23-year-old Jesse Owens Award winner, r0.namespace: reverb, r0.arg2: 10.08, r0.rel: won easily in) => 10.08
what did jesse owens won?	front	0.5602217227217221	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: The late Jesse Owens, r0.namespace: reverb, r0.arg2: front, r0.rel: won four gold medals in) => front
what did jesse owens won?	sprint	0.5602217227217221	what did jesse owens won? => $x: (jesse owens, won, $x) => $x: (jesse owens, won, $x) => (r0.arg1: Black American Jesse Owens, r0.namespace: reverb, r0.arg2: the sprint, r0.rel: won four gold medals in) => the sprint
what did lincoln steffens wrote?	time	1.3547627372627362	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Journalist Lincoln Steffens, r0.namespace: reverb, r0.arg2: the time, r0.rel: wrote at) => the time
what did lincoln steffens wrote?	articles	0.5469084486941622	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Journalist Lincoln Steffens, r0.namespace: reverb, r0.arg2: articles, r0.rel: wrote a series of) => articles
what did lincoln steffens wrote?	philadelphia corruption	0.5019761488511475	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: reverb, r0.arg2: Philadelphia corruption, r0.rel: wrote about) => Philadelphia corruption
what did lincoln steffens wrote?	corrupt city	0.5019761488511475	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: reverb, r0.arg2: corrupt city, r0.rel: wrote on) => corrupt city
what did lincoln steffens wrote?	boy horseback	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: Boy on horseback, r0.rel: Works written) => Boy on horseback
what did lincoln steffens wrote?	die geschichte meines lebens	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: Die Geschichte meines Lebens, r0.rel: Works written) => Die Geschichte meines Lebens
what did lincoln steffens wrote?	john reed	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: John Reed, r0.rel: Works written) => John Reed
what did lincoln steffens wrote?	world lincoln steffens	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: The world of Lincoln Steffens, r0.rel: Works written) => The world of Lincoln Steffens
what did lincoln steffens wrote?	old jim horse	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: The Old Jim Horse, r0.rel: Works written) => The Old Jim Horse
what did lincoln steffens wrote?	moses red	-0.23211476023976152	what did lincoln steffens wrote? => $x: (lincoln steffens, wrote, $x) => $x: (lincoln steffens, wrote, $x) => (r0.arg1: Lincoln Steffens, r0.namespace: freebase, r0.arg2: Moses in red, r0.rel: Works written) => Moses in red
what did michael crabtree do?	tech	0.5369234931734923	what did michael crabtree do? => $x: (michael crabtree, do, $x) => $x: (michael crabtree, do, $x) => (r0.arg1: Michael Crabtree, r0.namespace: reverb, r0.arg2: Tech, r0.rel: did last year at) => Tech
what did romo do?	redskins	1.4036890193140188	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: the Redskins, r0.rel: did n?t have a great game against) => the Redskins
what did romo do?	austin	1.382720612720612	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: lucky Romo, r0.namespace: reverb, r0.arg2: Austin, r0.rel: did n?t hit) => Austin
what did romo do?	game	0.5893445096570095	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: the game, r0.rel: did stay in) => the game; what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Tony Romo-his 300+ yards, r0.namespace: reverb, r0.arg2: the game, r0.rel: did n?t win) => the game
what did romo do?	dialog	0.583519952269952	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo?s theme, r0.namespace: reverb, r0.arg2: the dialog, r0.rel: does n?t obstruct) => the dialog
what did romo do?	2011	0.571870837495837	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: 2011, r0.rel: did have his best professional season in) => 2011
what did romo do?	owens	0.571870837495837	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Tony Romo, r0.namespace: reverb, r0.arg2: Owens, r0.rel: did n?t have time to hit) => Owens
what did romo do?	rest	0.571870837495837	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo?s, r0.namespace: reverb, r0.arg2: the rest, r0.rel: do to) => the rest
what did romo do?	champion	0.566878359735502	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: a champion, r0.rel: does n?t have the heart of) => a champion
what did romo do?	rookie	0.566878359735502	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: a rookie, r0.rel: did n?t start a game as) => a rookie
what did romo do?	cowboys media	0.566878359735502	what did romo do? => $x: (romo, do, $x) => $x: (romo, do, $x) => (r0.arg1: Romo, r0.namespace: reverb, r0.arg2: Cowboys media, r0.rel: usually does his weekly session with) => Cowboys media
what did scott joplin play?	piano	1.04430153180153	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: openie4, r0.arg2: the piano, r0.rel: played) => the piano; what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: freebase, r0.arg2: Piano, r0.rel: Instruments Played) => Piano
what did scott joplin play?	three thousand years	0.46702880452880274	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: reverb, r0.arg2: three thousand years, r0.rel: played) => three thousand years
what did scott joplin play?	ragtime piano	0.46702880452880274	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: reverb, r0.arg2: ragtime piano, r0.rel: played) => ragtime piano
what did scott joplin play?	wonderful ragtime music	0.46702880452880274	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: reverb, r0.arg2: wonderful ragtime music, r0.rel: played) => wonderful ragtime music
what did scott joplin play?	treemonisha	-0.23211476023976152	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: freebase, r0.arg2: Treemonisha, r0.rel: Plays Composed) => Treemonisha
what did scott joplin play?	jazz piano	-0.23211476023976152	what did scott joplin play? => $x: (scott joplin, play, $x) => $x: (scott joplin, play, $x) => (r0.arg1: Scott Joplin, r0.namespace: freebase, r0.arg2: Jazz piano, r0.rel: Instruments Played) => Jazz piano
what did shannon hoon die from?	drug	0.49498667998667856	what did shannon hoon die from? => $x: (shannon hoon, die from, $x) => $x: (shannon hoon, die from, $x) => (r0.arg1: vocalist Shannon Hoon, r0.namespace: reverb, r0.arg2: a drug, r0.rel: died from) => a drug
what did shannon hoon die from?	drug overdose	0.46702880452880274	what did shannon hoon die from? => $x: (shannon hoon, die from, $x) => $x: (shannon hoon, die from, $x) => (r0.arg1: Shannon Hoon, r0.namespace: reverb, r0.arg2: a drug overdose, r0.rel: dies from) => a drug overdose
what did the ancient mayans predict?	would bring about new age	1.04430153180153	what did the ancient mayans predict? => $x: (the ancient mayans, predict, $x) => $x: (the ancient mayans, predict, $x) => (r0.arg1: the ancient Mayans, r0.namespace: openie4, r0.arg2: would bring about a new age, r0.rel: predicted) => would bring about a new age
what did the ancient mayans predict?	end world	0.2590798090798079	what did the ancient mayans predict? => $x: (the ancient mayans, predict, $x) => $x: (the ancient mayans, predict, $x) => (r0.arg1: the ancient Mayans, r0.namespace: openie4, r0.arg2: the end of the world, r0.rel: predicted) => the end of the world; what did the ancient mayans predict? => $x: (the ancient mayans, predict, $x) => $x: (the ancient mayans, predict, $x) => (r0.arg1: the ancient Mayans, r0.namespace: openie4, r0.arg2: the end of the world, r0.rel: to have predicted) => the end of the world
what did the ancient mayans predict?	world would end 2012	0.21248334998334817	what did the ancient mayans predict? => $x: (the ancient mayans, predict, $x) => $x: (the ancient mayans, predict, $x) => (r0.arg1: the ancient Mayans, r0.namespace: openie4, r0.arg2: the world would end in 2012, r0.rel: predicted) => the world would end in 2012
what did the ancient romans speak?	latin	1.3268048618048605	what did the ancient romans speak? => $x: (the ancient romans, speak, $x) => $x: (the ancient romans, speak, $x) => (r0.arg1: The Ancient Romans, r0.namespace: openie4, r0.arg2: Latin, r0.rel: spoke) => Latin; what did the ancient romans speak? => $x: (the ancient romans, speak, $x) => $x: (the ancient romans, speak, $x) => (r0.arg1: 2. The Ancient Romans, r0.namespace: reverb, r0.arg2: Latin, r0.rel: spoke) => Latin
what did the islamic people believe in?	unity	0.5269385376528224	what did the islamic people believe in? => $x: (the islamic people, believe in, $x) => $x: (the islamic people, believe in, $x) => (r0.arg1: the pre-Islamic period people, r0.namespace: reverb, r0.arg2: the unity, r0.rel: believed in) => the unity
what did thomas hobbes do?	leviathan	0.5369234931734923	what did thomas hobbes do? => $x: (thomas hobbes, do, $x) => $x: (thomas hobbes, do, $x) => (r0.arg1: Thomas Hobbes, r0.namespace: reverb, r0.arg2: Leviathan, r0.rel: did exactly this in) => Leviathan
what did warren buffett invest in?	goldman sachs	1.368741674991674	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: openie4, r0.arg2: Goldman Sachs, r0.rel: investing in) => Goldman Sachs; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: Goldman Sachs, r0.rel: invested in) => Goldman Sachs; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: Goldman Sachs, r0.rel: invested $ 5 billion in) => Goldman Sachs; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: Goldman Sachs, r0.rel: just invested $ 5 billion in) => Goldman Sachs
what did warren buffett invest in?	railroad	1.3587567194710042	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: railroad, r0.rel: decided to invest heavily in) => railroad
what did warren buffett invest in?	technology	1.3587567194710042	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: technology, r0.rel: has always avoided investing in) => technology
what did warren buffett invest in?	private companies	1.3547627372627362	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: ?Warren Buffett, r0.namespace: reverb, r0.arg2: private companies, r0.rel: invests in) => private companies
what did warren buffett invest in?	business	1.3454434454434443	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: business, r0.rel: prefers to invest in) => business
what did warren buffett invest in?	wind power	1.3454434454434443	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: wind power, r0.rel: is investing heavily in) => wind power
what did warren buffett invest in?	businesses	1.3268048618048605	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: openie4, r0.arg2: businesses, r0.rel: invests in) => businesses; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: businesses, r0.rel: only invests in) => businesses
what did warren buffett invest in?	byd	1.3268048618048605	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: BYD, r0.rel: has invested in) => BYD
what did warren buffett invest in?	real estate	1.2988469863469847	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: real estate, r0.rel: invests in) => real estate
what did warren buffett invest in?	company	1.0722594072594058	what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: openie4, r0.arg2: a company, r0.rel: invests in) => a company; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: openie4, r0.arg2: the company, r0.rel: to invest in) => the company; what did warren buffett invest in? => $x: (warren buffett, invest in, $x) => $x: (warren buffett, invest in, $x) => (r0.arg1: Warren Buffett, r0.namespace: reverb, r0.arg2: the company, r0.rel: invest $ 2 billion in) => the company
what did werner heisenberg discover?	uncertainty principle	1.04430153180153	what did werner heisenberg discover? => $x: (werner heisenberg, discover, $x) => $x: (werner heisenberg, discover, $x) => (r0.arg1: Werner Heisenberg, r0.namespace: openie4, r0.arg2: the uncertainty principle, r0.rel: discovered) => the uncertainty principle
what disease did abraham lincoln had?	smallpox	1.6666518666518653	what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: freebase, r1.arg2: smallpox, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: freebase, r1.arg2: smallpox, r0.arg2: Infectious disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: freebase, r1.arg2: smallpox, r0.arg2: Infectious Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: freebase, r1.arg2: smallpox, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: nell, r1.arg2: smallpox, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox; what disease did abraham lincoln had? => $x: ($x, "is an example of", disease) (abraham lincoln, had, $x) => $x: ($x, "is an example of", disease) (abraham lincoln, had, $x) => (r0.arg1: Smallpox, r1.rel: had, r0.namespace: openie4, r1.arg2: smallpox, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Smallpox
what disease did abraham lincoln had?	life	0.5136252636252624	what disease did abraham lincoln had? => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => (r0.arg1: life, r1.rel: has magically come to, r0.namespace: reverb, r1.arg2: life, r0.arg2: auto-immune disease, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => life; what disease did abraham lincoln had? => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => (r0.arg1: life, r1.rel: had a period of, r0.namespace: reverb, r1.arg2: their life, r0.arg2: auto-immune disease, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => life
what disease did abraham lincoln had?	habit	0.5051531801531789	what disease did abraham lincoln had? => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => $x: ($x, "is a kind of", disease) (abraham lincoln, had, $x) => (r0.arg1: a habit, r1.rel: is said to have had, r0.namespace: reverb, r1.arg2: a habit, r0.arg2: neurotic disease, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => a habit
what disease did abraham lincoln had?	united states	0.5051531801531789	what disease did abraham lincoln had? => $x: ($x, "is an example of", disease) (abraham lincoln, had, $x) => $x: ($x, "is an example of", disease) (abraham lincoln, had, $x) => (r0.arg1: the United States, r1.rel: had called, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a zoonotic disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => the United States
what disease did abraham lincoln had?	marfan syndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease cause, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease, r0.rel: Type, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease cause, r0.rel: Type, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "type", disease) (abraham lincoln, had, $x) => $x: ($x, "type", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan syndrome, r1.rel: had, r0.namespace: freebase, r1.arg2: Marfan syndrome, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan 's Syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfan 's Syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan 's Syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan 's Syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan 's Syndrome, r1.rel: to have had, r0.namespace: nell, r1.arg2: Marfan 's syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan 's Syndrome
what disease did abraham lincoln had?	marfan_syndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: marfan_syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => marfan_syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: marfan_syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => marfan_syndrome
what disease did abraham lincoln had?	marfanssyndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: MarfansSyndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => MarfansSyndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: MarfansSyndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => MarfansSyndrome
what disease did abraham lincoln had?	marfan's syndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan's syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfan's syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfan's syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfan's syndrome
what disease did abraham lincoln had?	marfans syndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfans Syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => Marfans Syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: Marfans Syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => Marfans Syndrome
what disease did abraham lincoln had?	marfan like syndrome	0.46702880452880274	what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: marfan like syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Abraham Lincoln) => marfan like syndrome; what disease did abraham lincoln had? => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => $x: ($x, "is a", disease) (abraham lincoln, had, $x) => (r0.arg1: marfan like syndrome, r1.rel: had, r0.namespace: nell, r1.arg2: Marfan syndrome, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Abraham Lincoln) => marfan like syndrome
what disease did patrick swayze died from?	pancreatic cancer	0.48450247668997515	what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: dies from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: openie4, r1.arg1: Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: dies from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: died from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Actor Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: died from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: openie4, r1.arg1: Actor Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: dies from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: dies from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: died from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Actor Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "type", disease) (patrick swayze, died from, $x) => $x: ($x, "type", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic cancer, r1.rel: died from, r0.namespace: freebase, r1.arg2: pancreatic cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Actor Patrick Swayze) => Pancreatic cancer; what disease did patrick swayze died from? => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic Cancer, r1.rel: dies from, r0.namespace: nell, r1.arg2: pancreatic cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Patrick Swayze) => Pancreatic Cancer; what disease did patrick swayze died from? => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic Cancer, r1.rel: dies from, r0.namespace: nell, r1.arg2: pancreatic cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Patrick Swayze) => Pancreatic Cancer; what disease did patrick swayze died from? => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic Cancer, r1.rel: died from, r0.namespace: nell, r1.arg2: pancreatic cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Actor Patrick Swayze) => Pancreatic Cancer; what disease did patrick swayze died from? => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => $x: ($x, "is a", disease) (patrick swayze, died from, $x) => (r0.arg1: Pancreatic Cancer, r1.rel: died from, r0.namespace: nell, r1.arg2: pancreatic cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Actor Patrick Swayze) => Pancreatic Cancer
what disease does robin roberts have?	breast cancer 2	0.5229445554445544	what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancer 2, r1.rel: has been diagnosed with, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Robin Roberts) => breast cancer 2; what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancer 2, r1.rel: also has battled, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: GMA correspondent Robin Roberts) => breast cancer 2
what disease does robin roberts have?	breast cancers	0.5229445554445544	what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancers, r1.rel: has been diagnosed with, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Robin Roberts) => breast cancers; what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancers, r1.rel: also has battled, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: GMA correspondent Robin Roberts) => breast cancers
what disease does robin roberts have?	breast cancer	0.5229445554445544	what disease does robin roberts have? => $x: ($x, "type", disease) (robin roberts, have, $x) => $x: ($x, "type", disease) (robin roberts, have, $x) => (r0.arg1: Breast cancer, r1.rel: has been diagnosed with, r0.namespace: freebase, r1.arg2: breast cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Robin Roberts) => Breast cancer; what disease does robin roberts have? => $x: ($x, "type", disease) (robin roberts, have, $x) => $x: ($x, "type", disease) (robin roberts, have, $x) => (r0.arg1: Breast cancer, r1.rel: has been diagnosed with, r0.namespace: freebase, r1.arg2: breast cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Robin Roberts) => Breast cancer; what disease does robin roberts have? => $x: ($x, "type", disease) (robin roberts, have, $x) => $x: ($x, "type", disease) (robin roberts, have, $x) => (r0.arg1: Breast cancer, r1.rel: also has battled, r0.namespace: freebase, r1.arg2: breast cancer, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: GMA correspondent Robin Roberts) => Breast cancer; what disease does robin roberts have? => $x: ($x, "type", disease) (robin roberts, have, $x) => $x: ($x, "type", disease) (robin roberts, have, $x) => (r0.arg1: Breast cancer, r1.rel: also has battled, r0.namespace: freebase, r1.arg2: breast cancer, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: GMA correspondent Robin Roberts) => Breast cancer; what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancer, r1.rel: has been diagnosed with, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Robin Roberts) => breast cancer; what disease does robin roberts have? => $x: ($x, "is a", disease) (robin roberts, have, $x) => $x: ($x, "is a", disease) (robin roberts, have, $x) => (r0.arg1: breast cancer, r1.rel: also has battled, r0.namespace: nell, r1.arg2: breast cancer, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: GMA correspondent Robin Roberts) => breast cancer
what district does nancy pelosi represent?	san francisco	0.40188468938468835	what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: San Francisco, r1.rel: represents, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: Political District, r0.rel: Type, r1.namespace: openie4, r1.arg1: Nancy Pelosi) => San Francisco; what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: San Francisco, r1.rel: represents, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: Political District, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nancy Pelosi) => San Francisco; what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: San Francisco, r1.rel: has represented, r0.namespace: freebase, r1.arg2: San Francisco, r0.arg2: Political District, r0.rel: Type, r1.namespace: reverb, r1.arg1: House Speaker Nancy Pelosi) => San Francisco
what district does nancy pelosi represent?	california	0.40188468938468835	what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: California, r1.rel: has represented, r0.namespace: freebase, r1.arg2: California, r0.arg2: Political District, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nancy Pelosi) => California; what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: California, r1.rel: has represented, r0.namespace: freebase, r1.arg2: California, r0.arg2: Voting District, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nancy Pelosi) => California; what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: California, r1.rel: represents the 8th District of, r0.namespace: freebase, r1.arg2: California, r0.arg2: Political District, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nancy Pelosi) => California; what district does nancy pelosi represent? => $x: ($x, "type", district) (nancy pelosi, represent, $x) => $x: ($x, "type", district) (nancy pelosi, represent, $x) => (r0.arg1: California, r1.rel: represents the 8th District of, r0.namespace: freebase, r1.arg2: California, r0.arg2: Voting District, r0.rel: Type, r1.namespace: reverb, r1.arg1: Nancy Pelosi) => California
what document did thomas jefferson wrote?	first amendment	1.6790775890775875	what document did thomas jefferson wrote? => $x: ($x, "is a kind of", document) (thomas jefferson, wrote, $x) => $x: ($x, "is a kind of", document) (thomas jefferson, wrote, $x) => (r0.arg1: the First Amendment, r1.rel: wrote about, r0.namespace: reverb, r1.arg2: the First Amendment, r0.arg2: anti-war document, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Thomas Jefferson) => the First Amendment; what document did thomas jefferson wrote? => $x: ($x, "is a kind of", document) (thomas jefferson, wrote, $x) => $x: ($x, "is a kind of", document) (thomas jefferson, wrote, $x) => (r0.arg1: the First Amendment, r1.rel: wrote about, r0.namespace: reverb, r1.arg2: the First Amendment, r0.arg2: anti-war document, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Thomas Jefferson) => the First Amendment
what document did thomas jefferson wrote?	firsts	0.08521062271062108	what document did thomas jefferson wrote? => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => (r0.arg1: Firsts, r1.rel: wrote, r0.namespace: freebase, r1.arg2: first, r0.arg2: Document, r0.rel: Type, r1.namespace: openie4, r1.arg1: Thomas Jefferson) => Firsts
what document did thomas jefferson wrote?	quotes	0.08521062271062108	what document did thomas jefferson wrote? => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => (r0.arg1: Quotes, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Quote, r0.arg2: Document, r0.rel: Type, r1.namespace: openie4, r1.arg1: Thomas Jefferson) => Quotes
what document did thomas jefferson wrote?	first	0.08521062271062108	what document did thomas jefferson wrote? => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => (r0.arg1: first, r1.rel: wrote, r0.namespace: freebase, r1.arg2: first, r0.arg2: Document, r0.rel: Type, r1.namespace: openie4, r1.arg1: Thomas Jefferson) => first; what document did thomas jefferson wrote? => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => $x: ($x, "type", document) (thomas jefferson, wrote, $x) => (r0.arg1: First, r1.rel: wrote, r0.namespace: freebase, r1.arg2: first, r0.arg2: Document, r0.rel: Type, r1.namespace: openie4, r1.arg1: Thomas Jefferson) => First
what does bentley mean?	statement	1.382720612720612	what does bentley mean? => $x: (bentley, mean, $x) => $x: (bentley, mean, $x) => (r0.arg1: Bentley, r0.namespace: reverb, r0.arg2: the statement, r0.rel: changes her meaning of) => the statement
what does bentley mean?	toy	0.5893445096570095	what does bentley mean? => $x: (bentley, mean, $x) => $x: (bentley, mean, $x) => (r0.arg1: Dr Peter Bentley?s idea, r0.namespace: reverb, r0.arg2: a toy, r0.rel: was meant to be) => a toy
what does julian lennon do?	james	0.5229445554445544	what does julian lennon do? => $x: (julian lennon, do, $x) => $x: (julian lennon, do, $x) => (r0.arg1: poor Julian Lennon ?, r0.namespace: reverb, r0.arg2: James, r0.rel: did) => James
what does matt damon play in?	rounders	1.3454434454434443	what does matt damon play in? => $x: (matt damon, play in, $x) => $x: (matt damon, play in, $x) => (r0.arg1: Matt Damon, r0.namespace: reverb, r0.arg2: Rounders, r0.rel: play the game in) => Rounders
what does matt damon play in?	new film	0.5136252636252624	what does matt damon play in? => $x: (matt damon, play in, $x) => $x: (matt damon, play in, $x) => (r0.arg1: Matt Damon, r0.namespace: reverb, r0.arg2: the new film, r0.rel: plays the psychic in) => the new film
what does matt damon play in?	poker games	0.49498667998667856	what does matt damon play in? => $x: (matt damon, play in, $x) => $x: (matt damon, play in, $x) => (r0.arg1: Matt Damon, r0.namespace: reverb, r0.arg2: the poker games, r0.rel: also played in) => the poker games
what does monsanto own?	seeds	1.392039904539904	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: the seeds, r0.rel: owns) => the seeds; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: the seeds, r0.rel: owns the patent for) => the seeds; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: the seeds, r0.rel: owns some ridiculous percentage of) => the seeds
what does monsanto own?	pharmacia	1.368741674991674	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: Pharmacia, r0.rel: owned by) => Pharmacia; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: Pharmacia, r0.rel: is owned by) => Pharmacia; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: Pharmacia, r0.rel: is owned by) => Pharmacia
what does monsanto own?	nutrasweet	1.2988469863469847	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: NutraSweet, r0.rel: owned) => NutraSweet; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: NutraSweet, r0.rel: owned) => NutraSweet
what does monsanto own?	searle	1.2988469863469847	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: Searle, r0.rel: owned) => Searle
what does monsanto own?	epa	1.2988469863469847	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: EPA, r0.rel: owns) => EPA
what does monsanto own?	time	1.1141962204462195	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: the time, r0.rel: owned NutraSweet at) => the time
what does monsanto own?	seed	1.04430153180153	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: the seed, r0.rel: owns) => the seed
what does monsanto own?	company	1.04430153180153	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: the company, r0.rel: own) => the company
what does monsanto own?	patent	1.04430153180153	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: the patent, r0.rel: owns) => the patent
what does monsanto own?	genes	1.04430153180153	what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: openie4, r0.arg2: the genes, r0.rel: owns) => the genes; what does monsanto own? => $x: (monsanto, own, $x) => $x: (monsanto, own, $x) => (r0.arg1: Monsanto, r0.namespace: reverb, r0.arg2: the genes, r0.rel: owns patents on) => the genes
what does ringo sing?	lead	1.2988469863469847	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: reverb, r0.arg2: lead, r0.rel: sang) => lead; what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: openie4, r0.arg2: the lead, r0.rel: sings) => the lead; what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: openie4, r0.arg2: lead, r0.rel: to sing) => lead; what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo Starr, r0.namespace: openie4, r0.arg2: lead, r0.rel: sang) => lead
what does ringo sing?	earlier song backwards	0.566878359735502	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: one point Ringo, r0.namespace: reverb, r0.arg2: an earlier song backwards, r0.rel: sings a line from) => an earlier song backwards
what does ringo sing?	? reply ?i luv	0.5602217227217221	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: the best song Ringo, r0.namespace: reverb, r0.arg2: ? Reply ?i luv, r0.rel: sang on) => ? Reply ?i luv
what does ringo sing?	charms	0.5602217227217221	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Both Paul and Ringo, r0.namespace: reverb, r0.arg2: the charms, r0.rel: sing of) => the charms
what does ringo sing?	1965 album movie	0.5602217227217221	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: the one Ringo, r0.namespace: reverb, r0.arg2: the 1965 album and movie, r0.rel: would sing for) => the 1965 album and movie
what does ringo sing?	song	0.5509024309024302	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo Starr, r0.namespace: openie4, r0.arg2: the song, r0.rel: singing) => the song; what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: John&Paul ? Networking Ringo, r0.namespace: reverb, r0.arg2: the song, r0.rel: sang) => the song; what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo Starr, r0.namespace: reverb, r0.arg2: the song, r0.rel: started singing) => the song
what does ringo sing?	one lead vocal	0.5509024309024302	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo Ringo, r0.namespace: reverb, r0.arg2: one lead vocal, r0.rel: typically got to sing) => one lead vocal
what does ringo sing?	previous albums	0.5509024309024302	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: reverb, r0.arg2: the previous albums, r0.rel: had been singing on) => the previous albums
what does ringo sing?	little help	0.5369234931734923	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: reverb, r0.arg2: a Little Help, r0.rel: starts singing With) => a Little Help
what does ringo sing?	least one song	0.5369234931734923	what does ringo sing? => $x: (ringo, sing, $x) => $x: (ringo, sing, $x) => (r0.arg1: Ringo, r0.namespace: reverb, r0.arg2: least one song, r0.rel: generally sang at) => least one song
what does the missouri river bisect?	state	0.21248334998334817	what does the missouri river bisect? => $x: (the missouri river, bisect, $x) => $x: (the missouri river, bisect, $x) => (r0.arg1: The Missouri River, r0.namespace: openie4, r0.arg2: the state, r0.rel: bisects) => the state
what films has daniel craig been in?	film	0.8612383449883437	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Film, r1.rel: is in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: openie4, r1.arg1: Daniel Craig) => The Film; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Film, r1.rel: was great in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Film; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Film of Her, r1.rel: is in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: openie4, r1.arg1: Daniel Craig) => The Film of Her; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Film of Her, r1.rel: was great in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Film of Her; what films has daniel craig been in? => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => (r0.arg1: The film, r1.rel: is in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Daniel Craig) => The film; what films has daniel craig been in? => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => (r0.arg1: The film, r1.rel: is in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Daniel Craig) => The film; what films has daniel craig been in? => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => (r0.arg1: The film, r1.rel: was great in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Daniel Craig) => The film; what films has daniel craig been in? => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => $x: ($x, "is a kind of", films) (daniel craig, been in, $x) => (r0.arg1: The film, r1.rel: is perfect in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Daniel Craig) => The film
what films has daniel craig been in?	past	0.3863525363525353	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Past, r1.rel: has been also been vocal in, r0.namespace: freebase, r1.arg2: the past, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Past
what films has daniel craig been in?	infamous	0.3863525363525353	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Infamous, r1.rel: is similarly well cast in, r0.namespace: freebase, r1.arg2: Infamous, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Infamous
what films has daniel craig been in?	shadows	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Shadows, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Shadows; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Into the Shadows, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Into the Shadows; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: In the Shadows, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => In the Shadows
what films has daniel craig been in?	shadow	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Shadow, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Shadow; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: In the Shadow, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => In the Shadow; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: As the Shadow, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => As the Shadow
what films has daniel craig been in?	theater	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Theater, r1.rel: is due in, r0.namespace: freebase, r1.arg2: theaters, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Theater; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: The Theater, r1.rel: is due out in, r0.namespace: freebase, r1.arg2: theaters, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => The Theater
what films has daniel craig been in?	theater?	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: And if there is a theater?, r1.rel: is due in, r0.namespace: freebase, r1.arg2: theaters, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => And if there is a theater?; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: And if there is a theater?, r1.rel: is due out in, r0.namespace: freebase, r1.arg2: theaters, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => And if there is a theater?
what films has daniel craig been in?	shadow sky	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Shadow in the Sky, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Shadow in the Sky
what films has daniel craig been in?	attendance	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Attendance, r1.rel: was also in, r0.namespace: freebase, r1.arg2: attendance, r0.arg2: Film character, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Attendance
what films has daniel craig been in?	shadow sun	0.3747034215784204	what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Shadow of the Sun, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Shadow of the Sun; what films has daniel craig been in? => $x: ($x, "type", films) (daniel craig, been in, $x) => $x: ($x, "type", films) (daniel craig, been in, $x) => (r0.arg1: Shadow On The Sun, r1.rel: can be seen in, r0.namespace: freebase, r1.arg2: the shadows, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Daniel Craig) => Shadow On The Sun
what films has scarlett johansson been in?	movies	1.6790775890775875	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The Movies, r1.rel: are smiling in, r0.namespace: freebase, r1.arg2: the movie, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => The Movies; what films has scarlett johansson been in? => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => (r0.arg1: the Movies, r1.rel: is in, r0.namespace: reverb, r1.arg2: the movie, r0.arg2: great film writing, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Scarlett Johansson) => the Movies; what films has scarlett johansson been in? => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => (r0.arg1: the Movies, r1.rel: are smiling in, r0.namespace: reverb, r1.arg2: the movie, r0.arg2: great film writing, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => the Movies
what films has scarlett johansson been in?	movie	0.8574259074259061	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The Movie, r1.rel: are smiling in, r0.namespace: freebase, r1.arg2: the movie, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => The Movie; what films has scarlett johansson been in? => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => (r0.arg1: the movie, r1.rel: is in, r0.namespace: reverb, r1.arg2: the movie, r0.arg2: a so-called postmodernist film, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Scarlett Johansson) => the movie; what films has scarlett johansson been in? => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => $x: ($x, "is an example of", films) (scarlett johansson, been in, $x) => (r0.arg1: the movie, r1.rel: are smiling in, r0.namespace: reverb, r1.arg2: the movie, r0.arg2: a so-called postmodernist film, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => the movie
what films has scarlett johansson been in?	film	0.5423000076846223	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The Film, r1.rel: was in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson?s debut appearance) => The Film; what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The Film of Her, r1.rel: was in, r0.namespace: freebase, r1.arg2: the film, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson?s debut appearance) => The Film of Her; what films has scarlett johansson been in? => $x: ($x, "is a kind of", films) (scarlett johansson, been in, $x) => $x: ($x, "is a kind of", films) (scarlett johansson, been in, $x) => (r0.arg1: The film, r1.rel: is the lead in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => The film; what films has scarlett johansson been in? => $x: ($x, "is a kind of", films) (scarlett johansson, been in, $x) => $x: ($x, "is a kind of", films) (scarlett johansson, been in, $x) => (r0.arg1: The film, r1.rel: was in, r0.namespace: reverb, r1.arg2: the film, r0.arg2: a film-noir homage, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Scarlett Johansson?s debut appearance) => The film
what films has scarlett johansson been in?	news	0.3863525363525353	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The News, r1.rel: has been in, r0.namespace: freebase, r1.arg2: the news, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Pamela Canning Scarlett Johansson) => The News
what films has scarlett johansson been in?	prestige	0.3747034215784204	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: The Prestige, r1.rel: are pure magic in, r0.namespace: freebase, r1.arg2: THE PRESTIGE, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => The Prestige
what films has scarlett johansson been in?	touch	0.3747034215784204	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: Touch, r1.rel: have been getting in, r0.namespace: freebase, r1.arg2: touch, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => Touch
what films has scarlett johansson been in?	touched	0.3747034215784204	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: Touched, r1.rel: have been getting in, r0.namespace: freebase, r1.arg2: touch, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => Touched
what films has scarlett johansson been in?	september 12	0.35972598829741553	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: September 12, r1.rel: were married in, r0.namespace: freebase, r1.arg2: September, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => September 12
what films has scarlett johansson been in?	september dawn	0.35972598829741553	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: September Dawn, r1.rel: were married in, r0.namespace: freebase, r1.arg2: September, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => September Dawn
what films has scarlett johansson been in?	new york city	0.35972598829741553	what films has scarlett johansson been in? => $x: ($x, "type", films) (scarlett johansson, been in, $x) => $x: ($x, "type", films) (scarlett johansson, been in, $x) => (r0.arg1: New York City, r1.rel: was born in, r0.namespace: freebase, r1.arg2: New York City, r0.arg2: Film, r0.rel: Type, r1.namespace: reverb, r1.arg1: Scarlett Johansson) => New York City
what government did the roman empire have?	thousands	1.3487717639503343	what government did the roman empire have? => $x: ($x, "is a kind of", government) (the roman empire, have, $x) => $x: ($x, "is a kind of", government) (the roman empire, have, $x) => (r0.arg1: thousands, r1.rel: has become the home of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Roman Empire) => thousands
what government did the roman empire have?	church	1.3337943306693294	what government did the roman empire have? => $x: ($x, "is an example of", government) (the roman empire, have, $x) => $x: ($x, "is an example of", government) (the roman empire, have, $x) => (r0.arg1: The Church, r1.rel: had Conquered, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Roman Empire) => The Church; what government did the roman empire have? => $x: ($x, "is an example of", government) (the roman empire, have, $x) => $x: ($x, "is an example of", government) (the roman empire, have, $x) => (r0.arg1: The Church, r1.rel: had already joined, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Roman Empire) => The Church
what government did the roman empire have?	ways	0.2544201631701619	what government did the roman empire have? => $x: ($x, "is a", government) (the roman empire, have, $x) => $x: ($x, "is a", government) (the roman empire, have, $x) => (r0.arg1: WAYS, r1.rel: had given, r0.namespace: nell, r1.arg2: way, r0.arg2: part of the government, r0.rel: is a, r1.namespace: openie4, r1.arg1: the Roman Empire) => WAYS
what government does iraq use?	thousands	1.3633651604805441	what government does iraq use? => $x: ($x, "is a kind of", government) (iraq, use, $x) => $x: ($x, "is a kind of", government) (iraq, use, $x) => (r0.arg1: thousands, r1.rel: had perfected the use of, r0.namespace: reverb, r1.arg2: its thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Iraq) => thousands
what government does iraq use?	jordan	0.49809311059310923	what government does iraq use? => $x: ($x, "is an example of", government) (iraq, use, $x) => $x: ($x, "is an example of", government) (iraq, use, $x) => (r0.arg1: Jordan, r1.rel: has been using, r0.namespace: reverb, r1.arg2: Jordan, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Iraq) => Jordan
what government does new zealand have?	law	1.7048848587310115	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: the law, r1.rel: has lost confidence in, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Zealand) => the law; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: the law, r1.rel: has the latest version of, r0.namespace: openie4, r1.arg2: the Laws, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a New Zealand site) => the law; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: The law, r1.rel: has lost confidence in, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Zealand) => The law; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: The law, r1.rel: has the latest version of, r0.namespace: reverb, r1.arg2: the Laws, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a New Zealand site) => The law
what government does new zealand have?	thousands	1.37340132090132	what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: thousands, r1.rel: already has hundreds of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Zealand) => thousands; what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: thousands, r1.rel: has offered to pay, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Zealand?s government) => thousands; what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: thousands, r1.rel: have gathered by, r0.namespace: reverb, r1.arg2: the thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Zealand Christians) => thousands
what government does new zealand have?	public	1.3454434454434443	what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: the public, r1.rel: has done, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Television New Zealand) => the public; what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: the public, r1.rel: has podcast to, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a new zealand university) => the public
what government does new zealand have?	move	0.8658979908979897	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: the move, r1.rel: has denounced, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Zealand) => the move; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: the move, r1.rel: has welcomed, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The New Zealand Computer Society) => the move
what government does new zealand have?	grant	0.5509024309024302	what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: grant, r1.rel: has also agreed to provide, r0.namespace: reverb, r1.arg2: grants, r0.arg2: government funding, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Creative New Zealand) => grant; what government does new zealand have? => $x: ($x, "is a kind of", government) (new zealand, have, $x) => $x: ($x, "is a kind of", government) (new zealand, have, $x) => (r0.arg1: grant, r1.rel: has provided the company with, r0.namespace: reverb, r1.arg2: a grant, r0.arg2: government funding, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Technology NewZealand) => grant
what government does new zealand have?	1993	0.5415831390831383	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: 1993, r1.rel: had been the case since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the name ?New Zealand First?) => 1993
what government does new zealand have?	education	0.5322638472638463	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: education, r1.rel: have completed 10+ years of, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Zealand) => education; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: education, r1.rel: has the right to, r0.namespace: reverb, r1.arg2: a free education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: every New Zealand child) => education
what government does new zealand have?	san francisco	0.5207939496401024	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: San Francisco, r1.rel: has chosen, r0.namespace: reverb, r1.arg2: San Francisco, r0.arg2: government anarchy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Air New Zealand) => San Francisco; what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: San Francisco, r1.rel: have expanded service to, r0.namespace: reverb, r1.arg2: San Francisco and, r0.arg2: government anarchy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Air New Zealand) => San Francisco
what government does new zealand have?	?this development	0.5051531801531789	what government does new zealand have? => $x: ($x, "is an example of", government) (new zealand, have, $x) => $x: ($x, "is an example of", government) (new zealand, have, $x) => (r0.arg1: ?This development, r1.rel: has been a major beneficiary of, r0.namespace: reverb, r1.arg2: this development, r0.arg2: governments, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Zealand) => ?This development
what guitar did joe walsh play?	steel guitar	-0.24376387501387642	what guitar did joe walsh play? => $x: ($x, "type", guitar) (joe walsh, play, $x) => $x: ($x, "type", guitar) (joe walsh, play, $x) => (r0.arg1: Steel guitar, r1.rel: Instruments Played, r0.namespace: freebase, r1.arg2: Steel guitar, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Joe Walsh) => Steel guitar
what guitar did joe walsh play?	bass guitar	-0.24376387501387642	what guitar did joe walsh play? => $x: ($x, "type", guitar) (joe walsh, play, $x) => $x: ($x, "type", guitar) (joe walsh, play, $x) => (r0.arg1: Bass guitar, r1.rel: Instruments Played, r0.namespace: freebase, r1.arg2: Bass guitar, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Joe Walsh) => Bass guitar
what guitar did joe walsh play?	fender stratocaster	-0.2670621045621062	what guitar did joe walsh play? => $x: ($x, "type", guitar) (joe walsh, play, $x) => $x: ($x, "type", guitar) (joe walsh, play, $x) => (r0.arg1: Fender Stratocaster, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Fender Stratocaster, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Joe Walsh) => Fender Stratocaster
what guitar did joe walsh play?	fender stratocaster xii	-0.2670621045621062	what guitar did joe walsh play? => $x: ($x, "type", guitar) (joe walsh, play, $x) => $x: ($x, "type", guitar) (joe walsh, play, $x) => (r0.arg1: Fender Stratocaster XII, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Fender Stratocaster, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Joe Walsh) => Fender Stratocaster XII
what guitar does corey taylor play?	bass guitar	-0.24376387501387642	what guitar does corey taylor play? => $x: ($x, "type", guitar) (corey taylor, play, $x) => $x: ($x, "type", guitar) (corey taylor, play, $x) => (r0.arg1: Bass guitar, r1.rel: Instruments Played, r0.namespace: freebase, r1.arg2: Bass guitar, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Corey Taylor) => Bass guitar
what happened at chernobyl?	radiation	1.3547627372627362	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: radiation, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => radiation; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: radiation, r0.namespace: reverb, r0.arg2: Chernobyl 25 years, r0.rel: happened at) => radiation; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: radiation, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => radiation; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: radiation, r0.namespace: reverb, r0.arg2: Chernobyl 25 years, r0.rel: happened at) => radiation
what happened at chernobyl?	dr. edward teller	1.2988469863469847	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: Dr. Edward Teller, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => Dr. Edward Teller; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: Dr. Edward Teller, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => Dr. Edward Teller
what happened at chernobyl?	north america	1.2988469863469847	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: North America, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => North America; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: North America, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: happened at) => North America
what happened at chernobyl?	plant malfunctions	0.5469084486941622	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: plant malfunctions, r0.namespace: reverb, r0.arg2: Three Mile Island and Chernobyl, r0.rel: happened at) => plant malfunctions; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: plant malfunctions, r0.namespace: reverb, r0.arg2: Three Mile Island and Chernobyl, r0.rel: happened at) => plant malfunctions
what happened at chernobyl?	liability	0.5369234931734923	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: liability, r0.namespace: reverb, r0.arg2: TMI and Chernobyl, r0.rel: did happen at) => liability; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: liability, r0.namespace: reverb, r0.arg2: TMI and Chernobyl, r0.rel: did happen at) => liability
what happened at chernobyl?	official word	0.5019761488511475	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: no official word, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: can happen at) => no official word; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: no official word, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: can happen at) => no official word
what happened at chernobyl?	descriptions	0.5019761488511475	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: descriptions, r0.namespace: reverb, r0.arg2: Chernobyl almost, r0.rel: happened at) => descriptions; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: descriptions, r0.namespace: reverb, r0.arg2: Chernobyl almost, r0.rel: happened at) => descriptions
what happened at chernobyl?	runaway meltdown	0.5019761488511475	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: a runaway meltdown, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => a runaway meltdown; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: a runaway meltdown, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => a runaway meltdown
what happened at chernobyl?	reactors	0.5019761488511475	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: the reactors, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => the reactors; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: the reactors, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => the reactors
what happened at chernobyl?	runaway power excursion	0.5019761488511475	what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: a runaway power excursion, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => a runaway power excursion; what happened at chernobyl? => $x: ($x, happened at, chernobyl) => $x: ($x, happened at, chernobyl) => (r0.arg1: a runaway power excursion, r0.namespace: reverb, r0.arg2: Chernobyl, r0.rel: as happened at) => a runaway power excursion
what has ashley greene been in?	jacksonville	1.3454434454434443	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: openie4, r0.arg2: Jacksonville, r0.rel: was born in) => Jacksonville; what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: openie4, r0.arg2: Jacksonville, r0.rel: was born in) => Jacksonville; what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Ashley Greene, r0.namespace: reverb, r0.arg2: Jacksonville, r0.rel: was born in) => Jacksonville; what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Michele Greene, r0.namespace: reverb, r0.arg2: Jacksonville, r0.rel: was born in) => Jacksonville
what has ashley greene been in?	new york	1.3268048618048605	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: openie4, r0.arg2: New York, r0.rel: was spotted in) => New York; what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: reverb, r0.arg2: New York, r0.rel: was spotted in) => New York
what has ashley greene been in?	paris	1.3268048618048605	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: reverb, r0.arg2: Paris, r0.rel: will be in) => Paris
what has ashley greene been in?	sweden	1.2988469863469847	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: reverb, r0.arg2: Sweden, r0.rel: are in) => Sweden
what has ashley greene been in?	red	0.5369234931734923	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: ?Twilight ? star Ashley Greene, r0.namespace: reverb, r0.arg2: red, r0.rel: was gorgeous in) => red
what has ashley greene been in?	new film	0.5269385376528224	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: her start Ashley Greene, r0.namespace: reverb, r0.arg2: the new film, r0.rel: is starring in) => the new film
what has ashley greene been in?	new preview	0.5136252636252624	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: reverb, r0.arg2: the new preview, r0.rel: is prominently featured in) => the new preview
what has ashley greene been in?	real treat	0.5136252636252624	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene fans, r0.namespace: reverb, r0.arg2: a real treat, r0.rel: are in for) => a real treat
what has ashley greene been in?	spooky new movie	0.5136252636252624	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: 's Ashley Greene, r0.namespace: reverb, r0.arg2: the spooky new movie, r0.rel: will be in) => the spooky new movie
what has ashley greene been in?	detroit	0.5136252636252624	what has ashley greene been in? => $x: (ashley greene, been in, $x) => $x: (ashley greene, been in, $x) => (r0.arg1: Ashley Greene, r0.namespace: reverb, r0.arg2: Detroit, r0.rel: were spotted together in) => Detroit
what has kristen stewart acted in?	twilight	0.5369234931734923	what has kristen stewart acted in? => $x: (kristen stewart, acted in, $x) => $x: (kristen stewart, acted in, $x) => (r0.arg1: Kristen Stewart, r0.namespace: reverb, r0.arg2: Twilight, r0.rel: did a terrible job acting in) => Twilight
what has kristen stewart acted in?	movie	0.46702880452880274	what has kristen stewart acted in? => $x: (kristen stewart, acted in, $x) => $x: (kristen stewart, acted in, $x) => (r0.arg1: Kristen Stewart, r0.namespace: openie4, r0.arg2: the movie, r0.rel: acted in) => the movie; what has kristen stewart acted in? => $x: (kristen stewart, acted in, $x) => $x: (kristen stewart, acted in, $x) => (r0.arg1: Kristen Stewart, r0.namespace: reverb, r0.arg2: the movie, r0.rel: acted in) => the movie
what is arkansas state capitol?	stamps	0.5269385376528224	what is arkansas state capitol? => $x: ($x, is, arkansas state capitol) => $x: ($x, is, arkansas state capitol) => (r0.arg1: stamps, r0.namespace: reverb, r0.arg2: the Arkansas State Capitol, r0.rel: are available at) => stamps
what is berkshire hathaway invested in?	government bonds	1.378726630512344	what is berkshire hathaway invested in? => $x: (berkshire hathaway, is invested in, $x) => $x: (berkshire hathaway, is invested in, $x) => (r0.arg1: Berkshire Hathaway?s money, r0.namespace: reverb, r0.arg2: government bonds, r0.rel: is invested in) => government bonds; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway?s money, r0.namespace: reverb, r0.arg2: government bonds, r0.rel: is invested in) => government bonds
what is berkshire hathaway invested in?	byd	1.368741674991674	what is berkshire hathaway invested in? => $x: (berkshire hathaway, is invested in, $x) => $x: (berkshire hathaway, is invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: BYD, r0.rel: was investing in) => BYD; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: BYD, r0.rel: was investing in) => BYD; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: BYD, r0.rel: invested $ 230 million in) => BYD; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: BYD, r0.rel: just agreed to invest in) => BYD
what is berkshire hathaway invested in?	goldman sachs	1.3587567194710042	what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Goldman Sachs, r0.rel: invested $ 5 billion in) => Goldman Sachs
what is berkshire hathaway invested in?	solar energy	1.3268048618048605	what is berkshire hathaway invested in? => $x: (berkshire hathaway, is invested in, $x) => $x: (berkshire hathaway, is invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: solar energy, r0.rel: are investing in) => solar energy; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: solar energy, r0.rel: are investing in) => solar energy
what is berkshire hathaway invested in?	bank	0.5559856809856804	what is berkshire hathaway invested in? => $x: (berkshire hathaway, is invested in, $x) => $x: (berkshire hathaway, is invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Bank, r0.rel: is investing $ 5 billion in) => Bank; what is berkshire hathaway invested in? => $x: (berkshire hathaway, is invested in, $x) => $x: (berkshire hathaway, is invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Bank, r0.rel: was investing a cool $ 5 billion in) => Bank; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Bank, r0.rel: is investing $ 5 billion in) => Bank; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Bank, r0.rel: will invest $ 5 billion in) => Bank; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: 's Berkshire Hathaway, r0.namespace: reverb, r0.arg2: Bank, r0.rel: was investing a cool $ 5 billion in) => Bank
what is berkshire hathaway invested in?	large-cap growth	0.49498667998667856	what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: large-cap growth, r0.rel: invests primarily in) => large-cap growth; what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: openie4, r0.arg2: large-cap growth, r0.rel: invests primarily in) => large-cap growth
what is berkshire hathaway invested in?	company	0.46702880452880274	what is berkshire hathaway invested in? => $x: (berkshire hathaway, invested in, $x) => $x: (berkshire hathaway, invested in, $x) => (r0.arg1: Berkshire Hathaway, r0.namespace: reverb, r0.arg2: the company, r0.rel: invested in) => the company
what is colorado technical university?	full time	1.368741674991674	what is colorado technical university? => $x: ($x, is, colorado technical university) => $x: ($x, is, colorado technical university) => (r0.arg1: full time, r0.namespace: reverb, r0.arg2: Colorado Technical University, r0.rel: will be able to attend) => full time
what is colorado technical university?	colorado springs	1.3454434454434443	what is colorado technical university? => $x: ($x, is, colorado technical university) => $x: ($x, is, colorado technical university) => (r0.arg1: Colorado Springs, r0.namespace: reverb, r0.arg2: Colorado Technical University, r0.rel: is home to) => Colorado Springs
what is colorado technical university?	tech management	0.5269385376528224	what is colorado technical university? => $x: ($x, is, colorado technical university) => $x: ($x, is, colorado technical university) => (r0.arg1: Tech Management, r0.namespace: reverb, r0.arg2: Colorado Technical University, r0.rel: can be found at) => Tech Management
what is colorado technical university?	annual meeting	0.5136252636252624	what is colorado technical university? => $x: ($x, is, colorado technical university) => $x: ($x, is, colorado technical university) => (r0.arg1: the Annual Meeting, r0.namespace: reverb, r0.arg2: Colorado Technical University, r0.rel: will be at) => the Annual Meeting
what is colorado technical university?	courses	0.5136252636252624	what is colorado technical university? => $x: ($x, is, colorado technical university) => $x: ($x, is, colorado technical university) => (r0.arg1: Courses, r0.namespace: reverb, r0.arg2: Colorado Technical University, r0.rel: are taught using) => Courses
what is malaysian currency?	prices	1.378726630512344	what is malaysian currency? => $x: ($x, is, malaysian currency) => $x: ($x, is, malaysian currency) => (r0.arg1: Prices, r0.namespace: reverb, r0.arg2: the Malaysian Ringgit currency, r0.rel: are quoted in) => Prices
what is malaysian currency?	ringgit	1.04430153180153	what is malaysian currency? => $x: ($x, is, malaysian currency) => $x: ($x, is, malaysian currency) => (r0.arg1: Ringgit, r0.namespace: openie4, r0.arg2: Malaysian currency, r0.rel: is) => Ringgit
what is new france?	louisiana	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Louisiana, r0.namespace: openie4, r0.arg2: New France, r0.rel: is also known as) => Louisiana; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Louisiana, r0.namespace: reverb, r0.arg2: New France, r0.rel: is also known as) => Louisiana
what is new france?	castles	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: castles, r0.namespace: reverb, r0.arg2: New France, r0.rel: were also built in) => castles
what is new france?	quebec	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Quebec, r0.namespace: openie4, r0.arg2: New France, r0.rel: was the capital of) => Quebec; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Quebec, r0.namespace: reverb, r0.arg2: New France, r0.rel: was the primate of) => Quebec; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Quebec, r0.namespace: openie4, r0.arg2: New France, r0.rel: was part of) => Quebec; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Quebec, r0.namespace: reverb, r0.arg2: New France, r0.rel: was part of) => Quebec; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Quebec, r0.namespace: reverb, r0.arg2: New France, r0.rel: was the capital of) => Quebec
what is new france?	qu?bec city	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Qu?bec City, r0.namespace: reverb, r0.arg2: New France?s, r0.rel: was) => Qu?bec City; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Qu?bec City, r0.namespace: reverb, r0.arg2: New France, r0.rel: is the soul of) => Qu?bec City
what is new france?	indentured servants	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: indentured servants, r0.namespace: reverb, r0.arg2: New France, r0.rel: were also sent to) => indentured servants
what is new france?	acadia	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Acadia, r0.namespace: openie4, r0.arg2: New France, r0.rel: was a colony of) => Acadia; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Acadia, r0.namespace: reverb, r0.arg2: New France, r0.rel: was a colony of) => Acadia
what is new france?	beer	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: beer, r0.namespace: reverb, r0.arg2: New France, r0.rel: was first brewed in) => beer
what is new france?	france	1.368741674991674	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: France, r0.namespace: reverb, r0.arg2: New France, r0.rel: was forced to surrender) => France
what is new france?	wall	1.3547627372627362	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: the wall, r0.namespace: reverb, r0.arg2: New France, r0.rel: was raised between) => the wall
what is new france?	canada	1.3547627372627362	what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Canada, r0.namespace: reverb, r0.arg2: New France, r0.rel: was) => Canada; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Canada, r0.namespace: openie4, r0.arg2: New France, r0.rel: was) => Canada; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Canada, r0.namespace: reverb, r0.arg2: New France, r0.rel: was called) => Canada; what is new france? => $x: ($x, is, new france) => $x: ($x, is, new france) => (r0.arg1: Canada, r0.namespace: reverb, r0.arg2: New France, r0.rel: was known as) => Canada
what is new york city airport?	accessible	1.3512680028305017	what is new york city airport? => $x: ($x, is, new york city airport) => $x: ($x, is, new york city airport) => (r0.arg1: accessible, r0.namespace: reverb, r0.arg2: the three major New York City Airports, r0.rel: are) => accessible
what is new york city airport?	plane	0.5291574166574157	what is new york city airport? => $x: ($x, is, new york city airport) => $x: ($x, is, new york city airport) => (r0.arg1: The plane, r0.namespace: reverb, r0.arg2: New York City ?s LaGuardia Airport, r0.rel: was bound for) => The plane
what is new york city airport?	american troops	0.5291574166574157	what is new york city airport? => $x: ($x, is, new york city airport) => $x: ($x, is, new york city airport) => (r0.arg1: American troops, r0.namespace: reverb, r0.arg2: a New York City airport, r0.rel: have been arrested at) => American troops
what is new york city airport?	jfk international	0.5069686266114825	what is new york city airport? => $x: ($x, is, new york city airport) => $x: ($x, is, new york city airport) => (r0.arg1: JFK International, r0.namespace: reverb, r0.arg2: New York City ?s main airport, r0.rel: is) => JFK International
what is newcastle metro?	current show	0.5543971653346647	what is newcastle metro? => $x: ($x, is, newcastle metro) => $x: ($x, is, newcastle metro) => (r0.arg1: current show, r0.namespace: reverb, r0.arg2: the Newcastle Metro Arena, r0.rel: was also seen at) => current show
what is newcastle metro?	direct link	0.5469084486941622	what is newcastle metro? => $x: ($x, is, newcastle metro) => $x: ($x, is, newcastle metro) => (r0.arg1: A direct link, r0.namespace: openie4, r0.arg2: the Newcastle Metro System, r0.rel: is provided by) => A direct link; what is newcastle metro? => $x: ($x, is, newcastle metro) => $x: ($x, is, newcastle metro) => (r0.arg1: A direct link, r0.namespace: reverb, r0.arg2: the Newcastle Metro System, r0.rel: is provided by) => A direct link
what is penn state's main campus?	pennsylvania	1.3609755984755973	what is penn state's main campus? => $x: ($x, is, penn state 's main campus) => $x: ($x, is, penn state 's main campus) => (r0.arg1: Pennsylvania, r0.namespace: reverb, r0.arg2: Penn State University?s main campus, r0.rel: is home to) => Pennsylvania
what is ryan seacrest radio show?	he?ll	1.382720612720612	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: he?ll, r0.namespace: reverb, r0.arg2: Ryan Seacrest?s radio talk show, r0.rel: be a guest on) => he?ll
what is ryan seacrest radio show?	britney	1.382720612720612	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Britney, r0.namespace: reverb, r0.arg2: Ryan Seacrest?s US radio show, r0.rel: has just been on) => Britney
what is ryan seacrest radio show?	daughtry	1.3765077515077508	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Daughtry, r0.namespace: reverb, r0.arg2: Ryan Seacrest?s KIIS FM radio show, r0.rel: was on) => Daughtry
what is ryan seacrest radio show?	nigel lythgoe	1.3587567194710042	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Nigel Lythgoe, r0.namespace: reverb, r0.arg2: Ryan Seacrest?s radio show, r0.rel: was on) => Nigel Lythgoe
what is ryan seacrest radio show?	taylor swift	1.3387868084296644	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Taylor Swift, r0.namespace: reverb, r0.arg2: the Ryan Seacrest radio show, r0.rel: was on) => Taylor Swift
what is ryan seacrest radio show?	taylor armstrong	0.5446895696895689	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Taylor Armstrong, r0.namespace: reverb, r0.arg2: Ryan Seacrest?s radio show, r0.rel: was a guest on) => Taylor Armstrong; what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Taylor Armstrong, r0.namespace: openie4, r0.arg2: a guest on Ryan Seacrests  radio show, r0.rel: was) => Taylor Armstrong
what is ryan seacrest radio show?	mischa	0.5291574166574157	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: Mischa, r0.namespace: reverb, r0.arg2: the Ryan Seacrest radio show, r0.rel: is scheduled to be on) => Mischa
what is ryan seacrest radio show?	single	0.51944982101232	what is ryan seacrest radio show? => $x: ($x, is, ryan seacrest radio show) => $x: ($x, is, ryan seacrest radio show) => (r0.arg1: The single, r0.namespace: reverb, r0.arg2: the Ryan Seacrest radio show, r0.rel: was previewed on) => The single
what is sir isaac newton theory?	kepler?s analysis	0.5369234931734923	what is sir isaac newton theory? => $x: ($x, is, sir isaac newton theory) => $x: ($x, is, sir isaac newton theory) => (r0.arg1: Kepler?s analysis, r0.namespace: reverb, r0.arg2: Sir Isaac Newton?s theories, r0.rel: was supported by) => Kepler?s analysis
what is spoken in czech republic?	prague	1.3765077515077508	what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Prague, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is an english-speaking school in) => Prague; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Prague, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is an english-speaking school in) => Prague
what is spoken in czech republic?	czech	0.5069686266114825	what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: The Czech, r0.namespace: openie4, r0.arg2: Czech Republic, r0.rel: is spoken in) => The Czech; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Czech, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is spoken in) => Czech; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Czech, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is the language spoken in) => Czech; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: The Czech, r0.namespace: openie4, r0.arg2: Czech Republic, r0.rel: is spoken in) => The Czech; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Czech, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is spoken in) => Czech; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: Czech, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is the language spoken in) => Czech
what is spoken in czech republic?	main language	0.46702880452880274	what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: main language, r0.namespace: reverb, r0.arg2: Czech Republic, r0.rel: is spoken in) => main language; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: main language, r0.namespace: reverb, r0.arg2: Czech Republic, r0.rel: is spoken in) => main language
what is spoken in czech republic?	language	0.46702880452880274	what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: The language, r0.namespace: reverb, r0.arg2: Czech Republic, r0.rel: is spoken in) => The language; what is spoken in czech republic? => $x: ($x, is spoken in, czech republic) => $x: ($x, is spoken in, czech republic) => (r0.arg1: The language, r0.namespace: reverb, r0.arg2: Czech Republic, r0.rel: is spoken in) => The language
what is the australian dollar called?	eur/aud	0.5369234931734923	what is the australian dollar called? => $x: (the australian dollar, called, $x) => $x: (the australian dollar, called, $x) => (r0.arg1: the Euro-Australian dollar pair, r0.namespace: reverb, r0.arg2: the EUR/AUD, r0.rel: called) => the EUR/AUD
what is the currency of the czech republic?	czech koruna	0.46702880452880274	what is the currency of the czech republic? => $x: ($x, is the currency of, the czech republic) => $x: ($x, is the currency of, the czech republic) => (r0.arg1: The Czech koruna, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is the currency of) => The Czech koruna; what is the currency of the czech republic? => $x: ($x, is the currency of, the czech republic) => $x: ($x, is the currency of, the czech republic) => (r0.arg1: The Czech koruna, r0.namespace: reverb, r0.arg2: the Czech Republic, r0.rel: is the currency of) => The Czech koruna
what is the islamic belief?	suicide	1.3765077515077508	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: suicide, r0.namespace: reverb, r0.arg2: the Islamic belief system, r0.rel: is indeed deeply rooted in) => suicide
what is the islamic belief?	mohammed	1.368741674991674	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: Mohammed, r0.namespace: reverb, r0.arg2: the Islamic belief system, r0.rel: is more damaging to) => Mohammed
what is the islamic belief?	afghanistan	1.3587567194710042	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: Afghanistan, r0.namespace: reverb, r0.arg2: the Islamic beliefs, r0.rel: is fully consistent with) => Afghanistan
what is the islamic belief?	tawhid	1.3454434454434443	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: Tawhid, r0.namespace: reverb, r0.arg2: the most important Islamic belief, r0.rel: is) => Tawhid
what is the islamic belief?	movement	0.5369234931734923	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: the movement, r0.namespace: reverb, r0.arg2: the Islamic belief, r0.rel: is a natural outgrowth of) => the movement
what is the islamic belief?	public freedoms	0.5369234931734923	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: public freedoms, r0.namespace: reverb, r0.arg2: the Islamic belief, r0.rel: are an integral part of) => public freedoms
what is the islamic belief?	22:26-30]	0.5269385376528224	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: 22:26-30] These, r0.namespace: reverb, r0.arg2: the basic Islamic beliefs and forms, r0.rel: are) => 22:26-30] These
what is the islamic belief?	agenda	0.5269385376528224	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: The agenda, r0.namespace: reverb, r0.arg2: the Islamic beliefs, r0.rel: here is to promote) => The agenda
what is the islamic belief?	murder	0.5269385376528224	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: the murder, r0.namespace: reverb, r0.arg2: the Islamic beliefs, r0.rel: will be contributed to) => the murder
what is the islamic belief?	denton	0.5269385376528224	what is the islamic belief? => $x: ($x, is, the islamic belief) => $x: ($x, is, the islamic belief) => (r0.arg1: Denton, r0.namespace: reverb, r0.arg2: the Islamic belief, r0.rel: also was impressed by) => Denton
what is the main language spoken in mexico?	spanish	1.2988469863469847	what is the main language spoken in mexico? => $x: ($x, is the main language spoken in, mexico) => $x: ($x, is the main language spoken in, mexico) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Mexico, r0.rel: is the main language spoken in) => Spanish; what is the main language spoken in mexico? => $x: ($x, is the main language spoken in, mexico) => $x: ($x, is the main language spoken in, mexico) => (r0.arg1: Spanish, r0.namespace: reverb, r0.arg2: Mexico, r0.rel: is the main language spoken in) => Spanish
what is the national flower of hawaii?	hibiscus	1.2988469863469847	what is the national flower of hawaii? => $x: ($x, is the national flower of, hawaii) => $x: ($x, is the national flower of, hawaii) => (r0.arg1: Hibiscus, r0.namespace: reverb, r0.arg2: Hawaii, r0.rel: is the national flower of) => Hibiscus; what is the national flower of hawaii? => $x: ($x, is the national flower of, hawaii) => $x: ($x, is the national flower of, hawaii) => (r0.arg1: Hibiscus, r0.namespace: reverb, r0.arg2: Hawaii, r0.rel: is the national flower of) => Hibiscus
what is the national language of iran?	farsi	1.2988469863469847	what is the national language of iran? => $x: ($x, is the national language of, iran) => $x: ($x, is the national language of, iran) => (r0.arg1: Farsi, r0.namespace: reverb, r0.arg2: Iran, r0.rel: is the national language of) => Farsi; what is the national language of iran? => $x: ($x, is the national language of, iran) => $x: ($x, is the national language of, iran) => (r0.arg1: Farsi, r0.namespace: reverb, r0.arg2: Iran, r0.rel: is the national language of) => Farsi
what is the primary language of china?	mandarin	1.2988469863469847	what is the primary language of china? => $x: ($x, is the primary language of, china) => $x: ($x, is the primary language of, china) => (r0.arg1: Mandarin, r0.namespace: reverb, r0.arg2: china, r0.rel: is the primary language of) => Mandarin; what is the primary language of china? => $x: ($x, is the primary language of, china) => $x: ($x, is the primary language of, china) => (r0.arg1: Mandarin, r0.namespace: reverb, r0.arg2: china, r0.rel: is the primary language of) => Mandarin
what is the stanley cup named after?	frederick arthur stanley	0.5069686266114825	what is the stanley cup named after? => $x: (the stanley cup, is named after, $x) => $x: (the stanley cup, is named after, $x) => (r0.arg1: The NHL?s Stanley Cup, r0.namespace: reverb, r0.arg2: Frederick Arthur Stanley, r0.rel: is named after) => Frederick Arthur Stanley; what is the stanley cup named after? => $x: (the stanley cup, named after, $x) => $x: (the stanley cup, named after, $x) => (r0.arg1: The NHL?s Stanley Cup, r0.namespace: reverb, r0.arg2: Frederick Arthur Stanley, r0.rel: is named after) => Frederick Arthur Stanley
what is the stanley cup named after?	frederick stanley	0.4903270340770326	what is the stanley cup named after? => $x: (the stanley cup, is named after, $x) => $x: (the stanley cup, is named after, $x) => (r0.arg1: The Stanley Cup, r0.namespace: reverb, r0.arg2: Frederick Stanley, r0.rel: is named after) => Frederick Stanley; what is the stanley cup named after? => $x: (the stanley cup, named after, $x) => $x: (the stanley cup, named after, $x) => (r0.arg1: The Stanley Cup, r0.namespace: reverb, r0.arg2: Frederick Stanley, r0.rel: is named after) => Frederick Stanley
what is the state flower of new mexico?	yucca	1.2988469863469847	what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: Yucca, r0.namespace: openie4, r0.arg2: New Mexico, r0.rel: is the state flower of) => Yucca; what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: The yucca, r0.namespace: reverb, r0.arg2: New Mexico, r0.rel: is the state flower of) => The yucca; what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: Yucca, r0.namespace: openie4, r0.arg2: New Mexico, r0.rel: is the state flower of) => Yucca; what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: The yucca, r0.namespace: reverb, r0.arg2: New Mexico, r0.rel: is the state flower of) => The yucca
what is the state flower of new mexico?	yucca flower	0.46702880452880274	what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: The yucca flower, r0.namespace: reverb, r0.arg2: New Mexico, r0.rel: is the state flower of) => The yucca flower; what is the state flower of new mexico? => $x: ($x, is the state flower of, new mexico) => $x: ($x, is the state flower of, new mexico) => (r0.arg1: The yucca flower, r0.namespace: reverb, r0.arg2: New Mexico, r0.rel: is the state flower of) => The yucca flower
what kind of currency does mexico use?	pesos	0.21248334998334817	what kind of currency does mexico use? => $x: ($x, "is a", currency) (mexico, use, $x) => $x: ($x, "is a", currency) (mexico, use, $x) => (r0.arg1: pesos, r1.rel: uses, r0.namespace: nell, r1.arg2: pesos, r0.arg2: currency, r0.rel: is a, r1.namespace: openie4, r1.arg1: Mexico) => pesos
what kind of currency does mexico use?	peso	0.21248334998334817	what kind of currency does mexico use? => $x: ($x, "is a", currency) (mexico, use, $x) => $x: ($x, "is a", currency) (mexico, use, $x) => (r0.arg1: peso, r1.rel: uses, r0.namespace: nell, r1.arg2: pesos, r0.arg2: currency, r0.rel: is a, r1.namespace: openie4, r1.arg1: Mexico) => peso
what kind of disease does montel williams have?	multiple sclerosis	1.689244089244088	what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: Multiple Sclerosis, r0.arg2: Disease, r0.rel: Type, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: Multiple Sclerosis, r0.arg2: Disease cause, r0.rel: Type, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease cause, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: Multiple Sclerosis, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: Multiple Sclerosis, r0.arg2: Disease caused by assassination in ways which appear natural, r0.rel: Type, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease caused by assassination in ways which appear natural, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has lived with, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has lived with, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease cause, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has lived with, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease or medical condition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "type", disease) (montel williams, have, $x) => $x: ($x, "type", disease) (montel williams, have, $x) => (r0.arg1: Multiple sclerosis, r1.rel: has lived with, r0.namespace: freebase, r1.arg2: multiple sclerosis, r0.arg2: Disease caused by assassination in ways which appear natural, r0.rel: Type, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has, r0.namespace: openie4, r1.arg2: Multiple Sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple Sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has, r0.namespace: openie4, r1.arg2: multiple sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple Sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has, r0.namespace: reverb, r1.arg2: Multiple Sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Montel Williams) => Multiple Sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has, r0.namespace: reverb, r1.arg2: multiple sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple Sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has lived with, r0.namespace: openie4, r1.arg2: multiple sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple Sclerosis; what kind of disease does montel williams have? => $x: ($x, "is an example of", disease) (montel williams, have, $x) => $x: ($x, "is an example of", disease) (montel williams, have, $x) => (r0.arg1: Multiple Sclerosis, r1.rel: has lived with, r0.namespace: reverb, r1.arg2: multiple sclerosis, r0.arg2: a disease, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Montel Williams) => Multiple Sclerosis
what kind of disease does montel williams have?	multiplesclerosis	0.5019761488511475	what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: MultipleSclerosis, r1.rel: has, r0.namespace: nell, r1.arg2: Multiple Sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Montel Williams) => MultipleSclerosis; what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: MultipleSclerosis, r1.rel: has, r0.namespace: nell, r1.arg2: multiple sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Montel Williams) => MultipleSclerosis; what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: MultipleSclerosis, r1.rel: has lived with, r0.namespace: nell, r1.arg2: multiple sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Montel Williams) => MultipleSclerosis
what kind of disease does montel williams have?	multiple-sclerosis	0.5019761488511475	what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: multiple-sclerosis, r1.rel: has, r0.namespace: nell, r1.arg2: Multiple Sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: openie4, r1.arg1: Montel Williams) => multiple-sclerosis; what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: multiple-sclerosis, r1.rel: has, r0.namespace: nell, r1.arg2: multiple sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Montel Williams) => multiple-sclerosis; what kind of disease does montel williams have? => $x: ($x, "is a", disease) (montel williams, have, $x) => $x: ($x, "is a", disease) (montel williams, have, $x) => (r0.arg1: multiple-sclerosis, r1.rel: has lived with, r0.namespace: nell, r1.arg2: multiple sclerosis, r0.arg2: disease, r0.rel: is a, r1.namespace: reverb, r1.arg1: Montel Williams) => multiple-sclerosis
what kind of government does brazil has?	law	1.6821840196840183	what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: the law, r1.rel: has changed, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => the law; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: the law, r1.rel: has changed, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Brazil) => the law; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: the law, r1.rel: have complied with, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => the law; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: The law, r1.rel: has changed, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => The law; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: The law, r1.rel: has changed, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Brazil) => The law; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: The law, r1.rel: have complied with, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => The law
what kind of government does brazil has?	thousands	1.3774785110722603	what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: has, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazil) => thousands; what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: have huge networks with, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazil) => thousands; what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: has left tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazil) => thousands; what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: has provided hundreds of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazil) => thousands; what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: have helped to save the lives of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Ipas Brazil) => thousands; what kind of government does brazil has? => $x: ($x, "is a kind of", government) (brazil, has, $x) => $x: ($x, "is a kind of", government) (brazil, has, $x) => (r0.arg1: thousands, r1.rel: also have tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazil and India) => thousands
what kind of government does brazil has?	church	1.3633651604805441	what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: The Church, r1.rel: has a different focus from, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => The Church; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: The Church, r1.rel: have expressed concerns over, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil and Paraguay) => The Church
what kind of government does brazil has?	move	0.8891962204462195	what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: the move, r1.rel: have sharply criticized, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: China , Brazil and Germany) => the move
what kind of government does brazil has?	education	0.5369234931734923	what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has poured money into, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has made strides in improving, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has achieved undeniable progress in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has made great strides in, r0.namespace: reverb, r1.arg2: Education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: had previously finished a Masters in, r0.namespace: reverb, r1.arg2: Education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has a more humane view of, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => education; what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: education, r1.rel: has only nine years of, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: modern day Brazil) => education
what kind of government does brazil has?	1993	0.5178613053613043	what kind of government does brazil has? => $x: ($x, "is an example of", government) (brazil, has, $x) => $x: ($x, "is an example of", government) (brazil, has, $x) => (r0.arg1: 1993, r1.rel: had been falling since early, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazil) => 1993
what kind of government does poland have?	law	1.6930565268065254	what kind of government does poland have? => $x: ($x, "is an example of", government) (poland, have, $x) => $x: ($x, "is an example of", government) (poland, have, $x) => (r0.arg1: the law, r1.rel: have cited, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Poland and Ukraine) => the law; what kind of government does poland have? => $x: ($x, "is an example of", government) (poland, have, $x) => $x: ($x, "is an example of", government) (poland, have, $x) => (r0.arg1: The law, r1.rel: have cited, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Poland and Ukraine) => The law
what kind of government does poland have?	thousands	1.3774785110722603	what kind of government does poland have? => $x: ($x, "is a kind of", government) (poland, have, $x) => $x: ($x, "is a kind of", government) (poland, have, $x) => (r0.arg1: thousands, r1.rel: will have to pay, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Poland) => thousands; what kind of government does poland have? => $x: ($x, "is a kind of", government) (poland, have, $x) => $x: ($x, "is a kind of", government) (poland, have, $x) => (r0.arg1: thousands, r1.rel: has spent tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Poland) => thousands; what kind of government does poland have? => $x: ($x, "is a kind of", government) (poland, have, $x) => $x: ($x, "is a kind of", government) (poland, have, $x) => (r0.arg1: thousands, r1.rel: will have to pay, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: NON-COMPATIBLE BROWSERS HERE Poland) => thousands
what kind of government does poland have?	nazi germany	1.3633651604805441	what kind of government does poland have? => $x: ($x, "is an example of", government) (poland, have, $x) => $x: ($x, "is an example of", government) (poland, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had been illegally annexed to, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: western Poland) => Nazi Germany
what kind of government does poland have?	move	0.8701340326340314	what kind of government does poland have? => $x: ($x, "is an example of", government) (poland, have, $x) => $x: ($x, "is an example of", government) (poland, have, $x) => (r0.arg1: the move, r1.rel: had fought, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Poland and Lithuania) => the move
what kind of government is egypt?	law	1.732663517038516	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: the law, r1.rel: was enforced in, r0.namespace: openie4, r1.arg2: Egypt, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => the law; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: the law, r1.rel: was eventually voided by, r0.namespace: openie4, r1.arg2: Egypt?s Constitutional Court, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => the law; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The law, r1.rel: was enforced in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => The law; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The law, r1.rel: was eventually voided by, r0.namespace: reverb, r1.arg2: Egypt?s Constitutional Court, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => The law
what kind of government is egypt?	church	1.7146603396603388	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: was in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: are based in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: is steadily retreating toward, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: was rescued from, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: is confused in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: is steadily retreating toward, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: is down in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: had been denied entry into, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the church) => The Church; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The Church, r1.rel: was dedicated to, r0.namespace: reverb, r1.arg2: Saint Maria of Egypt, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Church) => The Church
what kind of government is egypt?	thousands	1.388711586033014	what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: had been stuck in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands; what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: are protesting in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands; what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: are camping out in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands; what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: have been fired around, r0.namespace: reverb, r1.arg2: #tahrir #egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Thousands) => thousands; what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: can be traced to, r0.namespace: reverb, r1.arg2: 4th Century Egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands; what kind of government is egypt? => $x: ($x, "is a kind of", government) ($x, is, egypt) => $x: ($x, "is a kind of", government) ($x, is, egypt) => (r0.arg1: thousands, r1.rel: had been fleeing, r0.namespace: reverb, r1.arg2: post-Mubarak Egypt, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands
what kind of government is egypt?	draft	1.380390789765789	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The draft, r1.rel: was tabled by, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: the government?s violation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the draft) => The draft; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The draft, r1.rel: was expected to leave, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: the government?s violation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The draft) => The draft
what kind of government is egypt?	video	0.8891962204462195	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The video, r1.rel: is set in, r0.namespace: reverb, r1.arg2: ancient Egypt, r0.arg2: a shameful government cover, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The video) => The video
what kind of government is egypt?	measure	0.8891962204462195	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: the measure, r1.rel: however would need to be approved by, r0.namespace: openie4, r1.arg2: Egypt, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The measure) => the measure; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: the measure, r1.rel: is approved by, r0.namespace: openie4, r1.arg2: Egypt 's ruling military, r0.arg2: government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the measures) => the measure
what kind of government is egypt?	move	0.8752172827172816	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: the move, r1.rel: is the latest attempt by, r0.namespace: openie4, r1.arg2: Egypt, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The move) => the move
what kind of government is egypt?	jordan	0.8752172827172816	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is similar to, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: [is] the president of, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: were denied entry to, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is there war with, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is different than, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: was a lot cleaner than, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: was going to replace, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is even stronger than in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: were fired from, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: was such a change from, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is a former negotiator with, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is, r0.namespace: reverb, r1.arg2: similar to Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: are far fewer than in, r0.namespace: reverb, r1.arg2: Tunisia and Egypt, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jordan) => Jordan; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: Jordan, r1.rel: is fertile just like, r0.namespace: reverb, r1.arg2: Egypt and Eden, r0.arg2: efficient government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Jordan) => Jordan
what kind of government is egypt?	education	0.8752172827172816	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is free in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: education) => education; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is virtually free in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education) => education; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is highly valued in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education) => education; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is compulsory in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education) => education; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is free in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: education) => education; what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: education, r1.rel: is compulsory in, r0.namespace: reverb, r1.arg2: Egypt, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: 3. Education) => education
what kind of government is egypt?	above	0.5485726079476072	what kind of government is egypt? => $x: ($x, "is an example of", government) ($x, is, egypt) => $x: ($x, "is an example of", government) ($x, is, egypt) => (r0.arg1: The above, r1.rel: is a graph of, r0.namespace: reverb, r1.arg2: Egypt?s Internet usage, r0.arg2: government funding, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The above) => The above
what kind of government is mali?	move	0.8891962204462195	what kind of government is mali? => $x: ($x, "is an example of", government) ($x, is, mali) => $x: ($x, "is an example of", government) ($x, is, mali) => (r0.arg1: the move, r1.rel: was swiftly condemned by, r0.namespace: openie4, r1.arg2: Mali, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The move) => the move; what kind of government is mali? => $x: ($x, "is an example of", government) ($x, is, mali) => $x: ($x, "is an example of", government) ($x, is, mali) => (r0.arg1: the move, r1.rel: was spurred by, r0.namespace: openie4, r1.arg2: a Mali court decision, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The move) => the move
what kind of government is mali?	federal court	0.5509024309024302	what kind of government is mali? => $x: ($x, "is a", government) ($x, is, mali) => $x: ($x, "is a", government) ($x, is, mali) => (r0.arg1: Federal Court, r1.rel: are believed to be from, r0.namespace: nell, r1.arg2: Mali, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: federal court) => Federal Court
what kind of government is mali?	federal tax court	0.5509024309024302	what kind of government is mali? => $x: ($x, "is a", government) ($x, is, mali) => $x: ($x, "is a", government) ($x, is, mali) => (r0.arg1: Federal Tax Court, r1.rel: are believed to be from, r0.namespace: nell, r1.arg2: Mali, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: federal court) => Federal Tax Court
what kind of government is mali?	federal high court	0.5509024309024302	what kind of government is mali? => $x: ($x, "is a", government) ($x, is, mali) => $x: ($x, "is a", government) ($x, is, mali) => (r0.arg1: Federal High Court, r1.rel: are believed to be from, r0.namespace: nell, r1.arg2: Mali, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: federal court) => Federal High Court
what kind of government is mali?	video	0.5305694305694296	what kind of government is mali? => $x: ($x, "is an example of", government) ($x, is, mali) => $x: ($x, "is an example of", government) ($x, is, mali) => (r0.arg1: The video, r1.rel: was made in, r0.namespace: reverb, r1.arg2: Mali, r0.arg2: a shameful government cover, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The video) => The video
what kind of government is sweden?	law	1.6977161727161714	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: will be permitted into, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: is being debated in, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: is being presented in, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: is in, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: was introduced in, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: the law, r1.rel: is heavily debated in, r0.namespace: openie4, r1.arg2: Sweden, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => the law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: is being presented in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The law) => The law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: is being debated in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => The law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: is in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the law) => The law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: was introduced in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The law) => The law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: will be permitted into, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => The law; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The law, r1.rel: is heavily debated in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the law) => The law
what kind of government is sweden?	thousands	1.368741674991674	what kind of government is sweden? => $x: ($x, "is a kind of", government) ($x, is, sweden) => $x: ($x, "is a kind of", government) ($x, is, sweden) => (r0.arg1: thousands, r1.rel: must be extradited to, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: thousands) => thousands
what kind of government is sweden?	church	1.3547627372627362	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The Church, r1.rel: is huge business in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The church) => The Church
what kind of government is sweden?	video	0.5530530367068822	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The video, r1.rel: is made by, r0.namespace: reverb, r1.arg2: Sweden?s finest, r0.arg2: a shameful government cover, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The video) => The video; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The video, r1.rel: was shot in, r0.namespace: reverb, r1.arg2: Libya and Sweden, r0.arg2: a shameful government cover, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The video) => The video
what kind of government is sweden?	above	0.5305694305694296	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: The above, r1.rel: is the form used in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: government funding, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The above) => The above
what kind of government is sweden?	education	0.5305694305694296	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: education, r1.rel: has been free in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education) => education; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: education, r1.rel: is responsible for, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education) => education; what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: education, r1.rel: is free in, r0.namespace: reverb, r1.arg2: sweden and, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: !Education) => education
what kind of government is sweden?	?this development	0.5136252636252624	what kind of government is sweden? => $x: ($x, "is an example of", government) ($x, is, sweden) => $x: ($x, "is an example of", government) ($x, is, sweden) => (r0.arg1: ?This development, r1.rel: can be seen in, r0.namespace: reverb, r1.arg2: Sweden, r0.arg2: governments, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: This development) => ?This development
what kind of guitar did george harrison use?	epiphone casino	0.3397560772560757	what kind of guitar did george harrison use? => $x: ($x, "type", guitar) (george harrison, use, $x) => $x: ($x, "type", guitar) (george harrison, use, $x) => (r0.arg1: Epiphone Casino, r1.rel: used, r0.namespace: freebase, r1.arg2: Epiphone Casino, r0.arg2: Guitar, r0.rel: Type, r1.namespace: reverb, r1.arg1: George Harrison) => Epiphone Casino
what kind of guitar did jerry garcia play?	steel guitar	0.39217709373959275	what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Steel guitar, r1.rel: played, r0.namespace: freebase, r1.arg2: steel guitar, r0.arg2: Guitar, r0.rel: Type, r1.namespace: reverb, r1.arg1: Carry ON ! Jerry Garcia) => Steel guitar
what kind of guitar did jerry garcia play?	fender stratocaster xii	-0.2670621045621062	what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Fender Stratocaster XII, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Fender Stratocaster, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Jerry Garcia) => Fender Stratocaster XII
what kind of guitar did jerry garcia play?	fender stratocaster	-0.2670621045621062	what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Fender Stratocaster, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Fender Stratocaster, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Jerry Garcia) => Fender Stratocaster
what kind of guitar did jerry garcia play?	gibson sg	-0.2670621045621062	what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Gibson SG, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Gibson SG, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Jerry Garcia) => Gibson SG; what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Gibson SG, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Gibson SG, r0.arg2: Guitars, r0.rel: Type, r1.namespace: freebase, r1.arg1: Jerry Garcia) => Gibson SG
what kind of guitar did jerry garcia play?	gibson les paul	-0.2670621045621062	what kind of guitar did jerry garcia play? => $x: ($x, "type", guitar) (jerry garcia, play, $x) => $x: ($x, "type", guitar) (jerry garcia, play, $x) => (r0.arg1: Gibson Les Paul, r1.rel: Guitars Played, r0.namespace: freebase, r1.arg2: Gibson Les Paul, r0.arg2: Guitar, r0.rel: Type, r1.namespace: freebase, r1.arg1: Jerry Garcia) => Gibson Les Paul
what kind of language does colombia speak?	english	0.8367752039627023	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: some English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: some English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => english; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: some English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => english; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Colombia) => ENglish; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: some English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Colombia) => ENglish; what kind of language does colombia speak? => $x: ($x, "is a kind of", language) (colombia, speak, $x) => $x: ($x, "is a kind of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "is a kind of", language) (colombia, speak, $x) => $x: ($x, "is a kind of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: some English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "is an example of", language) (colombia, speak, $x) => $x: ($x, "is an example of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "is an example of", language) (colombia, speak, $x) => $x: ($x, "is an example of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "is an example of", language) (colombia, speak, $x) => $x: ($x, "is an example of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Colombia) => English; what kind of language does colombia speak? => $x: ($x, "is an example of", language) (colombia, speak, $x) => $x: ($x, "is an example of", language) (colombia, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Colombia) => English
what kind of language does colombia speak?	spanish	0.5069686266114825	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia ?) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speaks, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia ?) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speaks, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language Family, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia ?) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speaks, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language Family, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speak only, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia members) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speak only, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Language Family, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia members) => Spanish; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish, r1.rel: speak only, r0.namespace: freebase, r1.arg2: Spanish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia members) => Spanish; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: SPanish, r1.rel: spoke, r0.namespace: nell, r1.arg2: Spanish, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Colombia ?) => SPanish; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: SPanish, r1.rel: speaks, r0.namespace: nell, r1.arg2: Spanish, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Colombia) => SPanish; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: SPanish, r1.rel: speak only, r0.namespace: nell, r1.arg2: Spanish, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Colombia members) => SPanish
what kind of language does colombia speak?	english, spanish	0.36771395271395146	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: English, Spanish, r1.rel: speak, r0.namespace: freebase, r1.arg2: English and Spanish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Colombia) => English, Spanish
what kind of language does colombia speak?	spanish language	-0.22046564546564662	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Spanish Language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Spanish Language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Spanish Language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Spanish Language; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: Spanish language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombia) => Spanish language
what kind of language does colombia speak?	cams? language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Cams? Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Cams? Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Cams? Language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Cams? language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Cams? Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Cams? language; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: Cams? language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Cams? Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombia) => Cams? language
what kind of language does colombia speak?	arhuaco language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Arhuaco language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arhuaco Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Arhuaco language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Arhuaco Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arhuaco Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Arhuaco Language
what kind of language does colombia speak?	u'wa language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: U'wa language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: U'wa language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => U'wa language
what kind of language does colombia speak?	andoque language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Andoque Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Andoque language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Andoque Language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Andoque language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Andoque language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Andoque language; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: andoque language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Andoque language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombia) => andoque language
what kind of language does colombia speak?	guambiano language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: Guambiano Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Guambiano Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => Guambiano Language; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: Guambiano language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Guambiano Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombia) => Guambiano language
what kind of language does colombia speak?	p?ez language	-0.23910422910423046	what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: P?ez language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: P?ez language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => P?ez language; what kind of language does colombia speak? => $x: ($x, "type", language) (colombia, speak, $x) => $x: ($x, "type", language) (colombia, speak, $x) => (r0.arg1: P?ez Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: P?ez language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombia) => P?ez Language; what kind of language does colombia speak? => $x: ($x, "is a", language) (colombia, speak, $x) => $x: ($x, "is a", language) (colombia, speak, $x) => (r0.arg1: P?ez language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: P?ez language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombia) => P?ez language
what kind of language does turkey speak?	english	0.8775471056721046	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => english; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: many people in Turkey) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: many people in Turkey) => English; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => english; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: many people in Turkey) => english; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Turkey) => ENglish; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => ENglish; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: many people in Turkey) => ENglish; what kind of language does turkey speak? => $x: ($x, "is a kind of", language) (turkey, speak, $x) => $x: ($x, "is a kind of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is a kind of", language) (turkey, speak, $x) => $x: ($x, "is a kind of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => English; what kind of language does turkey speak? => $x: ($x, "is a kind of", language) (turkey, speak, $x) => $x: ($x, "is a kind of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: many people in Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: many people in Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: many people in Turkey) => English; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey , Moldova and China) => English
what kind of language does turkey speak?	aramaic	0.5446895696895689	what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: Aramaic, r1.rel: can speak in, r0.namespace: nell, r1.arg2: Aramaic, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Turkey?s Syriacs) => Aramaic
what kind of language does turkey speak?	language	0.5369234931734923	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: The Language, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: turkey) => The Language; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: The Language, r1.rel: cannot speak in, r0.namespace: freebase, r1.arg2: the language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: ?Turkey) => The Language; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: The language, r1.rel: spoke, r0.namespace: nell, r1.arg2: the language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: turkey) => The language; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: The language, r1.rel: cannot speak in, r0.namespace: nell, r1.arg2: the language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: ?Turkey) => The language
what kind of language does turkey speak?	turkish	0.5252743783993774	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkish; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey people) => Turkish; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak the language simply known as, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turkish; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: does speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Turkey expert) => Turkish; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak, r0.namespace: reverb, r1.arg2: Turkish, r0.arg2: an agglutinative language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkish; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak, r0.namespace: reverb, r1.arg2: Turkish, r0.arg2: an agglutinative language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey people) => Turkish; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: speak the language simply known as, r0.namespace: reverb, r1.arg2: Turkish, r0.arg2: an agglutinative language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Turkey) => Turkish; what kind of language does turkey speak? => $x: ($x, "is an example of", language) (turkey, speak, $x) => $x: ($x, "is an example of", language) (turkey, speak, $x) => (r0.arg1: Turkish, r1.rel: does speak, r0.namespace: reverb, r1.arg2: Turkish, r0.arg2: an agglutinative language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Turkey expert) => Turkish
what kind of language does turkey speak?	old turkish	0.4096507659007651	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Old Turkish, r1.rel: speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Old Turkish; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Old Turkish, r1.rel: speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey people) => Old Turkish; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Old Turkish, r1.rel: does speak, r0.namespace: freebase, r1.arg2: Turkish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Turkey expert) => Old Turkish
what kind of language does turkey speak?	balkan gagauz turkish	0.3863525363525353	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Balkan Gagauz Turkish, r1.rel: speak, r0.namespace: freebase, r1.arg2: Balkan Gagauz Turkish, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: European Turkey) => Balkan Gagauz Turkish
what kind of language does turkey speak?	chinese language	0.38169289044288934	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Chinese language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Chinese language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese language; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Chinese language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Chinese language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese language; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: Chinese language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Chinese language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese language; what kind of language does turkey speak? => $x: ($x, "is a kind of", language) (turkey, speak, $x) => $x: ($x, "is a kind of", language) (turkey, speak, $x) => (r0.arg1: Chinese language, r1.rel: Languages spoken, r0.namespace: reverb, r1.arg2: Chinese language, r0.arg2: language, r0.rel: is a kind of, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese language; what kind of language does turkey speak? => $x: ($x, "is a kind of", language) (turkey, speak, $x) => $x: ($x, "is a kind of", language) (turkey, speak, $x) => (r0.arg1: Chinese language, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Chinese language, r0.arg2: language, r0.rel: is a kind of, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese language
what kind of language does turkey speak?	ladino	0.3397560772560757	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Ladino, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Ladino, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Ladino
what kind of language does turkey speak?	hindi language	-0.1971674159174167	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Hindi Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Hindi Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Indians in Turkey) => Hindi Language; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Hindi Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Hindi Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Indians in Turkey) => Hindi Language; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Hindi language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Hindi Language, r0.arg2: Language Family, r0.rel: Type, r1.namespace: freebase, r1.arg1: Indians in Turkey) => Hindi language; what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Hindi Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Hindi Language, r0.arg2: Language Writing System, r0.rel: Type, r1.namespace: freebase, r1.arg1: Indians in Turkey) => Hindi Language; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: hindi language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Hindi Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Indians in Turkey) => hindi language
what kind of language does turkey speak?	chinese sign language	-0.1971674159174167	what kind of language does turkey speak? => $x: ($x, "type", language) (turkey, speak, $x) => $x: ($x, "type", language) (turkey, speak, $x) => (r0.arg1: Chinese Sign Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Chinese language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese Sign Language; what kind of language does turkey speak? => $x: ($x, "is a", language) (turkey, speak, $x) => $x: ($x, "is a", language) (turkey, speak, $x) => (r0.arg1: Chinese Sign Language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Chinese language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Chinese people in Turkey) => Chinese Sign Language
what kind of music did jimi hendrix play?	rock music	1.3369713619713606	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Rock Music, r1.rel: started playing, r0.namespace: freebase, r1.arg2: rock music, r0.arg2: Music Publisher, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Rock Music; what kind of music did jimi hendrix play? => $x: ($x, "is an example of", music) (jimi hendrix, play, $x) => $x: ($x, "is an example of", music) (jimi hendrix, play, $x) => (r0.arg1: Rock music, r1.rel: started playing, r0.namespace: reverb, r1.arg2: rock music, r0.arg2: a music genre, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Rock music
what kind of music did jimi hendrix play?	background	0.8472594072594057	what kind of music did jimi hendrix play? => $x: ($x, "is an example of", music) (jimi hendrix, play, $x) => $x: ($x, "is an example of", music) (jimi hendrix, play, $x) => (r0.arg1: the background, r1.rel: playing in, r0.namespace: reverb, r1.arg2: the background, r0.arg2: banjo music, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Jimi Hendrix) => the background
what kind of music did jimi hendrix play?	rock & pop music	0.5136252636252624	what kind of music did jimi hendrix play? => $x: ($x, "is a", music) (jimi hendrix, play, $x) => $x: ($x, "is a", music) (jimi hendrix, play, $x) => (r0.arg1: rock & pop music, r1.rel: started playing, r0.namespace: nell, r1.arg2: rock music, r0.arg2: genre of music, r0.rel: is a, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => rock & pop music
what kind of music did jimi hendrix play?	rock/metal music	0.5136252636252624	what kind of music did jimi hendrix play? => $x: ($x, "is a", music) (jimi hendrix, play, $x) => $x: ($x, "is a", music) (jimi hendrix, play, $x) => (r0.arg1: rock/metal music, r1.rel: started playing, r0.namespace: nell, r1.arg2: rock music, r0.arg2: genre of music, r0.rel: is a, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => rock/metal music
what kind of music did jimi hendrix play?	woodstock	0.42129988067488	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: played at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: played at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Recurring Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: play at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: openie4, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: play at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Recurring Music Festival, r0.rel: Type, r1.namespace: openie4, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: played his final set at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: plays the unofficial last day of, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: played his final set at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Recurring Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock, r1.rel: plays the unofficial last day of, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Recurring Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock
what kind of music did jimi hendrix play?	woodstock '99	0.4160048285048279	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '99, r1.rel: played at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '99; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '99, r1.rel: play at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: openie4, r1.arg1: Jimi Hendrix) => Woodstock '99; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '99, r1.rel: played his final set at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '99; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '99, r1.rel: plays the unofficial last day of, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '99
what kind of music did jimi hendrix play?	woodstock '94	0.4160048285048279	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '94, r1.rel: played at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '94; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '94, r1.rel: play at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: openie4, r1.arg1: Jimi Hendrix) => Woodstock '94; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '94, r1.rel: played his final set at, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '94; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Woodstock '94, r1.rel: plays the unofficial last day of, r0.namespace: freebase, r1.arg2: Woodstock, r0.arg2: Music Festival, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Woodstock '94
what kind of music did jimi hendrix play?	band	0.40188468938468835	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: The Band, r1.rel: played with, r0.namespace: freebase, r1.arg2: the band, r0.arg2: Film music contributor, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => The Band; what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: The Band, r1.rel: famously played with, r0.namespace: freebase, r1.arg2: the band, r0.arg2: Film music contributor, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => The Band
what kind of music did jimi hendrix play?	rock pop music	0.37969589933875536	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Rock Pop Music, r1.rel: started playing, r0.namespace: freebase, r1.arg2: rock music, r0.arg2: Music Publisher, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Rock Pop Music
what kind of music did jimi hendrix play?	rock steady music	0.37969589933875536	what kind of music did jimi hendrix play? => $x: ($x, "type", music) (jimi hendrix, play, $x) => $x: ($x, "type", music) (jimi hendrix, play, $x) => (r0.arg1: Rock Steady Music, r1.rel: started playing, r0.namespace: freebase, r1.arg2: rock music, r0.arg2: Music Publisher, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jimi Hendrix) => Rock Steady Music
what kind of products does nike sell?	products	0.8775471056721046	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: Products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => Products; what kind of products does nike sell? => $x: ($x, "is an example of", products) (nike, sell, $x) => $x: ($x, "is an example of", products) (nike, sell, $x) => (r0.arg1: products, r1.rel: sells, r0.namespace: reverb, r1.arg2: its products, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Nike) => products; what kind of products does nike sell? => $x: ($x, "is an example of", products) (nike, sell, $x) => $x: ($x, "is an example of", products) (nike, sell, $x) => (r0.arg1: products, r1.rel: sells an assortment of, r0.namespace: reverb, r1.arg2: products, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Nike) => products; what kind of products does nike sell? => $x: ($x, "is an example of", products) (nike, sell, $x) => $x: ($x, "is an example of", products) (nike, sell, $x) => (r0.arg1: products, r1.rel: is trying to sell, r0.namespace: reverb, r1.arg2: a product, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Nike) => products
what kind of products does nike sell?	18 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 18 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 18 products
what kind of products does nike sell?	4 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 4 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 4 products
what kind of products does nike sell?	27 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 27 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 27 products
what kind of products does nike sell?	3 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 3 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 3 products
what kind of products does nike sell?	5 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 5 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 5 products
what kind of products does nike sell?	46 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 46 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 46 products
what kind of products does nike sell?	15 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 15 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 15 products
what kind of products does nike sell?	2 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 2 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 2 products
what kind of products does nike sell?	26 products	0.5369234931734923	what kind of products does nike sell? => $x: ($x, "is a", products) (nike, sell, $x) => $x: ($x, "is a", products) (nike, sell, $x) => (r0.arg1: 26 products, r1.rel: sells an assortment of, r0.namespace: nell, r1.arg2: products, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: Nike) => 26 products
what language do australia people speak?	english	0.8574259074259061	what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia people) => English; what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => English; what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia people) => English; what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => English; what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia people) => english; what language do australia people speak? => $x: ($x, "type", language) (australia people, speak, $x) => $x: ($x, "type", language) (australia people, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => english; what language do australia people speak? => $x: ($x, "is a", language) (australia people, speak, $x) => $x: ($x, "is a", language) (australia people, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australia people) => ENglish; what language do australia people speak? => $x: ($x, "is a", language) (australia people, speak, $x) => $x: ($x, "is a", language) (australia people, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => ENglish; what language do australia people speak? => $x: ($x, "is a kind of", language) (australia people, speak, $x) => $x: ($x, "is a kind of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia people) => English; what language do australia people speak? => $x: ($x, "is a kind of", language) (australia people, speak, $x) => $x: ($x, "is a kind of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => English; what language do australia people speak? => $x: ($x, "is an example of", language) (australia people, speak, $x) => $x: ($x, "is an example of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia people) => English; what language do australia people speak? => $x: ($x, "is an example of", language) (australia people, speak, $x) => $x: ($x, "is an example of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => English; what language do australia people speak? => $x: ($x, "is an example of", language) (australia people, speak, $x) => $x: ($x, "is an example of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia people) => English; what language do australia people speak? => $x: ($x, "is an example of", language) (australia people, speak, $x) => $x: ($x, "is an example of", language) (australia people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia many Indigenous people) => English
what language do brazilians use?	system ?	1.3407837995337983	what language do brazilians use? => $x: ($x, "is an example of", language) (brazilians, use, $x) => $x: ($x, "is an example of", language) (brazilians, use, $x) => (r0.arg1: system ?, r1.rel: are using, r0.namespace: reverb, r1.arg2: our system, r0.arg2: this new language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Brazilians) => system ?
what language do brazilians use?	english	0.8775471056721046	what language do brazilians use? => $x: ($x, "type", language) (brazilians, use, $x) => $x: ($x, "type", language) (brazilians, use, $x) => (r0.arg1: English, r1.rel: did n?t need to use, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazilians) => English; what language do brazilians use? => $x: ($x, "type", language) (brazilians, use, $x) => $x: ($x, "type", language) (brazilians, use, $x) => (r0.arg1: English, r1.rel: did n?t need to use, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazilians) => English; what language do brazilians use? => $x: ($x, "type", language) (brazilians, use, $x) => $x: ($x, "type", language) (brazilians, use, $x) => (r0.arg1: english, r1.rel: did n?t need to use, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazilians) => english; what language do brazilians use? => $x: ($x, "is a", language) (brazilians, use, $x) => $x: ($x, "is a", language) (brazilians, use, $x) => (r0.arg1: ENglish, r1.rel: did n?t need to use, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Brazilians) => ENglish; what language do brazilians use? => $x: ($x, "is a kind of", language) (brazilians, use, $x) => $x: ($x, "is a kind of", language) (brazilians, use, $x) => (r0.arg1: English, r1.rel: did n?t need to use, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazilians) => English; what language do brazilians use? => $x: ($x, "is an example of", language) (brazilians, use, $x) => $x: ($x, "is an example of", language) (brazilians, use, $x) => (r0.arg1: English, r1.rel: did n?t need to use, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazilians) => English; what language do brazilians use? => $x: ($x, "is an example of", language) (brazilians, use, $x) => $x: ($x, "is an example of", language) (brazilians, use, $x) => (r0.arg1: English, r1.rel: did n?t need to use, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Brazilians) => English
what language do brazilians use?	dance	0.5178613053613043	what language do brazilians use? => $x: ($x, "is a kind of", language) (brazilians, use, $x) => $x: ($x, "is a kind of", language) (brazilians, use, $x) => (r0.arg1: the dance, r1.rel: is used to distinguish, r0.namespace: reverb, r1.arg2: the dance, r0.arg2: body language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazilian Zouk) => the dance; what language do brazilians use? => $x: ($x, "is a kind of", language) (brazilians, use, $x) => $x: ($x, "is a kind of", language) (brazilians, use, $x) => (r0.arg1: Dance, r1.rel: is used to distinguish, r0.namespace: reverb, r1.arg2: the dance, r0.arg2: universal language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Brazilian Zouk) => Dance
what language do brazilians use?	portuguese	0.3397560772560757	what language do brazilians use? => $x: ($x, "type", language) (brazilians, use, $x) => $x: ($x, "type", language) (brazilians, use, $x) => (r0.arg1: Portuguese, r1.rel: use, r0.namespace: freebase, r1.arg2: Portuguese, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazilians) => Portuguese
what language do brazilians use?	com internet	0.23578157953157802	what language do brazilians use? => $x: ($x, "is a", language) (brazilians, use, $x) => $x: ($x, "is a", language) (brazilians, use, $x) => (r0.arg1: com the internet, r1.rel: use, r0.namespace: nell, r1.arg2: internet, r0.arg2: programming language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Brazilians) => com the internet
what language do colombian people speak?	spanish language	-0.22712228247942656	what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Language; what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Language; what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Language; what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Spanish Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Language; what language do colombian people speak? => $x: ($x, "is a", language) (colombian people, speak, $x) => $x: ($x, "is a", language) (colombian people, speak, $x) => (r0.arg1: Spanish language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish language
what language do colombian people speak?	spanish sign language	-0.24376387501387642	what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Spanish Sign Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Sign Language; what language do colombian people speak? => $x: ($x, "is a", language) (colombian people, speak, $x) => $x: ($x, "is a", language) (colombian people, speak, $x) => (r0.arg1: Spanish Sign Language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Sign Language
what language do colombian people speak?	old spanish language	-0.24376387501387642	what language do colombian people speak? => $x: ($x, "type", language) (colombian people, speak, $x) => $x: ($x, "type", language) (colombian people, speak, $x) => (r0.arg1: Old Spanish language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Spanish Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Colombian people) => Old Spanish language; what language do colombian people speak? => $x: ($x, "is a", language) (colombian people, speak, $x) => $x: ($x, "is a", language) (colombian people, speak, $x) => (r0.arg1: old spanish language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombian people) => old spanish language
what language do colombian people speak?	spanish modern language	-1.098880286380288	what language do colombian people speak? => $x: ($x, "is a", language) (colombian people, speak, $x) => $x: ($x, "is a", language) (colombian people, speak, $x) => (r0.arg1: Spanish Modern Language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Colombian people) => Spanish Modern Language
what language do most australians speak?	english	0.8472594072594057	what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => english; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => english; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => english; what language do most australians speak? => $x: ($x, "is a", language) (most australians, speak, $x) => $x: ($x, "is a", language) (most australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Australians) => ENglish; what language do most australians speak? => $x: ($x, "is a", language) (most australians, speak, $x) => $x: ($x, "is a", language) (most australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Most Australians) => ENglish; what language do most australians speak? => $x: ($x, "is a", language) (most australians, speak, $x) => $x: ($x, "is a", language) (most australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => ENglish; what language do most australians speak? => $x: ($x, "is a kind of", language) (most australians, speak, $x) => $x: ($x, "is a kind of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is a kind of", language) (most australians, speak, $x) => $x: ($x, "is a kind of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is a kind of", language) (most australians, speak, $x) => $x: ($x, "is a kind of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English
what language do most australians speak?	german	0.5051531801531789	what language do most australians speak? => $x: ($x, "is a", language) (most australians, speak, $x) => $x: ($x, "is a", language) (most australians, speak, $x) => (r0.arg1: german, r1.rel: speak, r0.namespace: nell, r1.arg2: German, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Australian Nazis) => german; what language do most australians speak? => $x: ($x, "is an example of", language) (most australians, speak, $x) => $x: ($x, "is an example of", language) (most australians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: reverb, r1.arg2: German, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australian Nazis) => German
what language do most australians speak?	australian english	0.3630543068043055	what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: Australian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Australian English; what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: Australian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Australian English
what language do most australians speak?	malaysian english	0.3630543068043055	what language do most australians speak? => $x: ($x, "type", language) (most australians, speak, $x) => $x: ($x, "type", language) (most australians, speak, $x) => (r0.arg1: Malaysian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Malaysian English
what language do most italians speak?	english	0.8472594072594057	what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italian casinos) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italian casinos) => English; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Italians) => english; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italians) => english; what language do most italians speak? => $x: ($x, "type", language) (most italians, speak, $x) => $x: ($x, "type", language) (most italians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Italian casinos) => english; what language do most italians speak? => $x: ($x, "is a", language) (most italians, speak, $x) => $x: ($x, "is a", language) (most italians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Most Italians) => ENglish; what language do most italians speak? => $x: ($x, "is a", language) (most italians, speak, $x) => $x: ($x, "is a", language) (most italians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Italians) => ENglish; what language do most italians speak? => $x: ($x, "is a", language) (most italians, speak, $x) => $x: ($x, "is a", language) (most italians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Italian casinos) => ENglish; what language do most italians speak? => $x: ($x, "is a kind of", language) (most italians, speak, $x) => $x: ($x, "is a kind of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is a kind of", language) (most italians, speak, $x) => $x: ($x, "is a kind of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is a kind of", language) (most italians, speak, $x) => $x: ($x, "is a kind of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Most Italian casinos) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Italian casinos) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Italians) => English; what language do most italians speak? => $x: ($x, "is an example of", language) (most italians, speak, $x) => $x: ($x, "is an example of", language) (most italians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Italian casinos) => English
what language do navajo people speak?	english	0.8730666769128297	what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => English; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: sometimes refused to speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Navajo people) => English; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => English; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: sometimes refused to speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Navajo people) => English; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => english; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: english, r1.rel: sometimes refused to speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Navajo people) => english; what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => ENglish; what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: ENglish, r1.rel: sometimes refused to speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: the Navajo people) => ENglish; what language do navajo people speak? => $x: ($x, "is a kind of", language) (navajo people, speak, $x) => $x: ($x, "is a kind of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => English; what language do navajo people speak? => $x: ($x, "is a kind of", language) (navajo people, speak, $x) => $x: ($x, "is a kind of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: sometimes refused to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Navajo people) => English; what language do navajo people speak? => $x: ($x, "is an example of", language) (navajo people, speak, $x) => $x: ($x, "is an example of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => English; what language do navajo people speak? => $x: ($x, "is an example of", language) (navajo people, speak, $x) => $x: ($x, "is an example of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: sometimes refused to speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Navajo people) => English; what language do navajo people speak? => $x: ($x, "is an example of", language) (navajo people, speak, $x) => $x: ($x, "is an example of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Almost all Navajo people) => English; what language do navajo people speak? => $x: ($x, "is an example of", language) (navajo people, speak, $x) => $x: ($x, "is an example of", language) (navajo people, speak, $x) => (r0.arg1: English, r1.rel: sometimes refused to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Navajo people) => English
what language do navajo people speak?	english language	-0.22712228247942656	what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Programming Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English Language; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English Language; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English language; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English Language; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English Language; what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English Language; what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: ENGLISH LANGUAGE, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => ENGLISH LANGUAGE; what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: English The language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => English The language
what language do navajo people speak?	english languages	-0.24376387501387642	what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English languages, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language Family, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English languages
what language do navajo people speak?	english sign language	-0.24376387501387642	what language do navajo people speak? => $x: ($x, "type", language) (navajo people, speak, $x) => $x: ($x, "type", language) (navajo people, speak, $x) => (r0.arg1: English sign language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Navajo people) => English sign language
what language do navajo people speak?	us english language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: US English language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => US English language
what language do navajo people speak?	english - language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: English - Language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => English - Language
what language do navajo people speak?	old english language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: Old English language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => Old English language
what language do navajo people speak?	uk english language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: UK English Language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => UK English Language
what language do navajo people speak?	old spanish language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: old spanish language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => old spanish language
what language do navajo people speak?	spanish language	-1.098880286380288	what language do navajo people speak? => $x: ($x, "is a", language) (navajo people, speak, $x) => $x: ($x, "is a", language) (navajo people, speak, $x) => (r0.arg1: Spanish language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Spanish Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Navajo people) => Spanish language
what language do russians speak?	english	0.9031751581751575	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: often spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: often spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: often spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Many Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: freebase, r1.arg2: an English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Few Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: freebase, r1.arg2: an English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Few Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: spoke, r0.namespace: freebase, r1.arg2: an English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Few Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Many Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: local Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: local Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: local Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian background) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian background) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian background) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: most Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian children) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: most Russians) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian children) => English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: most Russians) => english; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian children) => english; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: often spoke, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Many Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: the Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: spoke, r0.namespace: nell, r1.arg2: an English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Few Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Many Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: local Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russian background) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: most Russians) => ENglish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russian children) => ENglish; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: often spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian background) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: most Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian children) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: local Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: attempting to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: an English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Few Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: is also widely spoken as is, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: many Russian people) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a young Russian guy) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the younger Russian population) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: all the Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Russian crew members) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Most Russian girls) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: so many Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a native born Russian) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: a Russian woman) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The young Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: These Russian women) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a Russian hospital) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: very few Russian businessmen) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Many Russian people) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: a lot of Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Russian ones) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: some English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: two older Russian men) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the camp , Russian and Finnish) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a friendly and hospitable Russian gentleman) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian brides) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: will speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: many Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian immigrants) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian parents) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: normally speak, r0.namespace: openie4, r1.arg2: some English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Younger Russians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: only a small number of Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: a Russian immigrant) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Russian priests) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: learned to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian Jewish immigrants) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke only broken, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: ?The Russian representative) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: were spoken as commonly as, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Russian and Yiddish) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks a little bit of, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a Russian solider) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: ago was unable to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: ?a Russian maid) => English; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: its Latvian and Russian-speaking cabin crew) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: often spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: local Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian background) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: most Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian children) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: attempting to speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: reverb, r1.arg2: an English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Few Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: is also widely spoken as is, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: These Russian women) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a Russian hospital) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: very few Russian businessmen) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Many Russian people) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: all the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian crew members) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Russian girls) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the younger Russian population) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a lot of Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian ones) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a Russian woman) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The young Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: many Russian people) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a young Russian guy) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: so many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a native born Russian) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: reverb, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: two older Russian men) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the camp , Russian and Finnish) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a friendly and hospitable Russian gentleman) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian immigrants) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: will speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian brides) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian parents) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: to speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: normally speak, r0.namespace: reverb, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Younger Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: only a small number of Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a Russian immigrant) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian priests) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: learned to speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian Jewish immigrants) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke only broken, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ?The Russian representative) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: ago was unable to speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ?a Russian maid) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: were spoken as commonly as, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian and Yiddish) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks a little bit of, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a Russian solider) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: its Latvian and Russian-speaking cabin crew) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: often spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: attempting to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: local Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian background) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: most Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian children) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: an English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Few Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: is also widely spoken as is, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: all the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian crew members) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Russian girls) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: many Russian people) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a young Russian guy) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: These Russian women) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a Russian hospital) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: very few Russian businessmen) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Many Russian people) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the younger Russian population) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a Russian woman) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The young Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a lot of Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian ones) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: so many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a native born Russian) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke, r0.namespace: openie4, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: two older Russian men) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the camp , Russian and Finnish) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a friendly and hospitable Russian gentleman) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: will speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: many Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian immigrants) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian brides) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian parents) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: normally speak, r0.namespace: openie4, r1.arg2: some English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Younger Russians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: only a small number of Russians or Ukrainians) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: barely spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: a Russian immigrant) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speak in, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Russian priests) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: learned to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian Jewish immigrants) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: spoke only broken, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ?The Russian representative) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: ago was unable to speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: ?a Russian maid) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: were spoken as commonly as, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russian and Yiddish) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: speaks a little bit of, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a Russian solider) => English; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: its Latvian and Russian-speaking cabin crew) => English
what language do russians speak?	art	0.8612383449883437	what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: Art, r1.rel: spoke of, r0.namespace: reverb, r1.arg2: art, r0.arg2: language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a 20th century Russian psychologist) => Art; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: Art, r1.rel: spoke of, r0.namespace: openie4, r1.arg2: art, r0.arg2: language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a 20th century Russian psychologist) => Art; what language do russians speak? => $x: ($x, "is a kind of", language) (russians, speak, $x) => $x: ($x, "is a kind of", language) (russians, speak, $x) => (r0.arg1: art, r1.rel: spoke of, r0.namespace: reverb, r1.arg2: art, r0.arg2: visual language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a 20th century Russian psychologist) => art
what language do russians speak?	com business	0.51944982101232	what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: com business, r1.rel: is largely spoken in, r0.namespace: nell, r1.arg2: business, r0.arg2: programming language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russian) => com business
what language do russians speak?	german	0.5089656177156164	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: freebase, r1.arg2: german, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: russian name) => German; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: freebase, r1.arg2: german, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: russian name) => German; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: german, r1.rel: speak, r0.namespace: nell, r1.arg2: german, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: russian name) => german; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: reverb, r1.arg2: german, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: russian name) => German; what language do russians speak? => $x: ($x, "is an example of", language) (russians, speak, $x) => $x: ($x, "is an example of", language) (russians, speak, $x) => (r0.arg1: German, r1.rel: spoke, r0.namespace: reverb, r1.arg2: some German, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: a Russian teacher) => German
what language do russians speak?	yiddish	0.4903270340770326	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Yiddish, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Yiddish, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian immigrants) => Yiddish; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: yiddish, r1.rel: spoke, r0.namespace: nell, r1.arg2: Yiddish, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russian immigrants) => yiddish
what language do russians speak?	arabic	0.4903270340770326	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Arabic, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Arabic, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: ancient russians) => Arabic; what language do russians speak? => $x: ($x, "is a", language) (russians, speak, $x) => $x: ($x, "is a", language) (russians, speak, $x) => (r0.arg1: arabic, r1.rel: spoke, r0.namespace: nell, r1.arg2: Arabic, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: ancient russians) => arabic
what language do russians speak?	russian	0.3996658103800952	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: speak only, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: ethnic Russian) => Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: ethnic Russians) => Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Russians) => Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Russian, r1.rel: is widely spoken outside, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russian) => Russian
what language do russians speak?	old russian	0.3863525363525353	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Old Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => Old Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Old Russian, r1.rel: speak only, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => Old Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Old Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: ethnic Russians) => Old Russian; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Old Russian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Russian, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Russians) => Old Russian
what language do russians speak?	british english	0.3863525363525353	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: British English, r1.rel: speak, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Russians) => British English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: British English, r1.rel: speak, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Language Dialect, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Russians) => British English; what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: British English, r1.rel: speak, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the Russians) => British English
what language do russians speak?	estonian	0.36771395271395146	what language do russians speak? => $x: ($x, "type", language) (russians, speak, $x) => $x: ($x, "type", language) (russians, speak, $x) => (r0.arg1: Estonian, r1.rel: usually speak, r0.namespace: freebase, r1.arg2: Estonian, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russians) => Estonian
what language do serbs speak?	english	0.8367752039627023	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Serbs) => English; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Serbs) => English; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Serbs) => english; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Serbs) => ENglish; what language do serbs speak? => $x: ($x, "is a kind of", language) (serbs, speak, $x) => $x: ($x, "is a kind of", language) (serbs, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Serbs) => English; what language do serbs speak? => $x: ($x, "is an example of", language) (serbs, speak, $x) => $x: ($x, "is an example of", language) (serbs, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Serbs) => English; what language do serbs speak? => $x: ($x, "is an example of", language) (serbs, speak, $x) => $x: ($x, "is an example of", language) (serbs, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Serbs) => English
what language do serbs speak?	language	0.51944982101232	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: The Language, r1.rel: longer speak, r0.namespace: freebase, r1.arg2: the language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: many diaspora Serbs) => The Language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: The language, r1.rel: longer speak, r0.namespace: nell, r1.arg2: the language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: many diaspora Serbs) => The language
what language do serbs speak?	serbian language	0.4903270340770326	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Language Most Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Swedish Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: German Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Greece) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs of Croatia) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs of Montenegro) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Albania) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs of Bosnia and Herzegovina) => Serbian language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: speak, r0.namespace: nell, r1.arg2: the Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Language Most Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Swedish Serbs) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: German Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Greece) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs of Croatia) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs of Montenegro) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Albania) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs of Bosnia and Herzegovina) => Serbian language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: Serbian language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => Serbian language
what language do serbs speak?	german language	0.4903270340770326	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Serbian language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Language Most Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Swedish Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: German Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Greece) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Language Most Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Swedish Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: German Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Greece) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Serbian language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: reverb, r1.arg1: Language Most Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Swedish Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: German Language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Greece) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Serbian language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: reverb, r1.arg1: Language Most Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Swedish Serbs) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: German Language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => German Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: German Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Serbian language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Greece) => German Language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: German language, r1.rel: speak, r0.namespace: nell, r1.arg2: the Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Language Most Serbs) => German language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: German language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Swedish Serbs) => German language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: German language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Vojvodina) => German language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: German language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: German Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Austria) => German language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: German language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Serbian language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in Greece) => German language
what language do serbs speak?	serbian	0.3397560772560757	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Serbian, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Serbs) => Serbian; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Serbian, r1.rel: speak, r0.namespace: freebase, r1.arg2: Serbian, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The Serbs) => Serbian
what language do serbs speak?	english languages	-0.18940133940134007	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English languages, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language Family, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English languages
what language do serbs speak?	english sign language	-0.18940133940134007	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English sign language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English sign language
what language do serbs speak?	english language	-0.18940133940134007	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Programming Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Official Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language in fiction, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: English Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: English Language, r0.arg2: Language written in, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English Language; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: ENGLISH LANGUAGE, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => ENGLISH LANGUAGE; what language do serbs speak? => $x: ($x, "is a", language) (serbs, speak, $x) => $x: ($x, "is a", language) (serbs, speak, $x) => (r0.arg1: English The language, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: English Language, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Serbs in the United Kingdom) => English The language
what language do serbs speak?	albanian, gheg language	-0.20715237143808662	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Albanian, Gheg Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Albanian language, r0.arg2: Language Dialect, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Albania) => Albanian, Gheg Language; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Albanian, Gheg Language, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Albanian language, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Albania) => Albanian, Gheg Language
what language do serbs speak?	austrian german	-0.20715237143808662	what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Austrian German, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Austrian German, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Austrian German; what language do serbs speak? => $x: ($x, "type", language) (serbs, speak, $x) => $x: ($x, "type", language) (serbs, speak, $x) => (r0.arg1: Austrian German, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Austrian German, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Serbs in Austria) => Austrian German
what language does australia use?	system ?	1.3633651604805441	what language does australia use? => $x: ($x, "is an example of", language) (australia, use, $x) => $x: ($x, "is an example of", language) (australia, use, $x) => (r0.arg1: system ?, r1.rel: used, r0.namespace: reverb, r1.arg2: this system, r0.arg2: this new language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => system ?; what language does australia use? => $x: ($x, "is an example of", language) (australia, use, $x) => $x: ($x, "is an example of", language) (australia, use, $x) => (r0.arg1: system ?, r1.rel: had already used, r0.namespace: reverb, r1.arg2: the system, r0.arg2: this new language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia and Canada) => system ?
what language does australia use?	dna	1.3496794871794862	what language does australia use? => $x: ($x, "is a kind of", language) (australia, use, $x) => $x: ($x, "is a kind of", language) (australia, use, $x) => (r0.arg1: DNA, r1.rel: are banned from using, r0.namespace: reverb, r1.arg2: the DNA, r0.arg2: language consisting, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia scientists) => DNA
what language does australia use?	art	0.8612383449883437	what language does australia use? => $x: ($x, "is a kind of", language) (australia, use, $x) => $x: ($x, "is a kind of", language) (australia, use, $x) => (r0.arg1: Art, r1.rel: used new technologies in, r0.namespace: reverb, r1.arg2: their art, r0.arg2: language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => Art; what language does australia use? => $x: ($x, "is a kind of", language) (australia, use, $x) => $x: ($x, "is a kind of", language) (australia, use, $x) => (r0.arg1: Art, r1.rel: used new technologies in, r0.namespace: openie4, r1.arg2: their art, r0.arg2: language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => Art; what language does australia use? => $x: ($x, "is a kind of", language) (australia, use, $x) => $x: ($x, "is a kind of", language) (australia, use, $x) => (r0.arg1: art, r1.rel: used new technologies in, r0.namespace: reverb, r1.arg2: their art, r0.arg2: visual language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => art
what language does australia use?	com internet	0.4903270340770326	what language does australia use? => $x: ($x, "is a", language) (australia, use, $x) => $x: ($x, "is a", language) (australia, use, $x) => (r0.arg1: com the internet, r1.rel: using, r0.namespace: nell, r1.arg2: the internet, r0.arg2: programming language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Australia) => com the internet; what language does australia use? => $x: ($x, "is a", language) (australia, use, $x) => $x: ($x, "is a", language) (australia, use, $x) => (r0.arg1: com the internet, r1.rel: use, r0.namespace: nell, r1.arg2: the Internet, r0.arg2: programming language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australia) => com the internet
what language does australia use?	google	0.3863525363525353	what language does australia use? => $x: ($x, "type", language) (australia, use, $x) => $x: ($x, "type", language) (australia, use, $x) => (r0.arg1: Google, r1.rel: uses, r0.namespace: freebase, r1.arg2: Google, r0.arg2: Programming Language Developer, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australia) => Google
what language does australians speak?	slang	1.6685933857808841	what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: Slang, r1.rel: spoke, r0.namespace: openie4, r1.arg2: 'slang, r0.arg2: language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australian students) => Slang
what language does australians speak?	english	0.8701340326340314	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: however speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: however speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: only speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: however speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: are speaking, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: are speaking, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: can speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: only spoke, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: are speaking, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: do speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: do speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: do speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: spoke a language other than, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: spoke a language other than, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Most Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: spoke a language other than, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The majority of Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the way Australian women) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The majority of Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the way Australian women) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The majority of Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: the way Australian women) => english; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: english, r1.rel: speak, r0.namespace: freebase, r1.arg2: English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => english; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: only speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: however speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: can speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: only spoke, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: are speaking, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: do speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: The Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Most Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: spoke a language other than, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: The majority of Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: the way Australian women) => ENglish; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: ENglish, r1.rel: speak, r0.namespace: nell, r1.arg2: English, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => ENglish; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: however speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: are speaking, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: do speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: The Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: spoke a language other than, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the way Australian women) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: The majority of Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language does australians speak? => $x: ($x, "is a kind of", language) (australians, speak, $x) => $x: ($x, "is a kind of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: however speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only spoke, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: are speaking, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: do speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: spoke a language other than, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The majority of Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the way Australian women) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: reverb, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: however speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: can speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: only spoke, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: are speaking, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: do speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: spoke a language other than, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The majority of Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Conversation Most Australians) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the way Australian women) => English; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: English, r1.rel: speak, r0.namespace: openie4, r1.arg2: English, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: 10-11] The Australians) => English
what language does australians speak?	german	0.8612383449883437	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: German, r1.rel: spoke, r0.namespace: freebase, r1.arg2: German, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: these Australians) => German; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: German, r1.rel: spoke, r0.namespace: freebase, r1.arg2: German, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: these Australians) => German; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: freebase, r1.arg2: German, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australian Nazis) => German; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: german, r1.rel: spoke, r0.namespace: nell, r1.arg2: German, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: these Australians) => german; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: german, r1.rel: speak, r0.namespace: nell, r1.arg2: German, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Most Australian Nazis) => german; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: German, r1.rel: spoke, r0.namespace: reverb, r1.arg2: German, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: these Australians) => German; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: German, r1.rel: speak, r0.namespace: reverb, r1.arg2: German, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Most Australian Nazis) => German
what language does australians speak?	japanese	0.8612383449883437	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Japanese, r1.rel: would be speaking, r0.namespace: freebase, r1.arg2: Japanese, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Australians) => Japanese; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: Japanese, r1.rel: would be speaking, r0.namespace: reverb, r1.arg2: Japanese, r0.arg2: an OV language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => Japanese; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: Japanese, r1.rel: would be speaking, r0.namespace: reverb, r1.arg2: Japanese, r0.arg2: a synthetic language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australians) => Japanese; what language does australians speak? => $x: ($x, "is an example of", language) (australians, speak, $x) => $x: ($x, "is an example of", language) (australians, speak, $x) => (r0.arg1: Japanese, r1.rel: learned to speak, r0.namespace: reverb, r1.arg2: Japanese, r0.arg2: a synthetic language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The young Australian priest) => Japanese
what language does australians speak?	language	0.5069686266114825	what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: The language, r1.rel: speaks, r0.namespace: nell, r1.arg2: the language, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: The Australian ,) => The language
what language does australians speak?	greek	0.4903270340770326	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Greek, r1.rel: speak, r0.namespace: freebase, r1.arg2: Greek, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: 260,000 Australians) => Greek; what language does australians speak? => $x: ($x, "is a", language) (australians, speak, $x) => $x: ($x, "is a", language) (australians, speak, $x) => (r0.arg1: Greek, r1.rel: speak, r0.namespace: nell, r1.arg2: Greek, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: 260,000 Australians) => Greek
what language does australians speak?	portuguese	0.3996658103800952	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Portuguese, r1.rel: would probably be speaking, r0.namespace: freebase, r1.arg2: Portuguese, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => Portuguese
what language does australians speak?	malaysian english	0.3863525363525353	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Malaysian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Malaysian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Malaysian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Cornish Australian) => Malaysian English
what language does australians speak?	british english	0.3863525363525353	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: British English, r1.rel: speak essentially, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => British English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: British English, r1.rel: speak essentially, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Language Dialect, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => British English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: British English, r1.rel: speak essentially, r0.namespace: freebase, r1.arg2: British English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Australians) => British English
what language does australians speak?	australian english	0.3863525363525353	what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: speak, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Most Australians) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Cornish Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Cornish Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Czech Australians) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Vietnamese Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Czech Australians) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Vietnamese Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Uruguayan Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Italian Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Uruguayan Australian) => Australian English; what language does australians speak? => $x: ($x, "type", language) (australians, speak, $x) => $x: ($x, "type", language) (australians, speak, $x) => (r0.arg1: Australian English, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Australian English, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Italian Australian) => Australian English
what language does colombia?	com business	0.5291574166574157	what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: com business, r1.rel: did n?t exist in, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: programming language, r0.rel: is a, r1.namespace: reverb, r1.arg1: business) => com business
what language does colombia?	va people	0.51944982101232	what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: va people, r1.rel: actually do go to, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: people) => va people
what language does colombia?	code company	0.5069686266114825	what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: code company, r1.rel: were doing in, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: programming language, r0.rel: is a, r1.namespace: reverb, r1.arg1: his company) => code company; what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: code company, r1.rel: doing business in, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: programming language, r0.rel: is a, r1.namespace: openie4, r1.arg1: a company) => code company
what language does colombia?	com company	0.5069686266114825	what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: com company, r1.rel: were doing in, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: programming language, r0.rel: is a, r1.namespace: reverb, r1.arg1: his company) => com company; what language does colombia? => $x: ($x, "is a", language) ($x, does, colombia) => $x: ($x, "is a", language) ($x, does, colombia) => (r0.arg1: com company, r1.rel: doing business in, r0.namespace: nell, r1.arg2: Colombia, r0.arg2: programming language, r0.rel: is a, r1.namespace: openie4, r1.arg1: a company) => com company
what language does egyptian people speak?	only language	0.24743069430569292	what language does egyptian people speak? => $x: ($x, "is a", language) (egyptian people, speak, $x) => $x: ($x, "is a", language) (egyptian people, speak, $x) => (r0.arg1: ONLY language, r1.rel: have spoken, r0.namespace: nell, r1.arg2: only languages, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: The Egyptian people) => ONLY language
what language is mainly spoken in egypt?	egyptian arabic	0.48450247668997515	what language is mainly spoken in egypt? => $x: ($x, "type", language) ($x, is mainly spoken in, egypt) => $x: ($x, "type", language) ($x, is mainly spoken in, egypt) => (r0.arg1: Egyptian Arabic, r1.rel: is mainly spoken in, r0.namespace: freebase, r1.arg2: urban Egypt, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Egyptian Arabic) => Egyptian Arabic; what language is mainly spoken in egypt? => $x: ($x, "type", language) ($x, is mainly spoken in, egypt) => $x: ($x, "type", language) ($x, is mainly spoken in, egypt) => (r0.arg1: Egyptian Arabic, r1.rel: is mainly spoken in, r0.namespace: freebase, r1.arg2: urban Egypt, r0.arg2: Language Dialect, r0.rel: Type, r1.namespace: reverb, r1.arg1: Egyptian Arabic) => Egyptian Arabic; what language is mainly spoken in egypt? => $x: ($x, "is a", language) ($x, is mainly spoken in, egypt) => $x: ($x, "is a", language) ($x, is mainly spoken in, egypt) => (r0.arg1: Egyptian Arabic, r1.rel: is mainly spoken in, r0.namespace: nell, r1.arg2: urban Egypt, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Egyptian Arabic) => Egyptian Arabic
what language is spoken in argentina?	spanish	0.5136252636252624	what language is spoken in argentina? => $x: ($x, "type", language) ($x, is spoken in, argentina) => $x: ($x, "type", language) ($x, is spoken in, argentina) => (r0.arg1: Spanish, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: both Spain and Argentina, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Spanish) => Spanish; what language is spoken in argentina? => $x: ($x, "type", language) ($x, is spoken in, argentina) => $x: ($x, "type", language) ($x, is spoken in, argentina) => (r0.arg1: Spanish, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: both Spain and Argentina, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Spanish) => Spanish; what language is spoken in argentina? => $x: ($x, "type", language) ($x, is spoken in, argentina) => $x: ($x, "type", language) ($x, is spoken in, argentina) => (r0.arg1: Spanish, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: both Spain and Argentina, r0.arg2: Language Family, r0.rel: Type, r1.namespace: reverb, r1.arg1: Spanish) => Spanish; what language is spoken in argentina? => $x: ($x, "is a", language) ($x, is spoken in, argentina) => $x: ($x, "is a", language) ($x, is spoken in, argentina) => (r0.arg1: SPanish, r1.rel: is spoken in, r0.namespace: nell, r1.arg2: both Spain and Argentina, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Spanish) => SPanish
what language is spoken in greek?	greek	0.5019761488511475	what language is spoken in greek? => $x: ($x, "type", language) ($x, is spoken in, greek) => $x: ($x, "type", language) ($x, is spoken in, greek) => (r0.arg1: Greek, r1.rel: are primarily spoken in, r0.namespace: freebase, r1.arg2: Greek Macedonia, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Greek) => Greek; what language is spoken in greek? => $x: ($x, "is a", language) ($x, is spoken in, greek) => $x: ($x, "is a", language) ($x, is spoken in, greek) => (r0.arg1: Greek, r1.rel: are primarily spoken in, r0.namespace: nell, r1.arg2: Greek Macedonia, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: Greek) => Greek
what language is spoken in switzerland?	english	0.8472594072594057	what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: english, r1.rel: is widely spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => english; what language is spoken in switzerland? => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => (r0.arg1: ENglish, r1.rel: is widely spoken in, r0.namespace: nell, r1.arg2: Switzerland, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: English) => ENglish; what language is spoken in switzerland? => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => (r0.arg1: ENglish, r1.rel: is widely spoken in, r0.namespace: nell, r1.arg2: Switzerland, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: English) => ENglish; what language is spoken in switzerland? => $x: ($x, "is a kind of", language) ($x, is spoken in, switzerland) => $x: ($x, "is a kind of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: openie4, r1.arg2: Switzerland, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "is a kind of", language) ($x, is spoken in, switzerland) => $x: ($x, "is a kind of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: openie4, r1.arg2: Switzerland, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: reverb, r1.arg2: Switzerland, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: openie4, r1.arg2: Switzerland, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: openie4, r1.arg2: Switzerland, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: English) => English; what language is spoken in switzerland? => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => (r0.arg1: English, r1.rel: is widely spoken in, r0.namespace: reverb, r1.arg2: Switzerland, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: English) => English
what language is spoken in switzerland?	french	0.5305694305694296	what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: French, r1.rel: are spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: French) => French; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: French, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: southern and western Switzerland , France, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: French) => French; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: French, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: southern and western Switzerland , France, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: French) => French; what language is spoken in switzerland? => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => (r0.arg1: French, r1.rel: are spoken in, r0.namespace: nell, r1.arg2: Switzerland, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: French) => French; what language is spoken in switzerland? => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => (r0.arg1: French, r1.rel: is spoken in, r0.namespace: nell, r1.arg2: southern and western Switzerland , France, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: French) => French
what language is spoken in switzerland?	german	0.49498667998667856	what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: German, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: German) => German; what language is spoken in switzerland? => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => $x: ($x, "is a", language) ($x, is spoken in, switzerland) => (r0.arg1: german, r1.rel: is spoken in, r0.namespace: nell, r1.arg2: Switzerland, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: German) => german; what language is spoken in switzerland? => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => $x: ($x, "is an example of", language) ($x, is spoken in, switzerland) => (r0.arg1: German, r1.rel: is spoken in, r0.namespace: reverb, r1.arg2: Switzerland, r0.arg2: a difficult language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: German) => German
what language is spoken in switzerland?	italian	0.3956718281718272	what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: Italian, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Italian) => Italian; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: Italian, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Switzerland, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Italian) => Italian; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: Italian, r1.rel: is mostly spoken in, r0.namespace: freebase, r1.arg2: Italy and Switzerland, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Italian) => Italian; what language is spoken in switzerland? => $x: ($x, "type", language) ($x, is spoken in, switzerland) => $x: ($x, "type", language) ($x, is spoken in, switzerland) => (r0.arg1: Italian, r1.rel: is mostly spoken in, r0.namespace: freebase, r1.arg2: Italy and Switzerland, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Italian) => Italian
what language speak in brazil?	english	0.8658979908979897	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: english, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: English) => english; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: english, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => english; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is the first foreign language spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is the first foreign language spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: english, r1.rel: is the first foreign language spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: English) => english; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: ENglish, r1.rel: is spoken in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: English) => ENglish; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: ENglish, r1.rel: is spoken in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: English) => ENglish; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: ENglish, r1.rel: is the first foreign language spoken in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: English) => ENglish; what language speak in brazil? => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => $x: ($x, "is a kind of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is the first foreign language spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: second language, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is the first foreign language spoken in, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English; what language speak in brazil? => $x: ($x, "is an example of", language) ($x, speak in, brazil) => $x: ($x, "is an example of", language) ($x, speak in, brazil) => (r0.arg1: English, r1.rel: is the first foreign language spoken in, r0.namespace: openie4, r1.arg2: Brazil, r0.arg2: a language, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: English) => English
what language speak in brazil?	va people	0.4869987155701426	what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: va people, r1.rel: speak Portuguese in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: reverb, r1.arg1: People) => va people; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: va people, r1.rel: speaking English in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: people) => va people
what language speak in brazil?	yoruba	0.40188468938468835	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Yoruba, r1.rel: is also spoken in, r0.namespace: freebase, r1.arg2: Cuba and Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Yoruba) => Yoruba
what language speak in brazil?	portuguese	0.39217709373959275	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is spoken primarily in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is spoken only in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is primarily spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is the language spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is the only language spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: spoken in, r0.namespace: freebase, r1.arg2: Brazil and Portugal, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: spoken in, r0.namespace: freebase, r1.arg2: Portugal and Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: the Portuguese) => Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil and Macau, r0.arg2: Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Portuguese) => Portuguese
what language speak in brazil?	brazilian portuguese	0.37969589933875536	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Brazilian Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: reverb, r1.arg1: Brazilian Portuguese) => Brazilian Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Brazilian Portuguese, r1.rel: Spoken in countries, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Brazilian Portuguese) => Brazilian Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Brazilian Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Brazilian Portuguese) => Brazilian Portuguese
what language speak in brazil?	loma people	0.23245326102468805	what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: loma people, r1.rel: speak English in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: Not many people) => loma people
what language speak in brazil?	language	0.21248334998334817	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: The Language, r1.rel: spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: The languages) => The Language; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: The language, r1.rel: spoken in, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: openie4, r1.arg1: The languages) => The language
what language speak in brazil?	andi people	0.12515044479330073	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Andi people, r1.rel: speak English in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Not many people) => Andi people
what language speak in brazil?	iberian portuguese	0.10850885225885087	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Iberian Portuguese, r1.rel: Spoken in countries, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Brazilian Portuguese) => Iberian Portuguese; what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Iberian Portuguese, r1.rel: is spoken in, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Language, r0.rel: Type, r1.namespace: openie4, r1.arg1: Brazilian Portuguese) => Iberian Portuguese
what language speak in brazil?	indo-portuguese language	-0.22712228247942656	what language speak in brazil? => $x: ($x, "type", language) ($x, speak in, brazil) => $x: ($x, "type", language) ($x, speak in, brazil) => (r0.arg1: Indo-Portuguese Language, r1.rel: Spoken in countries, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Human Language, r0.rel: Type, r1.namespace: freebase, r1.arg1: Portuguese Language) => Indo-Portuguese Language; what language speak in brazil? => $x: ($x, "is a", language) ($x, speak in, brazil) => $x: ($x, "is a", language) ($x, speak in, brazil) => (r0.arg1: Indo-Portuguese language, r1.rel: Spoken in countries, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: language, r0.rel: is a, r1.namespace: freebase, r1.arg1: Portuguese Language) => Indo-Portuguese language
what movies has liam hemsworth played in?	movie o	0.49809311059310923	what movies has liam hemsworth played in? => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => (r0.arg1: movie o, r1.rel: plays a lead role in, r0.namespace: nell, r1.arg2: movie, r0.arg2: movie, r0.rel: is a, r1.namespace: reverb, r1.arg1: Liam Hemsworth) => movie o
what movies has liam hemsworth played in?	movies	0.49809311059310923	what movies has liam hemsworth played in? => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => (r0.arg1: Movies, r1.rel: plays a lead role in, r0.namespace: nell, r1.arg2: movie, r0.arg2: movie, r0.rel: is a, r1.namespace: reverb, r1.arg1: Liam Hemsworth) => Movies; what movies has liam hemsworth played in? => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => $x: ($x, "is a", movies) (liam hemsworth, played in, $x) => (r0.arg1: movies All, r1.rel: plays a lead role in, r0.namespace: nell, r1.arg2: movie, r0.arg2: movie, r0.rel: is a, r1.namespace: reverb, r1.arg1: Liam Hemsworth) => movies All
what movies has miley cyrus been in?	being	0.1411263736263726	what movies has miley cyrus been in? => $x: ($x, "type", movies) (miley cyrus, been in, $x) => $x: ($x, "type", movies) (miley cyrus, been in, $x) => (r0.arg1: Being There, r1.rel: is back in the news after, r0.namespace: freebase, r1.arg2: being, r0.arg2: Movie, r0.rel: Type, r1.namespace: openie4, r1.arg1: Miley Cyrus) => Being There
what movies has spike lee made?	movie_malcolm_x	0.5019761488511475	what movies has spike lee made? => $x: ($x, "is a", movies) (spike lee, made, $x) => $x: ($x, "is a", movies) (spike lee, made, $x) => (r0.arg1: movie_malcolm_x, r1.rel: made clear in, r0.namespace: nell, r1.arg2: the movie Malcolm X, r0.arg2: movie, r0.rel: is a, r1.namespace: reverb, r1.arg1: Spike Lee) => movie_malcolm_x
what movies has spike lee made?	movies	0.46702880452880274	what movies has spike lee made? => $x: ($x, "is a", movies) (spike lee, made, $x) => $x: ($x, "is a", movies) (spike lee, made, $x) => (r0.arg1: movies The, r1.rel: was making, r0.namespace: nell, r1.arg2: the movie, r0.arg2: movie, r0.rel: is a, r1.namespace: reverb, r1.arg1: Spike Lee) => movies The
what offices did theodore roosevelt hold?	tax commissioner	0.5207939496401024	what offices did theodore roosevelt hold? => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => (r0.arg1: tax commissioner, r1.rel: had held the post of, r0.namespace: nell, r1.arg2: commissioner, r0.arg2: office held by a politician, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Theodore Roosevelt) => tax commissioner
what offices did theodore roosevelt hold?	park commissioner	0.42129988067488	what offices did theodore roosevelt hold? => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => (r0.arg1: Park Commissioner, r1.rel: had held the post of, r0.namespace: freebase, r1.arg2: commissioner, r0.arg2: Government Office or Title, r0.rel: Type, r1.namespace: reverb, r1.arg1: Theodore Roosevelt) => Park Commissioner
what offices did theodore roosevelt hold?	commissioner	0.4160048285048279	what offices did theodore roosevelt hold? => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => (r0.arg1: Commissioner, r1.rel: had held the post of, r0.namespace: freebase, r1.arg2: commissioner, r0.arg2: Government office category, r0.rel: Type, r1.namespace: reverb, r1.arg1: Theodore Roosevelt) => Commissioner
what offices did theodore roosevelt hold?	office	-0.09319291819291937	what offices did theodore roosevelt hold? => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => (r0.arg1: office, r1.rel: is a politician who holds the office of, r0.namespace: nell, r1.arg2: office, r0.arg2: office held by a politician, r0.rel: is a kind of, r1.namespace: nell, r1.arg1: theodore roosevelt) => office
what offices did theodore roosevelt hold?	co-president	-0.09319291819291937	what offices did theodore roosevelt hold? => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => (r0.arg1: co-president, r1.rel: is a politician who holds the office of, r0.namespace: nell, r1.arg2: PResident, r0.arg2: office held by a politician, r0.rel: is a kind of, r1.namespace: nell, r1.arg1: theodore roosevelt) => co-president
what offices did theodore roosevelt hold?	president	-0.09319291819291937	what offices did theodore roosevelt hold? => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => (r0.arg1: President, r1.rel: is a politician who holds the office of, r0.namespace: freebase, r1.arg2: PResident, r0.arg2: Government Office or Title, r0.rel: Type, r1.namespace: nell, r1.arg1: theodore roosevelt) => President; what offices did theodore roosevelt hold? => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => $x: ($x, "type", offices) (theodore roosevelt, hold, $x) => (r0.arg1: President, r1.rel: is a politician who holds the office of, r0.namespace: freebase, r1.arg2: PResident, r0.arg2: Government office category, r0.rel: Type, r1.namespace: nell, r1.arg1: theodore roosevelt) => President; what offices did theodore roosevelt hold? => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => $x: ($x, "is a kind of", offices) (theodore roosevelt, hold, $x) => (r0.arg1: PResident, r1.rel: is a politician who holds the office of, r0.namespace: nell, r1.arg2: PResident, r0.arg2: office held by a politician, r0.rel: is a kind of, r1.namespace: nell, r1.arg1: theodore roosevelt) => PResident
what places are in the west midlands?	university	1.6511197136197118	what places are in the west midlands? => $x: ($x, "is a kind of", places) ($x, are in, the west midlands) => $x: ($x, "is a kind of", places) ($x, are in, the west midlands) => (r0.arg1: University, r1.rel: is in, r0.namespace: openie4, r1.arg2: the west midlands, r0.arg2: place, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The University) => University
what places are in the west midlands?	birmingham	0.39058857808857717	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place with neighborhoods, r0.rel: Type, r1.namespace: reverb, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is located in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place with neighborhoods, r0.rel: Type, r1.namespace: openie4, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is a city in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place with neighborhoods, r0.rel: Type, r1.namespace: openie4, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is located in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: openie4, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is a city in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: openie4, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is a city in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place with neighborhoods, r0.rel: Type, r1.namespace: reverb, r1.arg1: Birmingham) => Birmingham; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Birmingham, r1.rel: is a city in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Birmingham) => Birmingham
what places are in the west midlands?	burton	0.39058857808857717	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Burton, r1.rel: is based in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Burton) => Burton; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Burton, r1.rel: is based in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: US Census Designated Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Burton) => Burton
what places are in the west midlands?	clare	0.38169289044288934	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Clare, r1.rel: is set in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Clare) => Clare
what places are in the west midlands?	baxter	0.38169289044288934	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Baxter, r1.rel: was preaching in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Baxter) => Baxter
what places are in the west midlands?	taunton	0.38169289044288934	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: Taunton, r1.rel: am in, r0.namespace: freebase, r1.arg2: the West Midlands area, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: Taunton) => Taunton
what places are in the west midlands?	london	0.38169289044288934	what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Real place, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: US Census Designated Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: HUD County Place, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place with neighborhoods, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London; what places are in the west midlands? => $x: ($x, "type", places) ($x, are in, the west midlands) => $x: ($x, "type", places) ($x, are in, the west midlands) => (r0.arg1: London, r1.rel: was in, r0.namespace: freebase, r1.arg2: the West Midlands, r0.arg2: Place of interment, r0.rel: Type, r1.namespace: reverb, r1.arg1: London) => London
what position did lebron james play?	goalie	0.5136252636252624	what position did lebron james play? => $x: ($x, "is a", position) (lebron james, play, $x) => $x: ($x, "is a", position) (lebron james, play, $x) => (r0.arg1: goalie, r1.rel: can play, r0.namespace: nell, r1.arg2: goalie, r0.arg2: sports team position, r0.rel: is a, r1.namespace: reverb, r1.arg1: LeBron James) => goalie
what position did lebron james play?	point guard	0.5019761488511475	what position did lebron james play? => $x: ($x, "type", position) (lebron james, play, $x) => $x: ($x, "type", position) (lebron james, play, $x) => (r0.arg1: Point guard, r1.rel: played, r0.namespace: freebase, r1.arg2: point guard, r0.arg2: Basketball Position, r0.rel: Type, r1.namespace: reverb, r1.arg1: Lebron James) => Point guard; what position did lebron james play? => $x: ($x, "type", position) (lebron james, play, $x) => $x: ($x, "type", position) (lebron james, play, $x) => (r0.arg1: Point guard, r1.rel: played, r0.namespace: freebase, r1.arg2: point guard, r0.arg2: Sports position, r0.rel: Type, r1.namespace: reverb, r1.arg1: Lebron James) => Point guard; what position did lebron james play? => $x: ($x, "is a", position) (lebron james, play, $x) => $x: ($x, "is a", position) (lebron james, play, $x) => (r0.arg1: Point Guard, r1.rel: played, r0.namespace: nell, r1.arg2: point guard, r0.arg2: sports team position, r0.rel: is a, r1.namespace: reverb, r1.arg1: Lebron James) => Point Guard
what position did lebron james play?	football	0.4160048285048279	what position did lebron james play? => $x: ($x, "type", position) (lebron james, play, $x) => $x: ($x, "type", position) (lebron james, play, $x) => (r0.arg1: Football, r1.rel: has expressed an interest in playing, r0.namespace: freebase, r1.arg2: football, r0.arg2: Sports position, r0.rel: Type, r1.namespace: reverb, r1.arg1: LeBron James) => Football
what position did vince lombardi play?	football	0.10850885225885087	what position did vince lombardi play? => $x: ($x, "type", position) (vince lombardi, play, $x) => $x: ($x, "type", position) (vince lombardi, play, $x) => (r0.arg1: Football, r1.rel: played, r0.namespace: freebase, r1.arg2: football, r0.arg2: Sports position, r0.rel: Type, r1.namespace: openie4, r1.arg1: Vince Lombardi) => Football
what products does the united states export?	products	0.8692263094048797	what products does the united states export? => $x: ($x, "is an example of", products) (the united states, export, $x) => $x: ($x, "is an example of", products) (the united states, export, $x) => (r0.arg1: products, r1.rel: export, r0.namespace: reverb, r1.arg2: their products, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => products; what products does the united states export? => $x: ($x, "is an example of", products) (the united states, export, $x) => $x: ($x, "is an example of", products) (the united states, export, $x) => (r0.arg1: products, r1.rel: exports, r0.namespace: reverb, r1.arg2: its products, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Headquartered in the United States) => products; what products does the united states export? => $x: ($x, "is an example of", products) (the united states, export, $x) => $x: ($x, "is an example of", products) (the united states, export, $x) => (r0.arg1: products, r1.rel: to export, r0.namespace: reverb, r1.arg2: products, r0.arg2: such a exception product, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The United States) => products
what products does the united states export?	services	0.5136252636252624	what products does the united states export? => $x: ($x, "is an example of", products) (the united states, export, $x) => $x: ($x, "is an example of", products) (the united states, export, $x) => (r0.arg1: services, r1.rel: exported, r0.namespace: reverb, r1.arg2: service, r0.arg2: intermediate product, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States? number-one) => services
what products does the united states export?	sector 1	0.49809311059310923	what products does the united states export? => $x: ($x, "is a", products) (the united states, export, $x) => $x: ($x, "is a", products) (the united states, export, $x) => (r0.arg1: Sector 1, r1.rel: export, r0.namespace: nell, r1.arg2: sector, r0.arg2: personal care product, r0.rel: is a, r1.namespace: reverb, r1.arg1: the united states) => Sector 1
what products does the united states export?	coffee	0.48450247668997515	what products does the united states export? => $x: ($x, "type", products) (the united states, export, $x) => $x: ($x, "type", products) (the united states, export, $x) => (r0.arg1: Coffee, r1.rel: exports, r0.namespace: freebase, r1.arg2: coffee, r0.arg2: Contact product, r0.rel: Type, r1.namespace: reverb, r1.arg1: the entire United States) => Coffee; what products does the united states export? => $x: ($x, "is a", products) (the united states, export, $x) => $x: ($x, "is a", products) (the united states, export, $x) => (r0.arg1: Coffee, r1.rel: exports, r0.namespace: nell, r1.arg2: coffee, r0.arg2: product, r0.rel: is a, r1.namespace: reverb, r1.arg1: the entire United States) => Coffee
what products does the united states export?	aircraft	0.35972598829741553	what products does the united states export? => $x: ($x, "type", products) (the united states, export, $x) => $x: ($x, "type", products) (the united states, export, $x) => (r0.arg1: Aircraft, r1.rel: export, r0.namespace: freebase, r1.arg2: aircraft, r0.arg2: Product category, r0.rel: Type, r1.namespace: reverb, r1.arg1: The United States) => Aircraft
what products does the united states export?	gasoline	0.1051805337519609	what products does the united states export? => $x: ($x, "type", products) (the united states, export, $x) => $x: ($x, "type", products) (the united states, export, $x) => (r0.arg1: Gasoline, r1.rel: exporting, r0.namespace: freebase, r1.arg2: gasoline, r0.arg2: Contact product, r0.rel: Type, r1.namespace: openie4, r1.arg1: the United States) => Gasoline
what region is turkey considered?	austria	0.4329489954489949	what region is turkey considered? => $x: ($x, "type", region) ($x, is, turkey considered) => $x: ($x, "type", region) ($x, is, turkey considered) => (r0.arg1: Austria, r1.rel: has been, r0.namespace: freebase, r1.arg2: reluctant considering Turkey?s interest, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Austria) => Austria; what region is turkey considered? => $x: ($x, "type", region) ($x, is, turkey considered) => $x: ($x, "type", region) ($x, is, turkey considered) => (r0.arg1: Austria, r1.rel: has been, r0.namespace: freebase, r1.arg2: reluctant considering Turkey?s interest, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Austria) => Austria
what region is turkey considered?	syria	0.423629703629703	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Syria, r1.rel: is considering sanctions on, r0.namespace: freebase, r1.arg2: Syria, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Syria; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Syria, r1.rel: is considering sanctions on, r0.namespace: freebase, r1.arg2: Syria, r0.arg2: Roman region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Syria; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Syria, r1.rel: is considering sanctions on, r0.namespace: freebase, r1.arg2: Syria, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Syria
what region is turkey considered?	europe	0.41741684241684185	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Europe, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: Europe, r0.arg2: Region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Europe; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Europe, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: Europe, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Europe; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Europe, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: Europe, r0.arg2: Mobile phone region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Europe; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Europe, r1.rel: is considered part of, r0.namespace: freebase, r1.arg2: Europe, r0.arg2: Video Game Region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Europe
what region is turkey considered?	cyprus	0.41741684241684185	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Cyprus, r1.rel: has always considered, r0.namespace: freebase, r1.arg2: Cyprus, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Cyprus; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Cyprus, r1.rel: has always considered, r0.namespace: freebase, r1.arg2: Cyprus, r0.arg2: Roman region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Cyprus; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Cyprus, r1.rel: has always considered, r0.namespace: freebase, r1.arg2: Cyprus, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Cyprus
what region is turkey considered?	northern cyprus	0.3996658103800952	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Northern Cyprus, r1.rel: would consider annexing, r0.namespace: freebase, r1.arg2: northern Cyprus, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Turkey) => Northern Cyprus; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Northern Cyprus, r1.rel: has always considered, r0.namespace: freebase, r1.arg2: Northern Cyprus, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Northern Cyprus
what region is turkey considered?	cuba	0.3996658103800952	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Cuba, r1.rel: considers, r0.namespace: freebase, r1.arg2: Cuba, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Cuba; what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Cuba, r1.rel: considers, r0.namespace: freebase, r1.arg2: Cuba, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Cuba
what region is turkey considered?	six mile	0.3863525363525353	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Six Mile, r1.rel: considers only, r0.namespace: freebase, r1.arg2: six miles, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Six Mile
what region is turkey considered?	turk	0.3863525363525353	what region is turkey considered? => $x: ($x, "type", region) (turkey, considered, $x) => $x: ($x, "type", region) (turkey, considered, $x) => (r0.arg1: Turk, r1.rel: were considered, r0.namespace: freebase, r1.arg2: Turks, r0.arg2: Statistical region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Turkey) => Turk
what shows are shot in new york?	video	1.7019522144522132	what shows are shot in new york? => $x: ($x, "type", shows) ($x, are shot in, new york) => $x: ($x, "type", shows) ($x, are shot in, new york) => (r0.arg1: the video, r1.rel: was shot in, r0.namespace: openie4, r1.arg2: New York, r0.arg2: the security word shown in the picture, r0.rel: type, r1.namespace: openie4, r1.arg1: The video) => the video; what shows are shot in new york? => $x: ($x, "type", shows) ($x, are shot in, new york) => $x: ($x, "type", shows) ($x, are shot in, new york) => (r0.arg1: the video, r1.rel: was shot in, r0.namespace: openie4, r1.arg2: New York, r0.arg2: the security word shown in the picture, r0.rel: type, r1.namespace: reverb, r1.arg1: The video) => the video
what shows are shot in new york?	name	0.8775471056721046	what shows are shot in new york? => $x: ($x, "type", shows) ($x, are shot in, new york) => $x: ($x, "type", shows) ($x, are shot in, new york) => (r0.arg1: Name, r1.rel: will be shot in, r0.namespace: openie4, r1.arg2: New York, r0.arg2: the security word shown in the picture, r0.rel: type, r1.namespace: reverb, r1.arg1: Names) => Name
what shows are shot in new york?	movie	0.49809311059310923	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the movie, r1.rel: has been shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: The movie) => the movie; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the movie, r1.rel: will be shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: The movie) => the movie; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the movie, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: openie4, r1.arg1: the movie) => the movie; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the movie, r1.rel: were infrequently shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: Movies) => the movie; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the movie, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: Movie) => the movie
what shows are shot in new york?	guy	0.49809311059310923	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the guy, r1.rel: have been shooting in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: guys) => the guy
what shows are shot in new york?	7pm project	0.49809311059310923	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: The 7PM Project, r1.rel: would be shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: the project) => The 7PM Project
what shows are shot in new york?	show	0.49809311059310923	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: The TO Show, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: openie4, r1.arg1: the show) => The TO Show; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: The TO Show, r1.rel: will be shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: openie4, r1.arg1: The show) => The TO Show; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: The TO Show, r1.rel: will be shooting in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: This show) => The TO Show
what shows are shot in new york?	pilots	0.48450247668997515	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the pilots, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: A pilot) => the pilots; what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: the pilots, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: openie4, r1.arg1: the pilot) => the pilots
what shows are shot in new york?	movie 4	0.48450247668997515	what shows are shot in new york? => $x: ($x, "is a", shows) ($x, are shot in, new york) => $x: ($x, "is a", shows) ($x, are shot in, new york) => (r0.arg1: Movie 4, r1.rel: was shot in, r0.namespace: nell, r1.arg2: New York, r0.arg2: TV show, r0.rel: is a, r1.namespace: reverb, r1.arg1: Movie) => Movie 4
what sports are popular in germany?	basketball	1.6790775890775875	what sports are popular in germany? => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => (r0.arg1: basketball, r1.rel: was just becoming popular in, r0.namespace: reverb, r1.arg2: Germany, r0.arg2: sport, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: basketball) => basketball; what sports are popular in germany? => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => (r0.arg1: basketball, r1.rel: was just becoming popular in, r0.namespace: openie4, r1.arg2: Germany, r0.arg2: sport, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: basketball) => basketball
what sports are popular in germany?	boxing	1.6666518666518653	what sports are popular in germany? => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => (r0.arg1: Boxing, r1.rel: is very popular in, r0.namespace: openie4, r1.arg2: Germany, r0.arg2: sport, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: 's boxing) => Boxing
what sports are popular in germany?	football	0.8472594072594057	what sports are popular in germany? => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => (r0.arg1: Football, r1.rel: is the most popular sport in, r0.namespace: openie4, r1.arg2: Germany, r0.arg2: sport, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Football) => Football; what sports are popular in germany? => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => $x: ($x, "is a kind of", sports) ($x, are popular in, germany) => (r0.arg1: Football, r1.rel: is the most popular sport in, r0.namespace: openie4, r1.arg2: Germany, r0.arg2: sport, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Football) => Football
what sports are popular in germany?	dirk nowitzki	0.3863525363525353	what sports are popular in germany? => $x: ($x, "type", sports) ($x, are popular in, germany) => $x: ($x, "type", sports) ($x, are popular in, germany) => (r0.arg1: Dirk Nowitzki, r1.rel: is popular in, r0.namespace: freebase, r1.arg2: Germany, r0.arg2: Sport Club Player, r0.rel: Type, r1.namespace: reverb, r1.arg1: Dirk Nowitzki) => Dirk Nowitzki; what sports are popular in germany? => $x: ($x, "type", sports) ($x, are popular in, germany) => $x: ($x, "type", sports) ($x, are popular in, germany) => (r0.arg1: Dirk Nowitzki, r1.rel: is popular in, r0.namespace: freebase, r1.arg2: Germany, r0.arg2: Sports League Award Winner, r0.rel: Type, r1.namespace: reverb, r1.arg1: Dirk Nowitzki) => Dirk Nowitzki
what team did jackie robinson?	del robinson	0.4096507659007651	what team did jackie robinson? => $x: ($x, "type", team) ($x, did, jackie robinson) => $x: ($x, "type", team) ($x, did, jackie robinson) => (r0.arg1: Del Robinson, r1.rel: did n?t have, r0.namespace: freebase, r1.arg2: a Jackie Robinson, r0.arg2: Football team manager, r0.rel: Type, r1.namespace: reverb, r1.arg1: Robinson) => Del Robinson
what team did jeremy lin go to?	harvard_university	0.5178613053613043	what team did jeremy lin go to? => $x: ($x, "is a", team) (jeremy lin, go to, $x) => $x: ($x, "is a", team) (jeremy lin, go to, $x) => (r0.arg1: harvard_university, r1.rel: went to, r0.namespace: nell, r1.arg2: Harvard University, r0.arg2: sports team, r0.rel: is a, r1.namespace: reverb, r1.arg1: The Real Underdogs Jeremy Lin) => harvard_university
what team did monta ellis get traded to?	milwaukee	0.37082038332038203	what team did monta ellis get traded to? => $x: ($x, "type", team) (monta ellis, get traded to, $x) => $x: ($x, "type", team) (monta ellis, get traded to, $x) => (r0.arg1: Milwaukee, r1.rel: got traded to, r0.namespace: freebase, r1.arg2: Milwaukee, r0.arg2: Sports Team Location, r0.rel: Type, r1.namespace: reverb, r1.arg1: Monta Ellis) => Milwaukee
what team does heskey play for?	brazil	0.4869987155701426	what team does heskey play for? => $x: ($x, "type", team) (heskey, play for, $x) => $x: ($x, "type", team) (heskey, play for, $x) => (r0.arg1: Brazil, r1.rel: play for, r0.namespace: freebase, r1.arg2: Brazil, r0.arg2: Sports Team Location, r0.rel: Type, r1.namespace: reverb, r1.arg1: Heskey) => Brazil; what team does heskey play for? => $x: ($x, "is a", team) (heskey, play for, $x) => $x: ($x, "is a", team) (heskey, play for, $x) => (r0.arg1: brazil, r1.rel: play for, r0.namespace: nell, r1.arg2: Brazil, r0.arg2: sports team, r0.rel: is a, r1.namespace: reverb, r1.arg1: Heskey) => brazil
what team does heskey play for?	england	0.12515044479330073	what team does heskey play for? => $x: ($x, "type", team) (heskey, play for, $x) => $x: ($x, "type", team) (heskey, play for, $x) => (r0.arg1: England, r1.rel: plays for, r0.namespace: freebase, r1.arg2: England, r0.arg2: Sports Team Location, r0.rel: Type, r1.namespace: openie4, r1.arg1: Heskey) => England
what team does josh hamilton play for?	texas rangers	-0.1087250712250726	what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Baseball Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas Rangers; what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas Rangers; what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Sports team extra, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas Rangers; what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Professional Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas Rangers; what team does josh hamilton play for? => $x: ($x, "is a", team) (josh hamilton, play for, $x) => $x: ($x, "is a", team) (josh hamilton, play for, $x) => (r0.arg1: Texas Rangers, r1.rel: plays for the team, r0.namespace: nell, r1.arg2: Texas Rangers, r0.arg2: sports team, r0.rel: is a, r1.namespace: nell, r1.arg1: josh hamilton) => Texas Rangers
what team does josh hamilton play for?	texas city rangers	-0.22046564546564662	what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas City Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas City Rangers; what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas City Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Basketball Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas City Rangers; what team does josh hamilton play for? => $x: ($x, "type", team) (josh hamilton, play for, $x) => $x: ($x, "type", team) (josh hamilton, play for, $x) => (r0.arg1: Texas City Rangers, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: Texas Rangers, r0.arg2: Professional Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: josh hamilton) => Texas City Rangers
what team does mike fisher play for?	ottawa senators	-0.1087250712250726	what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Senators; what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Ice hockey team, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Senators; what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Sports team extra, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Senators; what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Professional Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Senators; what team does mike fisher play for? => $x: ($x, "is a", team) (mike fisher, play for, $x) => $x: ($x, "is a", team) (mike fisher, play for, $x) => (r0.arg1: ottawa senators, r1.rel: plays for the team, r0.namespace: nell, r1.arg2: ottawa senators, r0.arg2: sports team, r0.rel: is a, r1.namespace: nell, r1.arg1: mike fisher) => ottawa senators
what team does mike fisher play for?	ottawa jr. senators	-0.22046564546564662	what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Jr. Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Sports Team, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Jr. Senators; what team does mike fisher play for? => $x: ($x, "type", team) (mike fisher, play for, $x) => $x: ($x, "type", team) (mike fisher, play for, $x) => (r0.arg1: Ottawa Jr. Senators, r1.rel: plays for the team, r0.namespace: freebase, r1.arg2: ottawa senators, r0.arg2: Ice hockey team, r0.rel: Type, r1.namespace: nell, r1.arg1: mike fisher) => Ottawa Jr. Senators
what teams has manny ramirez played for?	cleveland	0.3747034215784204	what teams has manny ramirez played for? => $x: ($x, "type", teams) (manny ramirez, played for, $x) => $x: ($x, "type", teams) (manny ramirez, played for, $x) => (r0.arg1: Cleveland, r1.rel: played for, r0.namespace: freebase, r1.arg2: Cleveland, r0.arg2: Sports Team Location, r0.rel: Type, r1.namespace: reverb, r1.arg1: Manny Ramirez) => Cleveland
what teams has manny ramirez played for?	afc cleveland	0.35972598829741553	what teams has manny ramirez played for? => $x: ($x, "type", teams) (manny ramirez, played for, $x) => $x: ($x, "type", teams) (manny ramirez, played for, $x) => (r0.arg1: AFC Cleveland, r1.rel: played for, r0.namespace: freebase, r1.arg2: Cleveland, r0.arg2: Sports Team, r0.rel: Type, r1.namespace: reverb, r1.arg1: Manny Ramirez) => AFC Cleveland; what teams has manny ramirez played for? => $x: ($x, "type", teams) (manny ramirez, played for, $x) => $x: ($x, "type", teams) (manny ramirez, played for, $x) => (r0.arg1: AFC Cleveland, r1.rel: played for, r0.namespace: freebase, r1.arg2: Cleveland, r0.arg2: Football team, r0.rel: Type, r1.namespace: reverb, r1.arg1: Manny Ramirez) => AFC Cleveland
what things did martin luther king do?	embassy	0.3863525363525353	what things did martin luther king do? => $x: ($x, "type", things) (martin luther king, do, $x) => $x: ($x, "type", things) (martin luther king, do, $x) => (r0.arg1: Embassy, r1.rel: do, r0.namespace: freebase, r1.arg2: Embassy, r0.arg2: Thing, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jr. de Martin Luther King) => Embassy; what things did martin luther king do? => $x: ($x, "type", things) (martin luther king, do, $x) => $x: ($x, "type", things) (martin luther king, do, $x) => (r0.arg1: Embassy, r1.rel: do, r0.namespace: freebase, r1.arg2: Embassy, r0.arg2: Man-made Thing, r0.rel: Type, r1.namespace: reverb, r1.arg1: Jr. de Martin Luther King) => Embassy
what type of books did agatha christie wrote?	books	0.8348336848336833	what type of books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: her book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Agatha Christie) => books; what type of books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: wrote, r0.namespace: reverb, r1.arg2: a book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Agatha Christie) => books; what type of books did agatha christie wrote? => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => $x: ($x, "is an example of", books) (agatha christie, wrote, $x) => (r0.arg1: books, r1.rel: was superb at writing, r0.namespace: reverb, r1.arg2: this book, r0.arg2: excellent books, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Agatha Christie) => books
what type of books did agatha christie wrote?	endless night	0.3630543068043055	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless Night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless Night; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless Night, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless Night
what type of books did agatha christie wrote?	endless night.	0.3630543068043055	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Endless night., r1.rel: wrote, r0.namespace: freebase, r1.arg2: Endless Night, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Endless night.
what type of books did agatha christie wrote?	death	0.3397560772560757	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Death
what type of books did agatha christie wrote?	death!	0.3397560772560757	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death!, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death!; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death!, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Death!
what type of books did agatha christie wrote?	deaths	0.3397560772560757	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Deaths, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Deaths; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Deaths, r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death, r0.arg2: Book, r0.rel: Type, r1.namespace: reverb, r1.arg1: Agatha Christie) => Deaths
what type of books did agatha christie wrote?	death nile.	0.10850885225885087	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Death on the Nile., r1.rel: wrote, r0.namespace: freebase, r1.arg2: Death on the Nile, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Death on the Nile.
what type of books did agatha christie wrote?	murder mysteries	0.10850885225885087	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mysteries; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mysteries
what type of books did agatha christie wrote?	murder mystery series	0.10850885225885087	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mystery Series, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mystery Series; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Mystery Series, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Mystery Series
what type of books did agatha christie wrote?	murder picnic mysteries	0.10850885225885087	what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Picnic Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Picnic Mysteries; what type of books did agatha christie wrote? => $x: ($x, "type", books) (agatha christie, wrote, $x) => $x: ($x, "type", books) (agatha christie, wrote, $x) => (r0.arg1: Murder Picnic Mysteries, r1.rel: wrote, r0.namespace: freebase, r1.arg2: murder mysteries, r0.arg2: Book Edition, r0.rel: Type, r1.namespace: openie4, r1.arg1: Agatha Christie) => Murder Picnic Mysteries
what type of democracy is the united states?	israel	1.7048848587310115	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States colony, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: were, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was being pushed by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is being ambiguous with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is being fought in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is blackmailing, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is pressing, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was telling, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is pressuring, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is blackmailing, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is *not*, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is like, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is using, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is pushing, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was pushing, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: now is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is pressuring, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was telling, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is urging, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is only, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: has been, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is unconditionally, r0.namespace: reverb, r1.arg2: the United States Allie, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: faces is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is whether, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is urging, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: are in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is there is a huge advantage to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is one of, r0.namespace: reverb, r1.arg2: the United State, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a democracy like, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is the capital of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a democracy like, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is good for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is working with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: may be saying to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is issuing instructions to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is one of, r0.namespace: reverb, r1.arg2: the United State, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is normal for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was an allied to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: would be attributed to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is the President of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was opposed to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was published in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: are all burdens on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a drag on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is an ally of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a drag on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is an ally of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was recognized by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is protected by, r0.namespace: reverb, r1.arg2: the United State, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is currently lobbying, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was witnessed by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is currently in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a colony of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is actually directed at, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: had been pressured by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a friend of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is utterly dependent on, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is contempt for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: had been deceiving, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was widely perceived in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is prohibited by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is dependent upon, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: was grouped with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is a bane to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: is outsourcing to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: must be supported by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: must be coordinated with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Israel, r1.rel: there is in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy and innovation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Israel) => Israel
what type of democracy is the united states?	germany	1.6977161727161714	what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is being pressured by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: are in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was visiting, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were worrying, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was an ally of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: will be followed by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: had been in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was one of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was one of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is a model for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: will be based in, r0.namespace: reverb, r1.arg2: the United States instead, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was granted asylum in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was unknown in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is a friend of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was occupied by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were planning war against, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was sent to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was pressured by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is mostly like, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were imported to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was marketed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: had been banned in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was brought to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were sold in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is sold to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is slightly ahead of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is available in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was extradited to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is doing better than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is a friend of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: might be repeated in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is different from, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: are shorter than in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is second only to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were used by, r0.namespace: reverb, r1.arg2: the United States Navy, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: may be taxed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was carried to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were first brought to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: be free in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was introduced into, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: has been exported to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: would be returned to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were brought to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: cannot be transferred to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: are still available in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: there is in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is propped up by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: will be brought to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is a colony of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is due to return to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is 30 years ahead of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: be the poorest states in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is growing much faster than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was granted political asylum in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: are much lower than in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: are usually much higher than in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is a major trading partner of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: also has been more active than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: will be the first country outside of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: has been far more willing than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: were three times higher than in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: have been our key allies in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was still a long way off for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is the most air-tight building in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is 1.5 times more mobile than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: is happening in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was at, r0.namespace: reverb, r1.arg2: war with the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was at, r0.namespace: reverb, r1.arg2: war with the United States, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: has been one of, r0.namespace: reverb, r1.arg2: the United States? closest allies, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: Germany, r1.rel: was a sworn enemy of, r0.namespace: reverb, r1.arg2: the United States and much, r0.arg2: ennobled democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Germany) => Germany
what type of democracy is the united states?	photography	1.6790775890775875	what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: was introduced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: photography) => photography; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: was introduced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: photography) => photography; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: was introduced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: photography-) => photography; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: has been exhibited throughout, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: photography) => photography; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: is quickly gaining notoriety in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: photography) => photography; what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: photography, r1.rel: has been exhibited throughout, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: 's photography) => photography
what type of democracy is the united states?	ghana	1.3728531272648912	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Ghana, r1.rel: was further influenced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: good governance and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ghana) => Ghana; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Ghana, r1.rel: will be starting his career in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: good governance and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ghana) => Ghana; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Ghana, r1.rel: is a much more religious society than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: good governance and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Ghana) => Ghana
what type of democracy is the united states?	lebanon	1.3640820290820281	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: is regarded by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: were provided by, r0.namespace: reverb, r1.arg2: the United States ,which, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: were trained in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: is bad for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: will be a victory for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Lebanon, r1.rel: is considered a terrorist group by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: pluralism and democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Lebanon) => Lebanon
what type of democracy is the united states?	athens	1.3526121314582842	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Athens, r1.rel: is rather new to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a direct democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Athens) => Athens; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: Athens, r1.rel: was selected as, r0.namespace: reverb, r1.arg2: the United States flag, r0.arg2: a direct democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Athens) => Athens
what type of democracy is the united states?	india	1.3369713619713606	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: were, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: was, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: is being transferred to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: are being imported to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: were visiting, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: is challenging, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: are from, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: was in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: India, r1.rel: is only, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: successfull democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: India) => India
what type of democracy is the united states?	america	0.8730666769128297	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: openie4, r1.arg2: the United States Constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was, r0.namespace: reverb, r1.arg2: the United States government, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was, r0.namespace: openie4, r1.arg2: the United States government, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Army, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is, r0.namespace: openie4, r1.arg2: the United States Army, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: so is, r0.namespace: reverb, r1.arg2: the United States Census, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: so is, r0.namespace: openie4, r1.arg2: the United States Census, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is just, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is just, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is already, r0.namespace: reverb, r1.arg2: the United Socialist States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is already, r0.namespace: openie4, r1.arg2: the United Socialist States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is now, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is now, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is driving, r0.namespace: reverb, r1.arg2: the United States right, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is driving, r0.namespace: openie4, r1.arg2: the United States right, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: ended being, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: ended being, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: should be, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: should be, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is eligible to be President of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is eligible to be President of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is actually grown in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is actually grown in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were originally minted by, r0.namespace: reverb, r1.arg2: the United States Mint, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were originally minted by, r0.namespace: openie4, r1.arg2: the United States Mint, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were citizens of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were citizens of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are sold in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are sold in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was launched in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was launched in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was born with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was born with, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were born outside, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were born outside, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: probably will be, r0.namespace: reverb, r1.arg2: the United Northern States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: probably will be, r0.namespace: openie4, r1.arg2: the United Northern States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are used in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is one of, r0.namespace: reverb, r1.arg2: the powerful united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is one of, r0.namespace: openie4, r1.arg2: the powerful united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is sponsored by, r0.namespace: reverb, r1.arg2: the United States Department, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is sponsored by, r0.namespace: openie4, r1.arg2: the United States Department, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are employees of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are employees of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are officially recognised by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are officially recognised by, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was first formed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was first formed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: have been strangers in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: have been strangers in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were built in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were built in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: would always be with, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: would always be with, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the ratification of, r0.namespace: reverb, r1.arg2: the United States Constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the ratification of, r0.namespace: openie4, r1.arg2: the United States Constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: may be immigrating to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: may be immigrating to, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also called, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also called, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was exceptional long before, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was exceptional long before, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were the President of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were the President of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the birthplace of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the birthplace of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: can be found at, r0.namespace: reverb, r1.arg2: the United States Department, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: can be found at, r0.namespace: openie4, r1.arg2: the United States Department, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were born in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were born in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are less loyal to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are less loyal to, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was established in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was established in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are ?effectively destroying, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are ?effectively destroying, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was chartered by, r0.namespace: reverb, r1.arg2: the United States Congress, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was chartered by, r0.namespace: openie4, r1.arg2: the United States Congress, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a threat to, r0.namespace: reverb, r1.arg2: the United States constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a threat to, r0.namespace: openie4, r1.arg2: the United States constitution, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: turned out to be, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: turned out to be, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were incorporated in, r0.namespace: reverb, r1.arg2: the United States Inc., r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were incorporated in, r0.namespace: openie4, r1.arg2: the United States Inc., r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: will be known as, r0.namespace: reverb, r1.arg2: the United Muslim States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: will be known as, r0.namespace: openie4, r1.arg2: the United Muslim States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was first used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was first used in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was formed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was formed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were originally brought to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were originally brought to, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is paid for by, r0.namespace: reverb, r1.arg2: the United States government, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is paid for by, r0.namespace: openie4, r1.arg2: the United States government, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was manifest in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was manifest in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: should be renamed, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: should be renamed, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were the President of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: were the President of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are sold in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America ?) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are sold in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America ?) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is funded by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is funded by, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: has always been, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: has always been, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest mall in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest mall in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first Bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first Bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: be entitled to work in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: be entitled to work in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first lady of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first lady of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first Bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the first Bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest homebuilder in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest homebuilder in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: be eligible to work in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: be eligible to work in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was exhibited throughout, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was exhibited throughout, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also known as, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is also known as, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are "effectively destroying, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are "effectively destroying, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the constitution of, r0.namespace: reverb, r1.arg2: the incorporated UNITED STATES, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: AMERICA) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the constitution of, r0.namespace: openie4, r1.arg2: the incorporated UNITED STATES, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: AMERICA) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are former residents of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are former residents of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is much more than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is much more than, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was organized in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was organized in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was like in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was like in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was signed for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was signed for, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the beginning of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the beginning of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are wholly Catholic except, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: are wholly Catholic except, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is much larger than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is much larger than, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: will be known as, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: will be known as, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the accepted term for, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the accepted term for, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest mall in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest mall in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the current President of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the current President of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the supreme law of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the supreme law of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is primarily used to refer to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is primarily used to refer to, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the th largest company in, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the th largest company in, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the largest shopping mall in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: was the largest shopping mall in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: could be done competitively in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: could be done competitively in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the worst part of, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the worst part of, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a government foreign to, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a government foreign to, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the supreme law of, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the supreme law of, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is now the largest bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is now the largest bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest commercial bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest commercial bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: can actually be a history of, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: can actually be a history of, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest commercial bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest commercial bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the th largest company in, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the th largest company in, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a different legal entity than, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: AMERICA) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is a different legal entity than, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: AMERICA) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: reverb, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: openie4, r1.arg2: the united states, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: america) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest bank in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest homebuilder in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the largest homebuilder in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the fifth-largest company in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: America, r1.rel: is the fifth-largest company in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: America) => America
what type of democracy is the united states?	united states	0.5322638472638463	what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Constitution, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Patent, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States government, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Capitol, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States dollar, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is outside, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States and) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is actually, r0.namespace: reverb, r1.arg2: the United States Corporation, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is called, r0.namespace: reverb, r1.arg2: the United States Conference, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are in, r0.namespace: reverb, r1.arg2: the United States Code, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are outside, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States or) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was formed by, r0.namespace: reverb, r1.arg2: the United States government, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was flown over, r0.namespace: reverb, r1.arg2: the United States Capitol, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is an employee of, r0.namespace: reverb, r1.arg2: the United States Congress, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is a provision of, r0.namespace: reverb, r1.arg2: the United States Code, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is a citizen of, r0.namespace: reverb, r1.arg2: the United States regardless, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was a sergeant in, r0.namespace: reverb, r1.arg2: the United States Army, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are subject to, r0.namespace: reverb, r1.arg2: the United States laws, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: had been in, r0.namespace: reverb, r1.arg2: the United States less, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are citizens of, r0.namespace: reverb, r1.arg2: the United States...., r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is now serving in, r0.namespace: reverb, r1.arg2: the United States Navy, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are registered with, r0.namespace: reverb, r1.arg2: the United States Patent, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: shall be elected to, r0.namespace: reverb, r1.arg2: the United States Senate, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is sponsored by, r0.namespace: reverb, r1.arg2: the United States Government, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are contained in, r0.namespace: reverb, r1.arg2: the United States Code, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is financed by, r0.namespace: reverb, r1.arg2: the United States government, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was killed in, r0.namespace: reverb, r1.arg2: the United States Senate, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are studying in, r0.namespace: reverb, r1.arg2: the United States today, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: were born outside, r0.namespace: reverb, r1.arg2: the United States 13, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are seeking entry into, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States or) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was calculated by, r0.namespace: reverb, r1.arg2: the United States Congress, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Parachute Association, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is, r0.namespace: reverb, r1.arg2: the United States Golf Association, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: are on, r0.namespace: reverb, r1.arg2: the United States Treasury Department, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: was before, r0.namespace: reverb, r1.arg2: the United States Supreme Court, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is President of, r0.namespace: reverb, r1.arg2: the United State 24 hours, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is president of, r0.namespace: reverb, r1.arg2: the United State 24 hours, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is happening in, r0.namespace: reverb, r1.arg2: Iran?the United States, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States; what type of democracy is the united states? => $x: ($x, "is an example of", democracy) ($x, is, the united states) => $x: ($x, "is an example of", democracy) ($x, is, the united states) => (r0.arg1: the United States, r1.rel: is found in, r0.namespace: reverb, r1.arg2: the United States Code Title 11, r0.arg2: a representative democracy, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the United States) => the United States
what type of democracy is the united states?	republic	0.5051531801531789	what type of democracy is the united states? => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => $x: ($x, "is a kind of", democracy) ($x, is, the united states) => (r0.arg1: a republic, r1.rel: was later annexed by, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: democracy, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a republic) => a republic
what type of government did mexico have?	law	1.7019522144522132	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: the law, r1.rel: has harshly criticized, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => the law; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: the law, r1.rel: had met the requirements in, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => the law; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: the law, r1.rel: has been caught taking, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Mexico) => the law; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: The law, r1.rel: has harshly criticized, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => The law; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: The law, r1.rel: had met the requirements in, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => The law; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: The law, r1.rel: has been caught taking, r0.namespace: reverb, r1.arg2: the law, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: New Mexico) => The law
what type of government did mexico have?	subsidy	1.6821840196840183	what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: A subsidy, r1.rel: has, r0.namespace: openie4, r1.arg2: a subsidy, r0.arg2: financial government assistance, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => A subsidy; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: a subsidy, r1.rel: has, r0.namespace: reverb, r1.arg2: a subsidy, r0.arg2: financial government assistance, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => a subsidy
what type of government did mexico have?	thousands	1.382720612720612	what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: Has, r0.namespace: reverb, r1.arg2: Thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has had tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: have killed, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has hundreds of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: have left tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has lost hundreds of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has been inhabited for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: have been using for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has evolved through, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has long been a low-cost alternative for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: " New Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has lived through, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Mexico) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has presided over, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: One New Mexico judge) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has brought out, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico oil spill) => thousands; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: thousands, r1.rel: has taken the lives of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the U.S.-Mexico border) => thousands
what type of government did mexico have?	public	1.368741674991674	what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: the public, r1.rel: have, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Mexico) => the public; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: the public, r1.rel: have led, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mexico?s drug war) => the public
what type of government did mexico have?	homeland security	1.3570925602175592	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: Homeland security, r1.rel: have to do with, r0.namespace: reverb, r1.arg2: homeland security, r0.arg2: huge government expenditure, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => Homeland security
what type of government did mexico have?	church	1.3496794871794862	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: The Church, r1.rel: should have been paying, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => The Church; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: The Church, r1.rel: has also been installed in, r0.namespace: reverb, r1.arg2: the church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => The Church
what type of government did mexico have?	1993	0.8938558663558656	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have increased dramatically since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have competed since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Mexico) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have more than doubled since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have both more than doubled since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have more than doubled since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Canada and Mexico) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: have been lost since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico 1.3 million farm jobs) => 1993; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: 1993, r1.rel: has doubled since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: The dead zone in the Gulf of Mexico) => 1993
what type of government did mexico have?	move	0.8612383449883437	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: the move, r1.rel: have already made, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => the move
what type of government did mexico have?	education	0.5369234931734923	what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: education, r1.rel: has made an increased investment in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => education; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: education, r1.rel: still have above-average levels of, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico) => education; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: education, r1.rel: has made impressive improvements in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Education Mexico) => education; what type of government did mexico have? => $x: ($x, "is an example of", government) (mexico, have, $x) => $x: ($x, "is an example of", government) (mexico, have, $x) => (r0.arg1: education, r1.rel: had access to, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Mexico many Guatemalan refugees) => education
what type of government did mexico have?	grant	0.5178613053613043	what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: grant, r1.rel: has applied for, r0.namespace: reverb, r1.arg2: a grant, r0.arg2: government funding, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: New Mexico) => grant; what type of government did mexico have? => $x: ($x, "is a kind of", government) (mexico, have, $x) => $x: ($x, "is a kind of", government) (mexico, have, $x) => (r0.arg1: grant, r1.rel: has been awarded, r0.namespace: reverb, r1.arg2: this grant, r0.arg2: government funding, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: glad New Mexico) => grant
what type of government did soviet union have?	thousands	1.3587567194710042	what type of government did soviet union have? => $x: ($x, "is a kind of", government) (soviet union, have, $x) => $x: ($x, "is a kind of", government) (soviet union, have, $x) => (r0.arg1: thousands, r1.rel: had left tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Soviet Union) => thousands; what type of government did soviet union have? => $x: ($x, "is a kind of", government) (soviet union, have, $x) => $x: ($x, "is a kind of", government) (soviet union, have, $x) => (r0.arg1: thousands, r1.rel: has tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Soviet Union) => thousands; what type of government did soviet union have? => $x: ($x, "is a kind of", government) (soviet union, have, $x) => $x: ($x, "is a kind of", government) (soviet union, have, $x) => (r0.arg1: thousands, r1.rel: had tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The old Soviet Union) => thousands
what type of government did soviet union have?	nazi germany	1.3526121314582842	what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had replaced, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had conquered, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had cooperated with, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had been allied against, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had participated with, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had just defeated, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had been invaded by, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Soviet Union) => Nazi Germany; what type of government did soviet union have? => $x: ($x, "is an example of", government) (soviet union, have, $x) => $x: ($x, "is an example of", government) (soviet union, have, $x) => (r0.arg1: Nazi Germany, r1.rel: had the intention of invading, r0.namespace: reverb, r1.arg2: Nazi Germany, r0.arg2: a fascist government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the Soviet Union) => Nazi Germany
what type of government did soviet union have?	law division	0.5229445554445544	what type of government did soviet union have? => $x: ($x, "is a", government) (soviet union, have, $x) => $x: ($x, "is a", government) (soviet union, have, $x) => (r0.arg1: Law Division, r1.rel: has caused, r0.namespace: nell, r1.arg2: division, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: Soviet Union) => Law Division
what type of government did soviet union have?	tax division	0.5229445554445544	what type of government did soviet union have? => $x: ($x, "is a", government) (soviet union, have, $x) => $x: ($x, "is a", government) (soviet union, have, $x) => (r0.arg1: Tax Division, r1.rel: has caused, r0.namespace: nell, r1.arg2: division, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: Soviet Union) => Tax Division
what type of government does australia have?	social security	1.7093652874902863	what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: Social Security, r1.rel: has big plans for, r0.namespace: openie4, r1.arg2: Social Security, r0.arg2: government monetary support, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => Social Security
what type of government does australia have?	law	1.6930565268065254	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the law, r1.rel: had tested, r0.namespace: openie4, r1.arg2: the laws, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => the law; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the law, r1.rel: has practiced in, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Sydney Australia) => the law; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the law, r1.rel: have laid down, r0.namespace: openie4, r1.arg2: the law, r0.arg2: government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Cricket Australia) => the law; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: The law, r1.rel: had tested, r0.namespace: reverb, r1.arg2: the laws, r0.arg2: Big Government Conservatism, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => The law
what type of government does australia have?	medicare	1.6821840196840183	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: Medicare, r1.rel: has, r0.namespace: reverb, r1.arg2: Medicare, r0.arg2: government health care, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australia) => Medicare
what type of government does australia have?	thousands	1.382720612720612	what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has lost, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: have invested, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has facilitated, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has dedicated, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: have played for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: have used hypnosis for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: have TENS OF, r0.namespace: reverb, r1.arg2: THOUSANDS, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has provided refuge for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: had tens of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has been isolated for, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has hundreds of, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has assisted police in, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has successfully worked in helping, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has proposed a ban on, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: had less than, r0.namespace: reverb, r1.arg2: a thousand miles, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has trapped, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia 2012) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has taken their music to, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Western Australia) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: has been shaped by, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia?s environment) => thousands; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: thousands, r1.rel: have resulted in, r0.namespace: reverb, r1.arg2: thousands, r0.arg2: government sponsored assistance package, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: ?Australia?s anti-trafficking laws) => thousands
what type of government does australia have?	public	1.378726630512344	what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: the public, r1.rel: has made, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => the public; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: the public, r1.rel: has to sell, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia) => the public; what type of government does australia have? => $x: ($x, "is a kind of", government) (australia, have, $x) => $x: ($x, "is a kind of", government) (australia, have, $x) => (r0.arg1: the public, r1.rel: has n?t, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Australia?s wealth and sovereign rights) => the public
what type of government does australia have?	draft	1.3547627372627362	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: The draft, r1.rel: had, r0.namespace: reverb, r1.arg2: the draft, r0.arg2: the government?s violation, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => The draft
what type of government does australia have?	church	1.3407837995337983	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: The Church, r1.rel: have joined, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => The Church; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: The Church, r1.rel: has allowed, r0.namespace: reverb, r1.arg2: the churches, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => The Church; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: The Church, r1.rel: has grown out of, r0.namespace: reverb, r1.arg2: the Church, r0.arg2: an abusive government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => The Church
what type of government does australia have?	move	0.8775471056721046	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the move, r1.rel: have welcomed, r0.namespace: openie4, r1.arg2: the moves, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => the move; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the move, r1.rel: has been on, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => the move; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: the move, r1.rel: has always been a country on, r0.namespace: openie4, r1.arg2: the move, r0.arg2: the government, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => the move
what type of government does australia have?	1993	0.8701340326340314	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: 1993, r1.rel: has been running since, r0.namespace: reverb, r1.arg2: 1993, r0.arg2: government acting, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Australia Network) => 1993
what type of government does australia have?	education	0.5369234931734923	what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: have expressed concerns about, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: has a right to, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: have made significant advances in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: had invested much more in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: has become a major exporter of, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education; what type of government does australia have? => $x: ($x, "is an example of", government) (australia, have, $x) => $x: ($x, "is an example of", government) (australia, have, $x) => (r0.arg1: education, r1.rel: has a world-class track record in, r0.namespace: reverb, r1.arg2: education, r0.arg2: wasteful government spending, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Australia) => education
what type of government does germany have now?	public	1.3454434454434443	what type of government does germany have now? => $x: ($x, "is a kind of", government) (germany, have now, $x) => $x: ($x, "is a kind of", government) (germany, have now, $x) => (r0.arg1: the public, r1.rel: has now diminished, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Deutschnet ? Germany) => the public
what type of government does germany have now?	d?sseldorf	0.40188468938468835	what type of government does germany have now? => $x: ($x, "type", government) (germany, have now, $x) => $x: ($x, "type", government) (germany, have now, $x) => (r0.arg1: D?sseldorf, r1.rel: now has headquarters in, r0.namespace: freebase, r1.arg2: D?sseldorf, r0.arg2: German government district, r0.rel: Type, r1.namespace: reverb, r1.arg1: Germany) => D?sseldorf
what type of government does iraq have now?	public	1.3454434454434443	what type of government does iraq have now? => $x: ($x, "is a kind of", government) (iraq, have now, $x) => $x: ($x, "is a kind of", government) (iraq, have now, $x) => (r0.arg1: the public, r1.rel: has now been effectively opened to, r0.namespace: reverb, r1.arg2: the public, r0.arg2: government responsibility, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Iraq) => the public
what type of government does iraq have now?	city council	0.5136252636252624	what type of government does iraq have now? => $x: ($x, "is a", government) (iraq, have now, $x) => $x: ($x, "is a", government) (iraq, have now, $x) => (r0.arg1: City Council, r1.rel: now have, r0.namespace: nell, r1.arg2: city councils, r0.arg2: part of the government, r0.rel: is a, r1.namespace: reverb, r1.arg1: Iraq) => City Council
what type of government does iraq have now?	democracy	0.40188468938468835	what type of government does iraq have now? => $x: ($x, "type", government) (iraq, have now, $x) => $x: ($x, "type", government) (iraq, have now, $x) => (r0.arg1: Democracy, r1.rel: now has, r0.namespace: freebase, r1.arg2: democracy, r0.arg2: Form of Government, r0.rel: Type, r1.namespace: reverb, r1.arg1: Iraq) => Democracy; what type of government does iraq have now? => $x: ($x, "type", government) (iraq, have now, $x) => $x: ($x, "type", government) (iraq, have now, $x) => (r0.arg1: Democracy, r1.rel: now has elements of, r0.namespace: freebase, r1.arg2: democracy, r0.arg2: Form of Government, r0.rel: Type, r1.namespace: reverb, r1.arg1: ( Iraq) => Democracy
what type of government does usa follow?	india	0.36771395271395146	what type of government does usa follow? => $x: ($x, "type", government) (usa, follow, $x) => $x: ($x, "type", government) (usa, follow, $x) => (r0.arg1: India, r1.rel: followed by, r0.namespace: freebase, r1.arg2: India, r0.arg2: Government, r0.rel: Type, r1.namespace: reverb, r1.arg1: USA) => India
what type of music did mozart composed?	genre	0.49809311059310923	what type of music did mozart composed? => $x: ($x, "is a kind of", music) (mozart, composed, $x) => $x: ($x, "is a kind of", music) (mozart, composed, $x) => (r0.arg1: genre, r1.rel: eventually composed in, r0.namespace: reverb, r1.arg2: every genre, r0.arg2: music, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Mozart) => genre
what type of political system is brazil?	studies	0.5178613053613043	what type of political system is brazil? => $x: ($x, "is an example of", political system) ($x, is, brazil) => $x: ($x, "is an example of", political system) ($x, is, brazil) => (r0.arg1: studies, r1.rel: are lived outside of, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: our political system operating, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: studies) => studies; what type of political system is brazil? => $x: ($x, "is an example of", political system) ($x, is, brazil) => $x: ($x, "is an example of", political system) ($x, is, brazil) => (r0.arg1: studies, r1.rel: was in, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: our political system operating, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: my studies) => studies; what type of political system is brazil? => $x: ($x, "is an example of", political system) ($x, is, brazil) => $x: ($x, "is an example of", political system) ($x, is, brazil) => (r0.arg1: studies, r1.rel: were performed in, r0.namespace: reverb, r1.arg2: Brazil, r0.arg2: our political system operating, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The studies) => studies
what type of religion did massachusetts have?	science	1.7156378877532714	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: science, r1.rel: has content standards for, r0.namespace: openie4, r1.arg2: Science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: html Massachusetts) => science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: science, r1.rel: has retired of teaching, r0.namespace: openie4, r1.arg2: Science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Nancy Clark from Massachusetts) => science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: science, r1.rel: had a rich education in, r0.namespace: openie4, r1.arg2: science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Massachusetts native) => science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: has content standards for, r0.namespace: reverb, r1.arg2: Science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: html Massachusetts) => Science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: has content standards for, r0.namespace: openie4, r1.arg2: Science, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: html Massachusetts) => Science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: has retired of teaching, r0.namespace: reverb, r1.arg2: Science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Nancy Clark from Massachusetts) => Science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: has retired of teaching, r0.namespace: openie4, r1.arg2: Science, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Nancy Clark from Massachusetts) => Science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: had a rich education in, r0.namespace: reverb, r1.arg2: science, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Massachusetts native) => Science; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Science, r1.rel: had a rich education in, r0.namespace: openie4, r1.arg2: science, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Massachusetts native) => Science
what type of religion did massachusetts have?	islam	1.7093652874902863	what type of religion did massachusetts have? => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => (r0.arg1: Islam, r1.rel: has spoken about, r0.namespace: reverb, r1.arg2: Islam, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Massachusetts senator) => Islam; what type of religion did massachusetts have? => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => (r0.arg1: Islam, r1.rel: has spoken about, r0.namespace: openie4, r1.arg2: Islam, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The Massachusetts senator) => Islam
what type of religion did massachusetts have?	reality	1.3407837995337983	what type of religion did massachusetts have? => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => $x: ($x, "is an example of", religion) (massachusetts, have, $x) => (r0.arg1: Reality, r1.rel: have embraced, r0.namespace: reverb, r1.arg2: reality, r0.arg2: a human-based religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Massachusetts) => Reality
what type of religion did massachusetts have?	work	0.8838197059350896	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has been out of, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: have bills in, r0.namespace: openie4, r1.arg2: the works, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: had reduced the hours of, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has been deeply involved in, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has been out, r0.namespace: openie4, r1.arg2: of work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has led the way with, r0.namespace: openie4, r1.arg2: its work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has exhibited, r0.namespace: openie4, r1.arg2: his work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts College) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: have stopped looking for, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: more Massachusetts residents) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: has been hard at, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Massachusetts Democratic Party) => work; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: work, r1.rel: have given up looking for, r0.namespace: openie4, r1.arg2: work, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: more Massachusetts residents) => work
what type of religion did massachusetts have?	hope	0.8503658378658364	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: hope, r1.rel: had almost extinguished, r0.namespace: openie4, r1.arg2: their hopes, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => hope; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: hope, r1.rel: had almost extinguished, r0.namespace: reverb, r1.arg2: their hopes, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Massachusetts) => hope
what type of religion did massachusetts have?	nature	0.5178613053613043	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: nature, r1.rel: has turned to, r0.namespace: reverb, r1.arg2: nature, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the Massachusetts Institute) => nature
what type of religion did massachusetts have?	chance	0.5178613053613043	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Chance, r1.rel: has, r0.namespace: reverb, r1.arg2: a chance, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The Massachusetts Legislature) => Chance; what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: Chance, r1.rel: has enhanced, r0.namespace: reverb, r1.arg2: his chances, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the former Massachusetts governor) => Chance
what type of religion did massachusetts have?	fire	0.423629703629703	what type of religion did massachusetts have? => $x: ($x, "type", religion) (massachusetts, have, $x) => $x: ($x, "type", religion) (massachusetts, have, $x) => (r0.arg1: Fire, r1.rel: has come under, r0.namespace: freebase, r1.arg2: fire, r0.arg2: Religion, r0.rel: Type, r1.namespace: reverb, r1.arg1: The Massachusetts law) => Fire; what type of religion did massachusetts have? => $x: ($x, "type", religion) (massachusetts, have, $x) => $x: ($x, "type", religion) (massachusetts, have, $x) => (r0.arg1: Fire, r1.rel: has been under, r0.namespace: freebase, r1.arg2: fire, r0.arg2: Religion, r0.rel: Type, r1.namespace: reverb, r1.arg1: a Massachusetts Democrat) => Fire; what type of religion did massachusetts have? => $x: ($x, "type", religion) (massachusetts, have, $x) => $x: ($x, "type", religion) (massachusetts, have, $x) => (r0.arg1: Fire, r1.rel: has come under, r0.namespace: freebase, r1.arg2: fire, r0.arg2: Religion, r0.rel: Type, r1.namespace: reverb, r1.arg1: Massachusetts Governor Mitt Romney) => Fire; what type of religion did massachusetts have? => $x: ($x, "type", religion) (massachusetts, have, $x) => $x: ($x, "type", religion) (massachusetts, have, $x) => (r0.arg1: Fire, r1.rel: has come under, r0.namespace: freebase, r1.arg2: fire, r0.arg2: Religion, r0.rel: Type, r1.namespace: reverb, r1.arg1: former Massachusetts governor Mitt Romney) => Fire; what type of religion did massachusetts have? => $x: ($x, "type", religion) (massachusetts, have, $x) => $x: ($x, "type", religion) (massachusetts, have, $x) => (r0.arg1: Fire, r1.rel: has come under, r0.namespace: freebase, r1.arg2: fire, r0.arg2: Religion, r0.rel: Type, r1.namespace: reverb, r1.arg1: A Massachusetts home insurance association) => Fire
what type of religion did massachusetts have?	green	0.21248334998334817	what type of religion did massachusetts have? => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => $x: ($x, "is a kind of", religion) (massachusetts, have, $x) => (r0.arg1: green, r1.rel: has been, r0.namespace: openie4, r1.arg2: green, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Massachusetts) => green
what type of religions are in the united states?	reality	1.7070354645354633	what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Reality, r1.rel: is in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a human-based religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: The reality) => Reality; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Reality, r1.rel: was obtained in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a human-based religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: its reality) => Reality; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Reality, r1.rel: was happening in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a human-based religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: the reality) => Reality; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Reality, r1.rel: is oil and gas production in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: a human-based religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: the reality) => Reality
what type of religions are in the united states?	islam	1.6977161727161714	what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is expanding in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is expanding in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing rapidly in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing rapidly in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: was founded in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: was founded in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: should be outlawed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: should be outlawed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: are all present in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: are all present in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is portrayed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is portrayed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is growing in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: was used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: was used in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: were born in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: were born in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: must be outlawed in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: must be outlawed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: should be banned in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: should be banned in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is taking hold in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is taking hold in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: has been in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: has been in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is a controversial organization in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is a controversial organization in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: still is mostly misunderstood in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: still is mostly misunderstood in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is a fast-growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is a fast-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: reverb, r1.arg2: the United States.., r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States.., r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the most male religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the most male religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second largest religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second largest religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second-largest religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second-largest religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second largest religion in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the second largest religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is still an exotic growth in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is still an exotic growth in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: reverb, r1.arg2: the Unites States and, r0.arg2: religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Islam, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the Unites States and, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Islam) => Islam
what type of religions are in the united states?	science	1.6941318297087515	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: is practiced in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: have been found in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: was commissioned in, r0.namespace: openie4, r1.arg2: the United States Army, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: can be viewed live in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: is still largely positive in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: would have been done in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: was made famous in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: is being sorted out in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: science, r1.rel: is n?t available in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is practiced in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: have been found in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: have been found in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: was commissioned in, r0.namespace: reverb, r1.arg2: the United States Army, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: was commissioned in, r0.namespace: openie4, r1.arg2: the United States Army, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: would have been done in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: would have been done in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is still largely positive in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is still largely positive in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: can be viewed live in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: can be viewed live in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is n?t available in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is n?t available in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: are conducted in, r0.namespace: reverb, r1.arg2: the United States and worldwide, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: are conducted in, r0.namespace: openie4, r1.arg2: the United States and worldwide, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is serving in, r0.namespace: reverb, r1.arg2: the United States Air Force, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is serving in, r0.namespace: openie4, r1.arg2: the United States Air Force, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: was made famous in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: was made famous in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: The science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is being sorted out in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the science) => Science; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Science, r1.rel: is being sorted out in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: new religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: the science) => Science
what type of religions are in the united states?	buddhism	1.6860670579420565	what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: is extremely popular in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: is perceived in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: has been in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: may be marketed in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: has been in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: has been a phenomenon in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: is the fastest-growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: is the fastest growing religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism; what type of religions are in the united states? => $x: ($x, "is an example of", religions) ($x, are in, the united states) => $x: ($x, "is an example of", religions) ($x, are in, the united states) => (r0.arg1: Buddhism, r1.rel: was the third-largest religion in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: a religion, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Buddhism) => Buddhism
what type of religions are in the united states?	yoga	1.6765359640359625	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: has been practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: has been practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: is popular in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: is growing dramatically in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: was gaining popularity in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: is exploding in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: are currently taught in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: was introduced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: are practiced in, r0.namespace: reverb, r1.arg2: the United States alone, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: yoga) => Yoga; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Yoga, r1.rel: has been in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Yoga) => Yoga
what type of religions are in the united states?	patriotism	1.6765359640359625	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Patriotism, r1.rel: is particularly important in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: patriotism) => Patriotism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Patriotism, r1.rel: was reborn in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Patriotism) => Patriotism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Patriotism, r1.rel: is particularly important in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: patriotism) => Patriotism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Patriotism, r1.rel: was reborn in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Patriotism) => Patriotism
what type of religions are in the united states?	fishing	1.6765359640359625	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: fishing, r1.rel: is big business in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Fishing) => fishing; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: fishing, r1.rel: are in, r0.namespace: openie4, r1.arg2: the northwest United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: fly fishing) => fishing; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: fishing, r1.rel: is a favorite pastime in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Fishing) => fishing; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: fishing, r1.rel: was born in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: fly-fishing) => fishing
what type of religions are in the united states?	communism	1.6765359640359625	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: was rampant in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Communism) => Communism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: was rampant in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: communism) => Communism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: has been pervasive in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: communism) => Communism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: was very powerful in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Communism) => Communism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: was a growing concern in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: communism) => Communism; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Communism, r1.rel: is virtually unknown in, r0.namespace: openie4, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Left communism) => Communism
what type of religions are in the united states?	medicine	1.6650986513486496	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: was the first in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: Medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: was living in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: are widely used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: was the first in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is very good in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: has been used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is rapidly changing in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: are available in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: medicines) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is delivered in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: are legally available in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicines) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is sometimes lower in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicines) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is practiced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: openie4, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: are performed annually in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is becoming more popular in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicines) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is a growing problem in, r0.namespace: reverb, r1.arg2: the Unites States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: has been exclusively used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: be more expensive than in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Medicines) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: is the largest medical school in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Medicine) => medicine; what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: medicine, r1.rel: can be used in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: a medicine) => medicine
what type of religions are in the united states?	wicca	1.3526121314582842	what type of religions are in the united states? => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => $x: ($x, "is a kind of", religions) ($x, are in, the united states) => (r0.arg1: Wicca, r1.rel: was first introduced in, r0.namespace: reverb, r1.arg2: the United States, r0.arg2: American nature-religion, r0.rel: is a kind of, r1.namespace: reverb, r1.arg1: Wicca) => Wicca
what types of art did andy warhol do?	internet	0.39217709373959275	what types of art did andy warhol do? => $x: ($x, "type", art) (andy warhol, do, $x) => $x: ($x, "type", art) (andy warhol, do, $x) => (r0.arg1: The Internet, r1.rel: Do on, r0.namespace: freebase, r1.arg2: the Internets, r0.arg2: Visual Art Medium, r0.rel: Type, r1.namespace: reverb, r1.arg1: Andy Warhol) => The Internet
what university did obama graduated from?	harvard law school	0.5229445554445544	what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduates from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: also graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: had recently graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated Summa Cum Laude from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated magna cum laude from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated magna cum laude from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Michelle Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mrs. Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Both Obamas) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: is a person who graduated from the university, r0.namespace: freebase, r1.arg2: Harvard Law school, r0.arg2: College/University, r0.rel: Type, r1.namespace: nell, r1.arg1: OBAMA) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: President Barack Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: graduated Magna Cum Laude from, r0.namespace: freebase, r1.arg2: Harvard Law School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Harvard Law School; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: is a person who graduated from the university, r0.namespace: freebase, r1.arg2: Harvard Law school, r0.arg2: College/University, r0.rel: Type, r1.namespace: nell, r1.arg1: Barack OBAMA) => Harvard Law School; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduates from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: also graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: had recently graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated Summa Cum Laude from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated magna cum laude from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated magna cum laude from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Michelle Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mrs. Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Both Obamas) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: is a person who graduated from the university, r0.namespace: nell, r1.arg2: Harvard Law school, r0.arg2: university, r0.rel: is a, r1.namespace: nell, r1.arg1: OBAMA) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: President Barack Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: graduated Magna Cum Laude from, r0.namespace: nell, r1.arg2: Harvard Law School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Harvard Law school; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: is a person who graduated from the university, r0.namespace: nell, r1.arg2: Harvard Law school, r0.arg2: university, r0.rel: is a, r1.namespace: nell, r1.arg1: Barack OBAMA) => Harvard Law school
what university did obama graduated from?	punahou school	0.5019761488511475	what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Punahou School, r1.rel: graduates from, r0.namespace: nell, r1.arg2: Punahou School, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Punahou School; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Punahou School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Punahou School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Punahou School; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Punahou School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: the Punahou School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barak Obama) => Punahou School; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Punahou School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Punahou School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Excitement about Obama) => Punahou School; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Punahou School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Punahou School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama and Copeman) => Punahou School
what university did obama graduated from?	columbia state university	0.4869987155701426	what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduates from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: both Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: President Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Barack Obama) => Columbia State University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia State University, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr. Obama) => Columbia State University
what university did obama graduated from?	columbia pacific university	0.4869987155701426	what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduates from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: both Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: President Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mr Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Barack Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Pacific University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mr. Obama) => Columbia Pacific University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduates from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: both Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: President Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Barack Obama) => columbia pacific university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia pacific university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr. Obama) => columbia pacific university
what university did obama graduated from?	columbia university	0.4869987155701426	what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduates from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: both Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: President Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mr Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Barack Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mr. Obama) => Columbia University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduates from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: both Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: President Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Barack Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Barack Obama) => Columbia university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mr. Obama) => Columbia university
what university did obama graduated from?	columbia bible college	0.46702880452880274	what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Bible College, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia College, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Obama) => Columbia Bible College; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Columbia Bible College, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Columbia College, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Columbia Bible College; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia Bible College, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia College, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => Columbia Bible College; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Columbia Bible College, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia College, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Columbia Bible College
what university did obama graduated from?	columbia junior college	0.46702880452880274	what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia junior college, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia College, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Obama) => columbia junior college; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: columbia junior college, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Columbia College, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => columbia junior college
what university did obama graduated from?	princeton university	0.46702880452880274	what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Princeton University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Princeton University, r0.arg2: Extended university, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Princeton University; what university did obama graduated from? => $x: ($x, "type", university) (obama, graduated from, $x) => $x: ($x, "type", university) (obama, graduated from, $x) => (r0.arg1: Princeton University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Princeton University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Obama) => Princeton University; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: Princeton university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Princeton University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => Princeton university
what university did obama graduated from?	harvard_university	0.46702880452880274	what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: harvard_university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => harvard_university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: harvard_university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Barack Obama) => harvard_university; what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: harvard_university, r1.rel: is a person who graduated from the university, r0.namespace: nell, r1.arg2: harvard_university, r0.arg2: university, r0.rel: is a, r1.namespace: nell, r1.arg1: OBAMA) => harvard_university
what university did obama graduated from?	princeton	0.46702880452880274	what university did obama graduated from? => $x: ($x, "is a", university) (obama, graduated from, $x) => $x: ($x, "is a", university) (obama, graduated from, $x) => (r0.arg1: PRINCETON, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Princeton, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Obama) => PRINCETON
what university did romney graduated from?	harvard business school	0.5019761488511475	what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Business School, r0.arg2: Extended university, r0.rel: Type, r1.namespace: reverb, r1.arg1: Romney) => Harvard Business School; what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Business School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Romney) => Harvard Business School; what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Business School, r0.arg2: Extended university, r0.rel: Type, r1.namespace: reverb, r1.arg1: ANN ROMNEY :He) => Harvard Business School; what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Harvard Business School, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: ANN ROMNEY :He) => Harvard Business School; what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Business School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Romney) => Harvard Business School; what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: Harvard Business School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Harvard Business School, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: ANN ROMNEY :He) => Harvard Business School
what university did romney graduated from?	harvard law school	0.5019761488511475	what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Harvard Law School, r1.rel: actually graduated from, r0.namespace: freebase, r1.arg2: both Harvard Law school, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mitt Romney) => Harvard Law School; what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: Harvard Law school, r1.rel: actually graduated from, r0.namespace: nell, r1.arg2: both Harvard Law school, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mitt Romney) => Harvard Law school
what university did romney graduated from?	brigham_young_university	0.46702880452880274	what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: brigham_young_university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Brigham Young University, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Romney) => brigham_young_university; what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: brigham_young_university, r1.rel: graduated from, r0.namespace: nell, r1.arg2: Brigham Young University, r0.arg2: university, r0.rel: is a, r1.namespace: reverb, r1.arg1: Romney) => brigham_young_university
what university did romney graduated from?	brigham young university	0.3863525363525353	what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Brigham Young University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Brigham Young University, r0.arg2: College/University, r0.rel: Type, r1.namespace: openie4, r1.arg1: Romney) => Brigham Young University; what university did romney graduated from? => $x: ($x, "type", university) (romney, graduated from, $x) => $x: ($x, "type", university) (romney, graduated from, $x) => (r0.arg1: Brigham Young University, r1.rel: graduated from, r0.namespace: freebase, r1.arg2: Brigham Young University, r0.arg2: College/University, r0.rel: Type, r1.namespace: reverb, r1.arg1: Romney) => Brigham Young University
what university did romney graduated from?	law school	0.21248334998334817	what university did romney graduated from? => $x: ($x, "is a", university) (romney, graduated from, $x) => $x: ($x, "is a", university) (romney, graduated from, $x) => (r0.arg1: law School, r1.rel: graduated from, r0.namespace: nell, r1.arg2: law school, r0.arg2: university, r0.rel: is a, r1.namespace: openie4, r1.arg1: Romney) => law School
what war did hitler lose?	world war ii	1.368741674991674	what war did hitler lose? => $x: ($x, "type", war) (hitler, lose, $x) => $x: ($x, "type", war) (hitler, lose, $x) => (r0.arg1: World War II, r1.rel: lost, r0.namespace: freebase, r1.arg2: World War II, r0.arg2: War, r0.rel: Type, r1.namespace: reverb, r1.arg1: Hitler) => World War II; what war did hitler lose? => $x: ($x, "is an example of", war) (hitler, lose, $x) => $x: ($x, "is an example of", war) (hitler, lose, $x) => (r0.arg1: World War II, r1.rel: lost, r0.namespace: reverb, r1.arg2: World War II, r0.arg2: a Crisis War, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Hitler) => World War II; what war did hitler lose? => $x: ($x, "is an example of", war) (hitler, lose, $x) => $x: ($x, "is an example of", war) (hitler, lose, $x) => (r0.arg1: World War II, r1.rel: had lost, r0.namespace: reverb, r1.arg2: World War II, r0.arg2: a Crisis War, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: 1942 Hitler) => World War II; what war did hitler lose? => $x: ($x, "is an example of", war) (hitler, lose, $x) => $x: ($x, "is an example of", war) (hitler, lose, $x) => (r0.arg1: World War II, r1.rel: lose his chance to win, r0.namespace: reverb, r1.arg2: World War II, r0.arg2: a Crisis War, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Adolf Hitler) => World War II
what war did hitler lose?	world war	0.3863525363525353	what war did hitler lose? => $x: ($x, "type", war) (hitler, lose, $x) => $x: ($x, "type", war) (hitler, lose, $x) => (r0.arg1: World War I, r1.rel: believed having lost, r0.namespace: freebase, r1.arg2: World War I, r0.arg2: War, r0.rel: Type, r1.namespace: reverb, r1.arg1: Hitler) => World War I
what was firefox programmed in?	visual studio	1.3547627372627362	what was firefox programmed in? => $x: (firefox, programmed in, $x) => $x: (firefox, programmed in, $x) => (r0.arg1: Firefox, r0.namespace: reverb, r0.arg2: Visual Studio, r0.rel: run the program in) => Visual Studio
what was john tyler?	hopeless	1.378726630512344	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: hopeless, r0.namespace: reverb, r0.arg2: John Tyler, r0.rel: now are the chances of) => hopeless
what was john tyler?	sherwood forest	1.378726630512344	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: Sherwood Forest, r0.namespace: reverb, r0.arg2: President John Tyler, r0.rel: was the home of) => Sherwood Forest
what was john tyler?	rush	1.378726630512344	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: Rush, r0.namespace: reverb, r0.arg2: John Tyler, r0.rel: was an assistant coach at) => Rush
what was john tyler?	church	1.378726630512344	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: The church, r0.namespace: reverb, r0.arg2: President John Tyler, r0.rel: was the site of) => The church
what was john tyler?	4 april	1.368741674991674	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: 4 April, r0.namespace: reverb, r0.arg2: Vice-President John Tyler, r0.rel: was succeeded by) => 4 April
what was john tyler?	white house	1.368741674991674	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: the White House, r0.namespace: reverb, r0.arg2: John Tyler, r0.rel: was paid off by) => the White House
what was john tyler?	florida	1.368741674991674	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: Florida, r0.namespace: reverb, r0.arg2: John Tyler, r0.rel: had been admitted under) => Florida
what was john tyler?	ship	1.3337943306693294	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: the ship, r0.namespace: reverb, r0.arg2: President John Tyler, r0.rel: was) => the ship
what was john tyler?	2009	0.5648813686313681	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: 2009, r0.namespace: reverb, r0.arg2: John Tyler, r0.rel: is going to be a very exciting year for) => 2009
what was john tyler?	award	0.5602217227217221	what was john tyler? => $x: ($x, was, john tyler) => $x: ($x, was, john tyler) => (r0.arg1: The award, r0.namespace: reverb, r0.arg2: the late Dr. John Tyler Caldwell, r0.rel: is named for) => The award
what was lucille ball?	julia child	1.3862153471528464	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: Julia Child, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: was just one year older than) => Julia Child
what was lucille ball?	moon	1.3862153471528464	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: the moon, r0.namespace: reverb, r0.arg2: the Lucille Ball show, r0.rel: was less interesting than) => the moon
what was lucille ball?	physical comedy	1.368741674991674	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: physical comedy, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: were often compared to) => physical comedy
what was lucille ball?	rene russo	1.368741674991674	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: Rene Russo, r0.namespace: reverb, r0.arg2: the Lucille Ball role, r0.rel: is in) => Rene Russo
what was lucille ball?	rosemary clooney	1.368741674991674	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: Rosemary Clooney, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: was a neighbor of) => Rosemary Clooney
what was lucille ball?	rko	1.368741674991674	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: RKO, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: was turned over to) => RKO
what was lucille ball?	ny	1.368741674991674	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: NY, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: is the birthplace of) => NY
what was lucille ball?	musical	1.3547627372627362	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: musical, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: was filmed with) => musical
what was lucille ball?	next	1.3337943306693294	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: Next, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: is comedienne) => Next
what was lucille ball?	aisha	1.3337943306693294	what was lucille ball? => $x: ($x, was, lucille ball) => $x: ($x, was, lucille ball) => (r0.arg1: Aisha, r0.namespace: reverb, r0.arg2: Lucille Ball, r0.rel: is very) => Aisha
what was the japanese war called?	manzanar	1.368741674991674	what was the japanese war called? => $x: (the japanese war, called, $x) => $x: (the japanese war, called, $x) => (r0.arg1: the World War II Japanese Internment Camp, r0.namespace: reverb, r0.arg2: Manzanar, r0.rel: called) => Manzanar
what was the japanese war called?	distant guns	0.5229445554445544	what was the japanese war called? => $x: (the japanese war, called, $x) => $x: (the japanese war, called, $x) => (r0.arg1: the Russo-Japanese War, r0.namespace: reverb, r0.arg2: Distant Guns, r0.rel: called) => Distant Guns
what was the japanese war called?	wave	0.5136252636252624	what was the japanese war called? => $x: (the japanese war, called, $x) => $x: (the japanese war, called, $x) => (r0.arg1: the Japanese war plan, r0.namespace: reverb, r0.arg2: a wave, r0.rel: called for) => a wave
what was the japanese war called?	securing	0.5136252636252624	what was the japanese war called? => $x: (the japanese war, called, $x) => $x: (the japanese war, called, $x) => (r0.arg1: the Japanese war plan, r0.namespace: reverb, r0.arg2: the securing, r0.rel: called for) => the securing
what was van halen first album?	truth ?	1.368741674991674	what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: Truth ?, r0.namespace: reverb, r0.arg2: Van Halen?s first studio album, r0.rel: is) => Truth ?; what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: Truth ?, r0.namespace: reverb, r0.arg2: Van Halen?s first original studio album, r0.rel: is) => Truth ?
what was van halen first album?	truth	1.368741674991674	what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: Truth, r0.namespace: reverb, r0.arg2: the first VAN HALEN album, r0.rel: is) => Truth; what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: Truth, r0.namespace: reverb, r0.arg2: Van Halen?s first original studio album, r0.rel: is) => Truth
what was van halen first album?	album	0.5369234931734923	what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: The album, r0.namespace: reverb, r0.arg2: Van Halen?s first original studio album, r0.rel: is) => The album
what was van halen first album?	1984	0.4903270340770326	what was van halen first album? => $x: ($x, was, van halen first album) => $x: ($x, was, van halen first album) => (r0.arg1: 1984, r0.namespace: reverb, r0.arg2: the first Van Halen album, r0.rel: was) => 1984
what year was first world series?	1915	0.5305694305694296	what year was first world series? => $x: ($x, "type", year) ($x, was, first world series) => $x: ($x, "type", year) ($x, was, first world series) => (r0.arg1: 1915, r1.rel: would have been, r0.namespace: freebase, r1.arg2: the first and only World Series, r0.arg2: Years, r0.rel: Type, r1.namespace: reverb, r1.arg1: 1915) => 1915; what year was first world series? => $x: ($x, "is a", year) ($x, was, first world series) => $x: ($x, "is a", year) ($x, was, first world series) => (r0.arg1: 1915, r1.rel: would have been, r0.namespace: nell, r1.arg2: the first and only World Series, r0.arg2: year, r0.rel: is a, r1.namespace: reverb, r1.arg1: 1915) => 1915
what year was first world series?	c 1903	0.5136252636252624	what year was first world series? => $x: ($x, "is a", year) ($x, was, first world series) => $x: ($x, "is a", year) ($x, was, first world series) => (r0.arg1: c 1903, r1.rel: was also, r0.namespace: nell, r1.arg2: the first World Series ever, r0.arg2: year, r0.rel: is a, r1.namespace: reverb, r1.arg1: ( 1903) => c 1903
what year was first world series?	1903	0.5136252636252624	what year was first world series? => $x: ($x, "type", year) ($x, was, first world series) => $x: ($x, "type", year) ($x, was, first world series) => (r0.arg1: 1903, r1.rel: was also, r0.namespace: freebase, r1.arg2: the first World Series ever, r0.arg2: Years, r0.rel: Type, r1.namespace: reverb, r1.arg1: ( 1903) => 1903; what year was first world series? => $x: ($x, "is a", year) ($x, was, first world series) => $x: ($x, "is a", year) ($x, was, first world series) => (r0.arg1: 1903, r1.rel: was also, r0.namespace: nell, r1.arg2: the first World Series ever, r0.arg2: year, r0.rel: is a, r1.namespace: reverb, r1.arg1: ( 1903) => 1903
what year was george w bush elected?	1994	0.5229445554445544	what year was george w bush elected? => $x: ($x, "is a", year) (george w bush, elected, $x) => $x: ($x, "is a", year) (george w bush, elected, $x) => (r0.arg1: 1994, r1.rel: was elected Governor in, r0.namespace: nell, r1.arg2: 1994, r0.arg2: year, r0.rel: is a, r1.namespace: reverb, r1.arg1: George W. Bush) => 1994
what year was george w bush elected?	november 25	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 25, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 25
what year was george w bush elected?	november 16	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 16, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 16
what year was george w bush elected?	november 17	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 17, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 17
what year was george w bush elected?	november 5	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 5, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 5
what year was george w bush elected?	november 26	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 26, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 26
what year was george w bush elected?	november 4	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 4, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 4
what year was george w bush elected?	november 6	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 6, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 6
what year was george w bush elected?	november 14	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 14, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 14
what year was george w bush elected?	november 24	0.42129988067488	what year was george w bush elected? => $x: ($x, "type", year) (george w bush, elected, $x) => $x: ($x, "type", year) (george w bush, elected, $x) => (r0.arg1: November 24, r1.rel: was elected in, r0.namespace: freebase, r1.arg2: November, r0.arg2: Day Of Year, r0.rel: Type, r1.namespace: reverb, r1.arg1: President George W. Bush) => November 24
when are the summer and winter olympics held?	same year	0.48450247668997515	when are the summer and winter olympics held? => $x: (the summer and winter olympics, are held in, $x) => $x: (the summer and winter olympics, are held in, $x) => (r0.arg1: the Winter and Summer Olympics, r0.namespace: reverb, r0.arg2: the same year, r0.rel: were held in) => the same year; when are the summer and winter olympics held? => $x: (the summer and winter olympics, are held in, $x) => $x: (the summer and winter olympics, are held in, $x) => (r0.arg1: the Winter and Summer Olympics, r0.namespace: openie4, r0.arg2: the same year, r0.rel: were held in) => the same year; when are the summer and winter olympics held? => $x: (the summer and winter olympics, are held in, $x) => $x: (the summer and winter olympics, are held in, $x) => (r0.arg1: the summer and winter Olympics, r0.namespace: reverb, r0.arg2: the same year, r0.rel: were held in) => the same year; when are the summer and winter olympics held? => $x: (the summer and winter olympics, held in, $x) => $x: (the summer and winter olympics, held in, $x) => (r0.arg1: the Winter and Summer Olympics, r0.namespace: reverb, r0.arg2: the same year, r0.rel: were held in) => the same year; when are the summer and winter olympics held? => $x: (the summer and winter olympics, held in, $x) => $x: (the summer and winter olympics, held in, $x) => (r0.arg1: the Winter and Summer Olympics, r0.namespace: openie4, r0.arg2: the same year, r0.rel: were held in) => the same year; when are the summer and winter olympics held? => $x: (the summer and winter olympics, held in, $x) => $x: (the summer and winter olympics, held in, $x) => (r0.arg1: the summer and winter Olympics, r0.namespace: reverb, r0.arg2: the same year, r0.rel: were held in) => the same year
when did annie open?	august	3.1921540959040953	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: August, r0.rel: is also planning to open a new store in) => August
when did annie open?	4 april	3.1741811759668894	when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: Annie Anawana Haloba Hob?l participates, r0.namespace: reverb, r0.arg2: 4 April, r0.rel: opened on) => 4 April
when did annie open?	march 20	3.1641962204462195	when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: March 20, r0.rel: is set to open on) => March 20
when did annie open?	1974	2.3498517107892103	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Our Annie sez retail store division, r0.namespace: reverb, r0.arg2: 1974, r0.rel: opened in) => 1974
when did annie open?	july 29 , 2005	2.3423629941487074	when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: the Annie Oakley Center, r0.namespace: reverb, r0.arg2: July 29 , 2005, r0.rel: was opened on) => July 29 , 2005
when did annie open?	fall 2012	2.297430694305693	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: ANNIE, r0.namespace: reverb, r0.arg2: fall 2012, r0.rel: will open in) => fall 2012
when did annie open?	1977	2.262483349983348	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: openie4, r0.arg2: 1977, r0.rel: opened in) => 1977; when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: 1977, r0.rel: opened in) => 1977; when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: openie4, r0.arg2: 1977, r0.rel: opened in) => 1977
when did annie open?	1964	2.0079378954378937	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: openie4, r0.arg2: 1964, r0.rel: opened in) => 1964
when did annie open?	fall	1.368741674991674	when did annie open? => $x: (annie, open in, $x) => $x: (annie, open in, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: the Fall, r0.rel: is set to open in) => the Fall
when did annie open?	broadway	1.3547627372627362	when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: Annie, r0.namespace: openie4, r0.arg2: Broadway, r0.rel: opened on) => Broadway; when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: Broadway, r0.rel: opened on) => Broadway; when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: Annie, r0.namespace: reverb, r0.arg2: Broadway, r0.rel: first opened on) => Broadway; when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: the musical Annie, r0.namespace: reverb, r0.arg2: Broadway, r0.rel: opened on) => Broadway; when did annie open? => $x: (annie, open on, $x) => $x: (annie, open on, $x) => (r0.arg1: The original production of Annie, r0.namespace: openie4, r0.arg2: Broadway, r0.rel: opened on) => Broadway
when did the san francisco earthquake occur?	april 18 , 1906	2.282453261024688	when did the san francisco earthquake occur? => $x: (the san francisco earthquake, occur on, $x) => $x: (the san francisco earthquake, occur on, $x) => (r0.arg1: The great San Francisco Earthquake, r0.namespace: reverb, r0.arg2: April 18 , 1906, r0.rel: occurred on) => April 18 , 1906
when does the wsop main event start?	monday	3.129248876123875	when does the wsop main event start? => $x: (the wsop main event, start on, $x) => $x: (the wsop main event, start on, $x) => (r0.arg1: The WSOP Main Event, r0.namespace: reverb, r0.arg2: Monday, r0.rel: is to start on) => Monday
where are the new orleans hornets moving to?	center chris kaman	0.5019761488511475	where are the new orleans hornets moving to? => $x: (the new orleans hornets, moving to, $x) => $x: (the new orleans hornets, moving to, $x) => (r0.arg1: The New Orleans Hornets, r0.namespace: reverb, r0.arg2: center Chris Kaman, r0.rel: are trying to move) => center Chris Kaman
where are the new orleans hornets moving to?	oklahoma city	0.46702880452880274	where are the new orleans hornets moving to? => $x: (the new orleans hornets, moving to, $x) => $x: (the new orleans hornets, moving to, $x) => (r0.arg1: the New Orleans Hornets, r0.namespace: reverb, r0.arg2: Oklahoma City, r0.rel: moved to) => Oklahoma City
where are the sahara desert located?	egypt	1.3387868084296644	where are the sahara desert located? => $x: (the sahara desert, located in, $x) => $x: (the sahara desert, located in, $x) => (r0.arg1: The Sahara desert, r0.namespace: reverb, r0.arg2: Egypt, r0.rel: is also located in) => Egypt; where are the sahara desert located? => $x: (the sahara desert, located in, $x) => $x: (the sahara desert, located in, $x) => (r0.arg1: The Sahara Desert, r0.namespace: reverb, r0.arg2: Egypt, r0.rel: is located in) => Egypt; where are the sahara desert located? => $x: (the sahara desert, located in, $x) => $x: (the sahara desert, located in, $x) => (r0.arg1: The Sahara Desert, r0.namespace: openie4, r0.arg2: Egypt, r0.rel: is located in) => Egypt
where are the texas rangers playing?	crimes	1.3609755984755973	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: The Texas Rangers, r0.namespace: reverb, r0.arg2: crimes, r0.rel: play an important role in solving) => crimes
where are the texas rangers playing?	world series	1.0675997613497599	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: The Texas Rangers, r0.namespace: reverb, r0.arg2: the World Series, r0.rel: played in) => the World Series; where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: The Texas Rangers, r0.namespace: reverb, r0.arg2: the World Series, r0.rel: are finally playing in) => the World Series; where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers, r0.namespace: reverb, r0.arg2: the World Series, r0.rel: are playing in) => the World Series; where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers, r0.namespace: openie4, r0.arg2: the World Series, r0.rel: are playing in) => the World Series
where are the texas rangers playing?	boston	0.5069686266114825	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers, r0.namespace: reverb, r0.arg2: Boston, r0.rel: played three games in) => Boston
where are the texas rangers playing?	only 28 games	0.4903270340770326	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers slugger, r0.namespace: reverb, r0.arg2: only 28 games, r0.rel: played in) => only 28 games
where are the texas rangers playing?	consecutive world series	0.46702880452880274	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers, r0.namespace: reverb, r0.arg2: consecutive World Series, r0.rel: plays in) => consecutive World Series
where are the texas rangers playing?	arlington	0.2649043664668653	where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: the Texas Rangers, r0.namespace: openie4, r0.arg2: Arlington, r0.rel: playing in) => Arlington; where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: The Texas Rangers, r0.namespace: openie4, r0.arg2: Arlington, r0.rel: play in) => Arlington; where are the texas rangers playing? => $x: (the texas rangers, playing in, $x) => $x: (the texas rangers, playing in, $x) => (r0.arg1: The Texas Rangers, r0.namespace: openie4, r0.arg2: Arlington, r0.rel: play their home games in) => Arlington
where did alex chilton die?	2010	0.46702880452880274	where did alex chilton die? => $x: (alex chilton, die in, $x) => $x: (alex chilton, die in, $x) => (r0.arg1: Alex Chilton, r0.namespace: reverb, r0.arg2: 2010, r0.rel: died in) => 2010; where did alex chilton die? => $x: (alex chilton, die in, $x) => $x: (alex chilton, die in, $x) => (r0.arg1: Alex Chilton, r0.namespace: openie4, r0.arg2: 2010, r0.rel: died in) => 2010
where did alex chilton die?	new orleans	0.46702880452880274	where did alex chilton die? => $x: (alex chilton, die in, $x) => $x: (alex chilton, die in, $x) => (r0.arg1: Alex Chilton, r0.namespace: openie4, r0.arg2: New Orleans, r0.rel: died in) => New Orleans; where did alex chilton die? => $x: (alex chilton, die in, $x) => $x: (alex chilton, die in, $x) => (r0.arg1: Alex Chilton, r0.namespace: reverb, r0.arg2: New Orleans, r0.rel: died in) => New Orleans
where did alexander graham bell die?	nova scotia	1.2988469863469847	where did alexander graham bell die? => $x: (alexander graham bell, die in, $x) => $x: (alexander graham bell, die in, $x) => (r0.arg1: Alexander Graham Bell, r0.namespace: reverb, r0.arg2: Nova Scotia, r0.rel: died in) => Nova Scotia
where did alexander graham bell die?	baddek	0.46702880452880274	where did alexander graham bell die? => $x: (alexander graham bell, die in, $x) => $x: (alexander graham bell, die in, $x) => (r0.arg1: Alexander Graham Bell, r0.namespace: reverb, r0.arg2: Baddek, r0.rel: died in) => Baddek
where did alexander graham bell die?	1922	0.46702880452880274	where did alexander graham bell die? => $x: (alexander graham bell, die in, $x) => $x: (alexander graham bell, die in, $x) => (r0.arg1: Alexander Graham Bell, r0.namespace: reverb, r0.arg2: 1922, r0.rel: died in) => 1922; where did alexander graham bell die? => $x: (alexander graham bell, die in, $x) => $x: (alexander graham bell, die in, $x) => (r0.arg1: Alexander Graham Bell, r0.namespace: openie4, r0.arg2: 1922, r0.rel: died in) => 1922
where did benjamin franklin work?	london	1.2988469863469847	where did benjamin franklin work? => $x: (benjamin franklin, work in, $x) => $x: (benjamin franklin, work in, $x) => (r0.arg1: Benjamin Franklin, r0.namespace: reverb, r0.arg2: London, r0.rel: worked in) => London
where did benjamin franklin work?	1725	0.21248334998334817	where did benjamin franklin work? => $x: (benjamin franklin, work in, $x) => $x: (benjamin franklin, work in, $x) => (r0.arg1: Benjamin Franklin, r0.namespace: openie4, r0.arg2: 1725, r0.rel: worked in) => 1725
where did benjamin franklin work?	papers benjamin franklin, volume 1: january 1, 1706 through december 31, 1734	-0.18940133940134007	where did benjamin franklin work? => $x: (benjamin franklin, work in, $x) => $x: (benjamin franklin, work in, $x) => (r0.arg1: The Papers of Benjamin Franklin, r0.namespace: freebase, r0.arg2: The Papers of Benjamin Franklin, Volume 1: January 1, 1706 through December 31, 1734, r0.rel: Works in this series) => The Papers of Benjamin Franklin, Volume 1: January 1, 1706 through December 31, 1734
where did benjamin franklin work?	papers benjamin franklin, vol. 28: volume 28: november 1, 1778 through february 28, 1779	-0.18940133940134007	where did benjamin franklin work? => $x: (benjamin franklin, work in, $x) => $x: (benjamin franklin, work in, $x) => (r0.arg1: The Papers of Benjamin Franklin, r0.namespace: freebase, r0.arg2: The Papers of Benjamin Franklin, Vol. 28: Volume 28: November 1, 1778 through February 28, 1779, r0.rel: Works in this series) => The Papers of Benjamin Franklin, Vol. 28: Volume 28: November 1, 1778 through February 28, 1779
where did charles darwin die?	april 1882	1.04430153180153	where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: openie4, r0.arg2: April 1882, r0.rel: died in) => April 1882; where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: reverb, r0.arg2: April 1882, r0.rel: died in) => April 1882
where did charles darwin die?	2006	0.5369234931734923	where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin?s turtle, r0.namespace: reverb, r0.arg2: 2006, r0.rel: died in) => 2006
where did charles darwin die?	1882	0.49498667998667856	where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: openie4, r0.arg2: 1882, r0.rel: died in) => 1882; where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: openie4, r0.arg2: 1882, r0.rel: died in) => 1882; where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: reverb, r0.arg2: 1882, r0.rel: died in) => 1882; where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin, r0.namespace: reverb, r0.arg2: 1882, r0.rel: had died in) => 1882
where did charles darwin die?	london aged 73	0.49498667998667856	where did charles darwin die? => $x: (charles darwin, die in, $x) => $x: (charles darwin, die in, $x) => (r0.arg1: Charles Darwin ?, r0.namespace: reverb, r0.arg2: London aged 73, r0.rel: died in) => London aged 73
where did eleanor roosevelt die?	new york city	1.3587567194710042	where did eleanor roosevelt die? => $x: (eleanor roosevelt, die in, $x) => $x: (eleanor roosevelt, die in, $x) => (r0.arg1: Former first lady Eleanor Roosevelt, r0.namespace: reverb, r0.arg2: New York City, r0.rel: died in) => New York City
where did madonna grew up?	pontiac	1.382720612720612	where did madonna grew up? => $x: (madonna, grew up, $x) => $x: (madonna, grew up, $x) => (r0.arg1: .Madonna, r0.namespace: reverb, r0.arg2: Pontiac, r0.rel: grew up in) => Pontiac; where did madonna grew up? => $x: (madonna, grew up, $x) => $x: (madonna, grew up, $x) => (r0.arg1: Madonna, r0.namespace: reverb, r0.arg2: Pontiac, r0.rel: grew up in) => Pontiac; where did madonna grew up? => $x: (madonna, grew up in, $x) => $x: (madonna, grew up in, $x) => (r0.arg1: .Madonna, r0.namespace: reverb, r0.arg2: Pontiac, r0.rel: grew up in) => Pontiac; where did madonna grew up? => $x: (madonna, grew up in, $x) => $x: (madonna, grew up in, $x) => (r0.arg1: Madonna, r0.namespace: reverb, r0.arg2: Pontiac, r0.rel: grew up in) => Pontiac
where did michelle obama graduated from?	harvard law school	1.2988469863469847	where did michelle obama graduated from? => $x: (michelle obama, graduated from, $x) => $x: (michelle obama, graduated from, $x) => (r0.arg1: Michelle Obama, r0.namespace: reverb, r0.arg2: Harvard Law School, r0.rel: graduated from) => Harvard Law School
where did michelle obama graduated from?	princeton	0.5136252636252624	where did michelle obama graduated from? => $x: (michelle obama, graduated from, $x) => $x: (michelle obama, graduated from, $x) => (r0.arg1: First Lady Michelle Obama, r0.namespace: reverb, r0.arg2: Princeton, r0.rel: graduated from) => Princeton
where did richard nixon die?	1994	0.5269385376528224	where did richard nixon die? => $x: (richard nixon, die in, $x) => $x: (richard nixon, die in, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: 1994, r0.rel: died in) => 1994; where did richard nixon die? => $x: (richard nixon, die in, $x) => $x: (richard nixon, die in, $x) => (r0.arg1: Richard Nixon, r0.namespace: openie4, r0.arg2: 1994, r0.rel: died in) => 1994; where did richard nixon die? => $x: (richard nixon, die in, $x) => $x: (richard nixon, die in, $x) => (r0.arg1: frequent Earth president Richard Nixon, r0.namespace: reverb, r0.arg2: 1994, r0.rel: died in) => 1994
where did richard nixon die?	madison	0.5136252636252624	where did richard nixon die? => $x: (richard nixon, die in, $x) => $x: (richard nixon, die in, $x) => (r0.arg1: President Richard Nixon, r0.namespace: reverb, r0.arg2: Madison, r0.rel: died Wednesday in) => Madison
where did richard nixon die?	1994 aged 81	0.49498667998667856	where did richard nixon die? => $x: (richard nixon, die in, $x) => $x: (richard nixon, die in, $x) => (r0.arg1: President Richard Nixon, r0.namespace: reverb, r0.arg2: 1994 aged 81, r0.rel: died in) => 1994 aged 81
where did russians originate?	asia	1.3986965415536838	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: the Russian-Mongolian border, r0.namespace: reverb, r0.arg2: Asia, r0.rel: had originated in) => Asia
where did russians originate?	russia	1.368741674991674	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: the Russian Revolution, r0.namespace: reverb, r0.arg2: Russia, r0.rel: largely originated in) => Russia
where did russians originate?	soviet union	1.0792488761238748	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Mafia Russian Mafia, r0.namespace: reverb, r0.arg2: the Soviet Union, r0.rel: originated in) => the Soviet Union; where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Mafia, r0.namespace: openie4, r0.arg2: the Soviet Union, r0.rel: originated in) => the Soviet Union; where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Mafia, r0.namespace: reverb, r0.arg2: the Soviet Union, r0.rel: originated in) => the Soviet Union
where did russians originate?	russian port	0.5469084486941622	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: The Russian Blue cat breed, r0.namespace: reverb, r0.arg2: the Russian port, r0.rel: originated in) => the Russian port
where did russians originate?	large cities	0.5369234931734923	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: the Russian cat fancy, r0.namespace: reverb, r0.arg2: such large cities, r0.rel: originated in) => such large cities
where did russians originate?	monasteries	0.5229445554445544	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: the Russian arts, r0.namespace: reverb, r0.arg2: the monasteries, r0.rel: originated in) => the monasteries
where did russians originate?	1883	0.5229445554445544	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Marxism Organized Russian Marxism, r0.namespace: reverb, r0.arg2: 1883, r0.rel: originated in) => 1883
where did russians originate?	decadence	0.5019761488511475	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Christianity, r0.namespace: reverb, r0.arg2: the decadence, r0.rel: originated in) => the decadence
where did russians originate?	northern russia	0.5019761488511475	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian Blues, r0.namespace: reverb, r0.arg2: northern Russia, r0.rel: originated in) => northern Russia
where did russians originate?	18th century	0.5019761488511475	where did russians originate? => $x: (russians, originate in, $x) => $x: (russians, originate in, $x) => (r0.arg1: Russian painting, r0.namespace: reverb, r0.arg2: the 18th century, r0.rel: originated in) => the 18th century
where did the anasazi indians live?	7th century	0.46702880452880274	where did the anasazi indians live? => $x: (the anasazi indians, live in, $x) => $x: (the anasazi indians, live in, $x) => (r0.arg1: the Anasazi Indians, r0.namespace: reverb, r0.arg2: the 7th Century, r0.rel: lived in) => the 7th Century
where did the anasazi indians live?	ancient cliff dwellings	0.46702880452880274	where did the anasazi indians live? => $x: (the anasazi indians, live in, $x) => $x: (the anasazi indians, live in, $x) => (r0.arg1: The Anasazi Indians, r0.namespace: reverb, r0.arg2: ancient cliff dwellings, r0.rel: lived in) => ancient cliff dwellings
where did the greek alphabet come from?	phoenicia	1.2988469863469847	where did the greek alphabet come from? => $x: (the greek alphabet, come from, $x) => $x: (the greek alphabet, come from, $x) => (r0.arg1: the Greek alphabet, r0.namespace: reverb, r0.arg2: Phoenicia, r0.rel: came from) => Phoenicia
where did the greek alphabet come from?	eastern branch	0.4903270340770326	where did the greek alphabet come from? => $x: (the greek alphabet, come from, $x) => $x: (the greek alphabet, come from, $x) => (r0.arg1: The classical Greek alphabet, r0.namespace: reverb, r0.arg2: the eastern branch, r0.rel: came from) => the eastern branch
where did the greek alphabet come from?	phoenicians	0.46702880452880274	where did the greek alphabet come from? => $x: (the greek alphabet, come from, $x) => $x: (the greek alphabet, come from, $x) => (r0.arg1: the Greek alphabet, r0.namespace: reverb, r0.arg2: the Phoenicians, r0.rel: came from) => the Phoenicians
where did the yoruba originated from?	oyo	0.46702880452880274	where did the yoruba originated from? => $x: (the yoruba, originated from, $x) => $x: (the yoruba, originated from, $x) => (r0.arg1: the Yoruba, r0.namespace: reverb, r0.arg2: Oyo, r0.rel: originated from) => Oyo
where did thomas paine die?	february	1.2988469863469847	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: February, r0.rel: died in) => February
where did thomas paine die?	new york city	1.2988469863469847	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: New York City, r0.rel: died in) => New York City
where did thomas paine die?	1992	0.49498667998667856	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas O Paine, r0.namespace: reverb, r0.arg2: 1992, r0.rel: died in) => 1992; where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas O. Paine, r0.namespace: reverb, r0.arg2: 1992, r0.rel: died in) => 1992
where did thomas paine die?	exile	0.46702880452880274	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: exile, r0.rel: died in) => exile
where did thomas paine die?	1809	0.46702880452880274	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: openie4, r0.arg2: 1809, r0.rel: died in) => 1809; where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: 1809, r0.rel: died in) => 1809
where did thomas paine die?	agony fear	0.46702880452880274	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: agony and fear, r0.rel: died in) => agony and fear
where did thomas paine die?	fear agony	0.46702880452880274	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: fear and agony, r0.rel: died in) => fear and agony
where did thomas paine die?	destitution	0.46702880452880274	where did thomas paine die? => $x: (thomas paine, die in, $x) => $x: (thomas paine, die in, $x) => (r0.arg1: Thomas Paine, r0.namespace: reverb, r0.arg2: destitution, r0.rel: die in) => destitution
where do florida panthers play?	ottawa	1.3765077515077508	where do florida panthers play? => $x: (florida panthers, play in, $x) => $x: (florida panthers, play in, $x) => (r0.arg1: the Florida Panthers, r0.namespace: reverb, r0.arg2: Ottawa, r0.rel: then go on to play in) => Ottawa
where do florida panthers play?	helsinki	1.3587567194710042	where do florida panthers play? => $x: (florida panthers, play in, $x) => $x: (florida panthers, play in, $x) => (r0.arg1: the Florida Panthers, r0.namespace: reverb, r0.arg2: Helsinki, r0.rel: played a game in) => Helsinki
where do florida panthers play?	miami arena	1.3454434454434443	where do florida panthers play? => $x: (florida panthers, play in, $x) => $x: (florida panthers, play in, $x) => (r0.arg1: the Florida Panthers, r0.namespace: reverb, r0.arg2: Miami Arena, r0.rel: still played in) => Miami Arena
where do florida panthers play?	nfl	-0.043012116089039716	where do florida panthers play? => $x: (florida panthers, play in, $x) => $x: (florida panthers, play in, $x) => (r0.arg1: Florida Intl Golden Panthers, r0.namespace: nell, r0.arg2: NFL, r0.rel: is a sports team that plays in the league) => NFL
where do the appalachian mountains run through?	western part	0.4903270340770326	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: The Appalachian mountain chain, r0.namespace: reverb, r0.arg2: the western part, r0.rel: runs through) => the western part
where do the appalachian mountains run through?	state	0.4903270340770326	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: The Appalachian Mountains, r0.namespace: reverb, r0.arg2: the state, r0.rel: also run through) => the state
where do the appalachian mountains run through?	north part	0.4903270340770326	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: the vast Appalachian Mountains, r0.namespace: reverb, r0.arg2: the north part, r0.rel: run through) => the north part
where do the appalachian mountains run through?	northeast alabama	0.46702880452880274	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: The Appalachian Mountains, r0.namespace: reverb, r0.arg2: northeast Alabama, r0.rel: run through) => northeast Alabama
where do the appalachian mountains run through?	region	0.46702880452880274	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: the Appalachian Mountains, r0.namespace: reverb, r0.arg2: the region, r0.rel: runs through) => the region
where do the appalachian mountains run through?	fourteen states	0.46702880452880274	where do the appalachian mountains run through? => $x: (the appalachian mountains, run through, $x) => $x: (the appalachian mountains, run through, $x) => (r0.arg1: the Appalachian mountains, r0.namespace: reverb, r0.arg2: fourteen states, r0.rel: runs through) => fourteen states
where do the blackhawks play?	st . louis	1.3268048618048605	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Blackhawks, r0.namespace: reverb, r0.arg2: St . Louis, r0.rel: played the Blues in) => St . Louis
where do the blackhawks play?	event	1.3268048618048605	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Chicago Blackhawks, r0.namespace: reverb, r0.arg2: the event, r0.rel: played in) => the event
where do the blackhawks play?	united center	0.5369234931734923	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Blackhawks, r0.namespace: reverb, r0.arg2: the United Center, r0.rel: have played in) => the United Center; where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: The Blackhawks and Bulls, r0.namespace: reverb, r0.arg2: the United Center, r0.rel: play their games in) => the United Center
where do the blackhawks play?	finals	0.5369234931734923	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Chicago Blackhawks, r0.namespace: reverb, r0.arg2: the finals, r0.rel: are going to play in) => the finals
where do the blackhawks play?	9/11	0.5369234931734923	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Blackhawk Down incident, r0.namespace: reverb, r0.arg2: 9/11, r0.rel: played a hand in) => 9/11
where do the blackhawks play?	los angeles	0.5269385376528224	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Blackhawks, r0.namespace: reverb, r0.arg2: Los Angeles, r0.rel: play a key game in) => Los Angeles
where do the blackhawks play?	front	0.5136252636252624	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: The Blackhawks, r0.namespace: reverb, r0.arg2: front, r0.rel: played strong defense in) => front
where do the blackhawks play?	grand total	0.5136252636252624	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Chicago Blackhawks, r0.namespace: reverb, r0.arg2: a grand total, r0.rel: had played in) => a grand total
where do the blackhawks play?	game 1	0.5136252636252624	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: The Blackhawks captain, r0.namespace: reverb, r0.arg2: Game 1, r0.rel: will play in) => Game 1
where do the blackhawks play?	first half	0.5136252636252624	where do the blackhawks play? => $x: (the blackhawks, play in, $x) => $x: (the blackhawks, play in, $x) => (r0.arg1: the Blackhawks, r0.namespace: reverb, r0.arg2: the first half, r0.rel: played well defensively in) => the first half
where do the seattle seahawks play?	kingdome	1.04430153180153	where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: the Seattle Seahawks, r0.namespace: openie4, r0.arg2: the Kingdome, r0.rel: played in) => the Kingdome
where do the seattle seahawks play?	usfl	0.4903270340770326	where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: the Seattle Seahawks, r0.namespace: reverb, r0.arg2: the USFL, r0.rel: later played in) => the USFL
where do the seattle seahawks play?	1976	0.4903270340770326	where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: The Seattle Seahawks, r0.namespace: reverb, r0.arg2: 1976, r0.rel: began play in) => 1976; where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: the Seattle Seahawks, r0.namespace: openie4, r0.arg2: 1976, r0.rel: began play in) => 1976
where do the seattle seahawks play?	afc west	0.46702880452880274	where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: the Seattle Seahawks, r0.namespace: reverb, r0.arg2: the AFC West, r0.rel: played in) => the AFC West
where do the seattle seahawks play?	super bowl	0.46702880452880274	where do the seattle seahawks play? => $x: (the seattle seahawks, play in, $x) => $x: (the seattle seahawks, play in, $x) => (r0.arg1: the Seattle Seahawks, r0.namespace: reverb, r0.arg2: the Super Bowl, r0.rel: played in) => the Super Bowl
where does airtran airways fly?	continental u.s. arv	0.49498667998667856	where does airtran airways fly? => $x: (airtran airways, fly in, $x) => $x: (airtran airways, fly in, $x) => (r0.arg1: anywhere AirTran Airways, r0.namespace: reverb, r0.arg2: the continental U.S. ARV, r0.rel: flies in) => the continental U.S. ARV
where does archbishop desmond tutu live?	grove park	0.46702880452880274	where does archbishop desmond tutu live? => $x: (archbishop desmond tutu, live in, $x) => $x: (archbishop desmond tutu, live in, $x) => (r0.arg1: Archbishop Desmond Tutu, r0.namespace: reverb, r0.arg2: Grove Park, r0.rel: lived in) => Grove Park
where does archbishop desmond tutu live?	vilakazi street precinct	0.46702880452880274	where does archbishop desmond tutu live? => $x: (archbishop desmond tutu, live in, $x) => $x: (archbishop desmond tutu, live in, $x) => (r0.arg1: Archbishop Desmond Tutu, r0.namespace: reverb, r0.arg2: the Vilakazi Street precinct, r0.rel: lived in) => the Vilakazi Street precinct
where does bronx begin?	fall	1.3862153471528464	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: the South Bronx, r0.namespace: reverb, r0.arg2: the fall, r0.rel: is expected to begin in) => the fall
where does bronx begin?	midtown manhattan	1.3337943306693294	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: the Bronx, r0.namespace: reverb, r0.arg2: Midtown Manhattan, r0.rel: begins in) => Midtown Manhattan
where does bronx begin?	2007	0.5543971653346647	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: the highly successful Bronx Freedom Fund, r0.namespace: reverb, r0.arg2: 2007, r0.rel: began in) => 2007
where does bronx begin?	2006	0.5369234931734923	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: 70 Bronx parks, r0.namespace: reverb, r0.arg2: 2006, r0.rel: was begun in) => 2006
where does bronx begin?	1849	0.5229445554445544	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: The Bronx parish, r0.namespace: reverb, r0.arg2: 1849, r0.rel: began in) => 1849
where does bronx begin?	summer	0.5019761488511475	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: Bronx Arena, r0.namespace: reverb, r0.arg2: the summer, r0.rel: began in) => the summer; where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: Bronx Biannual, r0.namespace: reverb, r0.arg2: the summer, r0.rel: began in) => the summer
where does bronx begin?	1998	0.5019761488511475	where does bronx begin? => $x: (bronx, begin in, $x) => $x: (bronx, begin in, $x) => (r0.arg1: the Bronx, r0.namespace: reverb, r0.arg2: 1998, r0.rel: began in) => 1998
where does delaware river start?	1725	0.5136252636252624	where does delaware river start? => $x: (delaware river, start in, $x) => $x: (delaware river, start in, $x) => (r0.arg1: the Delaware River, r0.namespace: reverb, r0.arg2: 1725, r0.rel: started production in) => 1725
where does the columbia river start?	march	0.51944982101232	where does the columbia river start? => $x: (the columbia river, start in, $x) => $x: (the columbia river, start in, $x) => (r0.arg1: the Columbia and Willamette rivers, r0.namespace: reverb, r0.arg2: March, r0.rel: gets started in) => March
where does the columbia river start?	miocene epoch	0.51944982101232	where does the columbia river start? => $x: (the columbia river, start in, $x) => $x: (the columbia river, start in, $x) => (r0.arg1: the Columbia River Gorge, r0.namespace: reverb, r0.arg2: the Miocene Epoch, r0.rel: started to form in) => the Miocene Epoch
where does the tennessee river go?	camp	0.46702880452880274	where does the tennessee river go? => $x: (the tennessee river, go in, $x) => $x: (the tennessee river, go in, $x) => (r0.arg1: the Tennessee River, r0.namespace: reverb, r0.arg2: camp, r0.rel: went in) => camp
where has the english language evolved from?	context	0.5069686266114825	where has the english language evolved from? => $x: (the english language, evolved from, $x) => $x: (the english language, evolved from, $x) => (r0.arg1: the English language today, r0.namespace: reverb, r0.arg2: the context, r0.rel: have evolved from) => the context
where has the english language evolved from?	leaves	0.46702880452880274	where has the english language evolved from? => $x: (the english language, evolved from, $x) => $x: (the english language, evolved from, $x) => (r0.arg1: the English language, r0.namespace: reverb, r0.arg2: the leaves, r0.rel: evolves from) => the leaves
where is auburn university located?	auburn	0.5136252636252624	where is auburn university located? => $x: (auburn university, located in, $x) => $x: (auburn university, located in, $x) => (r0.arg1: Auburn University, r0.namespace: reverb, r0.arg2: Auburn, r0.rel: located in) => Auburn; where is auburn university located? => $x: (auburn university, located in, $x) => $x: (auburn university, located in, $x) => (r0.arg1: Community Auburn University, r0.namespace: reverb, r0.arg2: Auburn, r0.rel: is located in) => Auburn
where is denmark situated?	northern europe	1.368741674991674	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: northern Europe, r0.rel: is situated in) => northern Europe; where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: Northern Europe, r0.rel: is Situated in) => Northern Europe; where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Geography Denmark, r0.namespace: reverb, r0.arg2: Northern Europe, r0.rel: is situated in) => Northern Europe; where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: General Information Denmark, r0.namespace: reverb, r0.arg2: northern Europe, r0.rel: is situated in) => northern Europe
where is denmark situated?	europe	1.3547627372627362	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: Europe, r0.rel: is uniquely situated in) => Europe
where is denmark situated?	scandinavia	1.3337943306693294	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: Scandinavia, r0.rel: is situated in) => Scandinavia
where is denmark situated?	borderland	0.571870837495837	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: The new Denmark?s Aquarium, r0.namespace: reverb, r0.arg2: the borderland, r0.rel: is situated in) => the borderland
where is denmark situated?	northen europe	0.5229445554445544	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Travel Denmark, r0.namespace: reverb, r0.arg2: Northen Europe, r0.rel: is situated in) => Northen Europe
where is denmark situated?	copenhagen suburb r?dovre	0.5019761488511475	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: a Copenhagen suburb R?dovre, r0.rel: is situated in) => a Copenhagen suburb R?dovre
where is denmark situated?	hiller?d	0.5019761488511475	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: Hiller?d, r0.rel: is situated in) => Hiller?d
where is denmark situated?	scandinavian region	0.5019761488511475	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: Scandinavian region, r0.rel: is situated in) => Scandinavian region
where is denmark situated?	zone	0.5019761488511475	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark Denmark, r0.namespace: reverb, r0.arg2: the zone, r0.rel: is situated in) => the zone
where is denmark situated?	greater copenhagen area	0.5019761488511475	where is denmark situated? => $x: (denmark, situated in, $x) => $x: (denmark, situated in, $x) => (r0.arg1: Denmark, r0.namespace: reverb, r0.arg2: the Greater Copenhagen area, r0.rel: is situated in) => the Greater Copenhagen area
where is harley davidson made?	york	1.3986965415536838	where is harley davidson made? => $x: (harley davidson, made in, $x) => $x: (harley davidson, made in, $x) => (r0.arg1: Harley-Davidson, r0.namespace: reverb, r0.arg2: York, r0.rel: makes its home in) => York
where is harley davidson made?	milwaukee	1.3268048618048605	where is harley davidson made? => $x: (harley davidson, made in, $x) => $x: (harley davidson, made in, $x) => (r0.arg1: Harley Davidson, r0.namespace: reverb, r0.arg2: Milwaukee, r0.rel: is made in) => Milwaukee
where is harley davidson made?	superiority	0.571870837495837	where is harley davidson made? => $x: (harley davidson, made in, $x) => $x: (harley davidson, made in, $x) => (r0.arg1: Each Harley-Davidson motorcycle, r0.namespace: reverb, r0.arg2: superiority, r0.rel: is made in) => superiority
where is harley davidson made?	usa	0.566878359735502	where is harley davidson made? => $x: (harley davidson, made in, $x) => $x: (harley davidson, made in, $x) => (r0.arg1: A Harley-Davidson motorcycle, r0.namespace: reverb, r0.arg2: the USA, r0.rel: made in) => the USA
where is harley davidson made?	1933	0.5369234931734923	where is harley davidson made? => $x: (harley davidson, made in, $x) => $x: (harley davidson, made in, $x) => (r0.arg1: a 1933 VLE Harley Davidson, r0.namespace: reverb, r0.arg2: 1933, r0.rel: were made in) => 1933
where is mission san buenaventura located?	old town ventura	0.5069686266114825	where is mission san buenaventura located? => $x: (mission san buenaventura, located in, $x) => $x: (mission san buenaventura, located in, $x) => (r0.arg1: the San Buenaventura Mission, r0.namespace: reverb, r0.arg2: Old Town Ventura, r0.rel: is located in) => Old Town Ventura
where is the un based?	rome	1.3966995504495499	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN, r0.namespace: reverb, r0.arg2: Rome, r0.rel: has been based in) => Rome; where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: The U.N. Food and Agriculture Organization, r0.namespace: reverb, r0.arg2: Rome, r0.rel: is based in) => Rome
where is the un based?	geneva	1.392039904539904	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: The UN, r0.namespace: reverb, r0.arg2: Geneva, r0.rel: is based in) => Geneva; where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN Human Rights Council, r0.namespace: reverb, r0.arg2: Geneva, r0.rel: is based in) => Geneva; where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the U.N. Human Rights Council, r0.namespace: reverb, r0.arg2: Geneva, r0.rel: is based in) => Geneva
where is the un based?	afghanistan	1.392039904539904	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: The UN, r0.namespace: reverb, r0.arg2: Afghanistan, r0.rel: will continue its broad-based engagement in) => Afghanistan
where is the un based?	africa	1.3862153471528464	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN?s Economic Commission, r0.namespace: reverb, r0.arg2: Africa, r0.rel: is based in) => Africa
where is the un based?	south	1.3587567194710042	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: The UN Command, r0.namespace: reverb, r0.arg2: the South, r0.rel: has been based in) => the South
where is the un based?	sierra leone	1.3587567194710042	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN peacekeeping mission, r0.namespace: reverb, r0.arg2: Sierra Leone, r0.rel: was based in) => Sierra Leone
where is the un based?	new york	1.3454434454434443	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN, r0.namespace: reverb, r0.arg2: New York, r0.rel: was based in) => New York; where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN headquarters, r0.namespace: reverb, r0.arg2: New York, r0.rel: are based in) => New York
where is the un based?	new york city	1.3454434454434443	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN headquarters, r0.namespace: reverb, r0.arg2: New York City, r0.rel: is based in) => New York City
where is the un based?	kabul	1.1241811759668894	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN-mandated peacekeeping force, r0.namespace: openie4, r0.arg2: Kabul, r0.rel: based in) => Kabul
where is the un based?	nairobi	1.0722594072594058	where is the un based? => $x: (the un, based in, $x) => $x: (the un, based in, $x) => (r0.arg1: the UN organisations, r0.namespace: openie4, r0.arg2: Nairobi, r0.rel: based in) => Nairobi
where was anne boleyn executed?	1542	0.49498667998667856	where was anne boleyn executed? => $x: (anne boleyn, executed in, $x) => $x: (anne boleyn, executed in, $x) => (r0.arg1: Anne Boleyn, r0.namespace: reverb, r0.arg2: 1542, r0.rel: was executed in) => 1542
where was anne boleyn executed?	tower	0.49498667998667856	where was anne boleyn executed? => $x: (anne boleyn, executed in, $x) => $x: (anne boleyn, executed in, $x) => (r0.arg1: Anne Boleyn, r0.namespace: reverb, r0.arg2: the Tower, r0.rel: was executed in) => the Tower
where was anne boleyn executed?	1536	0.21248334998334817	where was anne boleyn executed? => $x: (anne boleyn, executed in, $x) => $x: (anne boleyn, executed in, $x) => (r0.arg1: Anne Boleyn, r0.namespace: openie4, r0.arg2: 1536, r0.rel: executed in) => 1536
where was david berkowitz arrested?	yonkers	1.3587567194710042	where was david berkowitz arrested? => $x: (david berkowitz, arrested in, $x) => $x: (david berkowitz, arrested in, $x) => (r0.arg1: Postal employee David Berkowitz, r0.namespace: reverb, r0.arg2: Yonkers, r0.rel: was arrested in) => Yonkers; where was david berkowitz arrested? => $x: (david berkowitz, arrested in, $x) => $x: (david berkowitz, arrested in, $x) => (r0.arg1: Postal employee David Berkowitz, r0.namespace: openie4, r0.arg2: Yonkers, r0.rel: was arrested in) => Yonkers
where was the first gulf war fought?	defence	0.4869987155701426	where was the first gulf war fought? => $x: (the first gulf war, fought in, $x) => $x: (the first gulf war, fought in, $x) => (r0.arg1: the first Gulf war, r0.namespace: reverb, r0.arg2: defence, r0.rel: was fought in) => defence
where was the ottoman empire based?	istanbul	1.04430153180153	where was the ottoman empire based? => $x: (the ottoman empire, based in, $x) => $x: (the ottoman empire, based in, $x) => (r0.arg1: the Ottoman Empire, r0.namespace: openie4, r0.arg2: Istanbul, r0.rel: based in) => Istanbul
where was the ottoman empire based?	turkey	1.04430153180153	where was the ottoman empire based? => $x: (the ottoman empire, based in, $x) => $x: (the ottoman empire, based in, $x) => (r0.arg1: the Ottoman Empire, r0.namespace: openie4, r0.arg2: Turkey, r0.rel: based in) => Turkey
where was theodore roosevelt buried?	youngs memorial cemetery	0.49498667998667856	where was theodore roosevelt buried? => $x: (theodore roosevelt, buried in, $x) => $x: (theodore roosevelt, buried in, $x) => (r0.arg1: Theodore Roosevelt, r0.namespace: reverb, r0.arg2: the Youngs Memorial Cemetery, r0.rel: is buried in) => the Youngs Memorial Cemetery
where was theodore roosevelt buried?	oyster bay	0.49498667998667856	where was theodore roosevelt buried? => $x: (theodore roosevelt, buried in, $x) => $x: (theodore roosevelt, buried in, $x) => (r0.arg1: Theodore Roosevelt, r0.namespace: reverb, r0.arg2: Oyster Bay, r0.rel: was buried in) => Oyster Bay
which continents were part of the roman empire?	europe	0.48256095756095596	which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Europe, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Roman Empire, r0.arg2: Continent, r0.rel: Type, r1.namespace: reverb, r1.arg1: Europe) => Europe; which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Europe, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Roman Empire, r0.arg2: Continents, r0.rel: Type, r1.namespace: reverb, r1.arg1: Europe) => Europe; which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Europe, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Holy Roman Empire, r0.arg2: Continent, r0.rel: Type, r1.namespace: reverb, r1.arg1: Europe) => Europe; which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Europe, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Holy Roman Empire, r0.arg2: Continents, r0.rel: Type, r1.namespace: reverb, r1.arg1: Europe) => Europe; which continents were part of the roman empire? => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => (r0.arg1: europe, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Roman Empire, r0.arg2: continent, r0.rel: is a, r1.namespace: reverb, r1.arg1: Europe) => europe; which continents were part of the roman empire? => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => (r0.arg1: europe, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Holy Roman Empire, r0.arg2: continent, r0.rel: is a, r1.namespace: reverb, r1.arg1: Europe) => europe
which continents were part of the roman empire?	asia	0.46702880452880274	which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Asia, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Roman Empire, r0.arg2: Continent, r0.rel: Type, r1.namespace: reverb, r1.arg1: Asia) => Asia; which continents were part of the roman empire? => $x: ($x, "type", continents) ($x, were part of, the roman empire) => $x: ($x, "type", continents) ($x, were part of, the roman empire) => (r0.arg1: Asia, r1.rel: was part of, r0.namespace: freebase, r1.arg2: the Roman Empire, r0.arg2: Continents, r0.rel: Type, r1.namespace: reverb, r1.arg1: Asia) => Asia; which continents were part of the roman empire? => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => $x: ($x, "is a", continents) ($x, were part of, the roman empire) => (r0.arg1: asia, r1.rel: was part of, r0.namespace: nell, r1.arg2: the Roman Empire, r0.arg2: continent, r0.rel: is a, r1.namespace: reverb, r1.arg1: Asia) => asia
which countries share a border with russia?	norway	1.6638278388278374	which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: NORWAY, r1.rel: shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Norway) => NORWAY; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: NORWAY, r1.rel: shared a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Norway) => NORWAY; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: NORWAY, r1.rel: also shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Norway) => NORWAY; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shares a border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: shared a border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Norway) => Norway; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Norway, r1.rel: also shares a border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Norway) => Norway
which countries share a border with russia?	finland	1.6638278388278374	which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Finland) => Finland; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: Finland, r1.rel: shares a long border with, r0.namespace: openie4, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: openie4, r1.arg1: Finland) => Finland
which countries share a border with russia?	china	0.48450247668997515	which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: China) => China; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: CHina, r1.rel: shares a long border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: China) => CHina; which countries share a border with russia? => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => $x: ($x, "is an example of", countries) ($x, share a border with, russia) => (r0.arg1: China, r1.rel: shares a long border with, r0.namespace: reverb, r1.arg2: Russia, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: China) => China
which countries share a border with russia?	ukraine(	0.48450247668997515	which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine(, r1.rel: also shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine(
which countries share a border with russia?	 china	0.48450247668997515	which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1:   china, r1.rel: shares a long border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: China) =>   china
which countries share a border with russia?	mongolia	0.48450247668997515	which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Mongolia, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mongolia) => Mongolia; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Mongolia, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mongolia) => Mongolia; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Mongolia, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Landlocked Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mongolia) => Mongolia; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Mongolia, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Mongolia) => Mongolia; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: Mongolia, r1.rel: also shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Mongolia) => Mongolia
which countries share a border with russia?	ukraine	0.48450247668997515	which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine; which countries share a border with russia? => $x: ($x, "type", countries) ($x, share a border with, russia) => $x: ($x, "type", countries) ($x, share a border with, russia) => (r0.arg1: Ukraine, r1.rel: also shares a border with, r0.namespace: freebase, r1.arg2: Russia, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Ukraine) => Ukraine; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: ukraine, r1.rel: also shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Ukraine) => ukraine
which countries share a border with russia?	uk, finland	0.46702880452880274	which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: UK, Finland, r1.rel: shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Finland) => UK, Finland; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: UK, Finland, r1.rel: shares a border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Finland) => UK, Finland; which countries share a border with russia? => $x: ($x, "is a", countries) ($x, share a border with, russia) => $x: ($x, "is a", countries) ($x, share a border with, russia) => (r0.arg1: UK, Finland, r1.rel: shares a long border with, r0.namespace: nell, r1.arg2: Russia, r0.arg2: country, r0.rel: is a, r1.namespace: openie4, r1.arg1: Finland) => UK, Finland
which countries speak arabic language?	iraq"	0.4869987155701426	which countries speak arabic language? => $x: ($x, "is a", countries) ($x, speak, arabic language) => $x: ($x, "is a", countries) ($x, speak, arabic language) => (r0.arg1: Iraq", r1.rel: speak, r0.namespace: nell, r1.arg2: the Arabic language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Iraq) => Iraq"; which countries speak arabic language? => $x: ($x, "is a", countries) ($x, speak, arabic language) => $x: ($x, "is a", countries) ($x, speak, arabic language) => (r0.arg1: Iraq", r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Arabic Language, r0.arg2: country, r0.rel: is a, r1.namespace: freebase, r1.arg1: Iraq) => Iraq"
which countries speak arabic language?	iraq	0.39217709373959275	which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Arabic language, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Iraq) => Iraq; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Arabic language, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Iraq) => Iraq; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: speak, r0.namespace: freebase, r1.arg2: the Arabic language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Iraq) => Iraq; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iraq) => Iraq; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Countries, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iraq) => Iraq; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iraq, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iraq) => Iraq
which countries speak arabic language?	kuwait	0.39058857808857717	which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Kuwait, r1.rel: Languages spoken, r0.namespace: reverb, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Kuwait) => Kuwait; which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Kuwait, r1.rel: Languages spoken, r0.namespace: reverb, r1.arg2: Arabic, Gulf Spoken Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Kuwait) => Kuwait
which countries speak arabic language?	yemen	0.35528823028822876	which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Yemen, r1.rel: Languages spoken, r0.namespace: reverb, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Yemen) => Yemen
which countries speak arabic language?	south africa	0.35528823028822876	which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: South Africa, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: South Africa) => South Africa; which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: South Africa, r1.rel: Languages spoken, r0.namespace: reverb, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: South Africa) => South Africa
which countries speak arabic language?	iran	0.10074277574277435	which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iran, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Countries, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iran) => Iran; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iran, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iran) => Iran; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Iran, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Iran) => Iran; which countries speak arabic language? => $x: ($x, "is a", countries) ($x, speak, arabic language) => $x: ($x, "is a", countries) ($x, speak, arabic language) => (r0.arg1: Iran, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Arabic Language, r0.arg2: country, r0.rel: is a, r1.namespace: freebase, r1.arg1: Iran) => Iran; which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Iran, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Iran) => Iran
which countries speak arabic language?	israel	0.10074277574277435	which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Israel, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Israel) => Israel; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Israel, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Countries, r0.rel: Type, r1.namespace: freebase, r1.arg1: Israel) => Israel; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Israel, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Israel) => Israel; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Israel, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: freebase, r1.arg1: Israel) => Israel; which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Israel, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Israel) => Israel
which countries speak arabic language?	turkey	0.10074277574277435	which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Turkey, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Turkey) => Turkey
which countries speak arabic language?	tanzania	0.10074277574277435	which countries speak arabic language? => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => $x: ($x, "is an example of", countries) ($x, speak, arabic language) => (r0.arg1: Tanzania, r1.rel: Languages spoken, r0.namespace: openie4, r1.arg2: Arabic Language, r0.arg2: a country, r0.rel: is an example of, r1.namespace: freebase, r1.arg1: Tanzania) => Tanzania
which countries speak arabic language?	morocco	-0.21464108807858917	which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Morocco, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Morocco) => Morocco; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Morocco, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Countries, r0.rel: Type, r1.namespace: freebase, r1.arg1: Morocco) => Morocco; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Morocco, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Morocco) => Morocco; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Morocco, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: freebase, r1.arg1: Morocco) => Morocco; which countries speak arabic language? => $x: ($x, "type", countries) ($x, speak, arabic language) => $x: ($x, "type", countries) ($x, speak, arabic language) => (r0.arg1: Morocco, r1.rel: Languages spoken, r0.namespace: freebase, r1.arg2: Arabic Language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: freebase, r1.arg1: Morocco) => Morocco; which countries speak arabic language? => $x: ($x, "is a", countries) ($x, speak, arabic language) => $x: ($x, "is a", countries) ($x, speak, arabic language) => (r0.arg1: MOROCCO, r1.rel: Languages spoken, r0.namespace: nell, r1.arg2: Arabic Language, r0.arg2: country, r0.rel: is a, r1.namespace: freebase, r1.arg1: Morocco) => MOROCCO
which countries speak germanic languages?	russia	1.3369713619713606	which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Athletics country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: freebase, r1.arg2: the Germanic language Yiddish, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Russia) => Russia; which countries speak germanic languages? => $x: ($x, "is an example of", countries) ($x, speak, germanic languages) => $x: ($x, "is an example of", countries) ($x, speak, germanic languages) => (r0.arg1: Russia, r1.rel: spoke, r0.namespace: reverb, r1.arg2: the Germanic language Yiddish, r0.arg2: a country, r0.rel: is an example of, r1.namespace: reverb, r1.arg1: Russia) => Russia
which countries speak germanic languages?	 russia	0.5019761488511475	which countries speak germanic languages? => $x: ($x, "is a", countries) ($x, speak, germanic languages) => $x: ($x, "is a", countries) ($x, speak, germanic languages) => (r0.arg1:   russia, r1.rel: spoke, r0.namespace: nell, r1.arg2: the Germanic language Yiddish, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Russia) =>   russia
which countries speak germanic languages?	england	0.4869987155701426	which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Yacht-racing Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Dragon-using country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: UK constituent country, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: England, r1.rel: started speaking, r0.namespace: freebase, r1.arg2: a Germanic language, r0.arg2: Country of origin, r0.rel: Type, r1.namespace: reverb, r1.arg1: England) => England; which countries speak germanic languages? => $x: ($x, "is a", countries) ($x, speak, germanic languages) => $x: ($x, "is a", countries) ($x, speak, germanic languages) => (r0.arg1: england, r1.rel: started speaking, r0.namespace: nell, r1.arg2: a Germanic language, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: England) => england
which countries speak germanic languages?	uk, denmark	0.46702880452880274	which countries speak germanic languages? => $x: ($x, "is a", countries) ($x, speak, germanic languages) => $x: ($x, "is a", countries) ($x, speak, germanic languages) => (r0.arg1: UK, Denmark, r1.rel: spoke, r0.namespace: nell, r1.arg2: Germanic languages, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Denmark) => UK, Denmark
which countries speak germanic languages?	denmark	0.46702880452880274	which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Germanic languages, r0.arg2: Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Denmark) => Denmark; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Germanic languages, r0.arg2: Countries, r0.rel: Type, r1.namespace: reverb, r1.arg1: Denmark) => Denmark; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Germanic languages, r0.arg2: Sport Country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Denmark) => Denmark; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Germanic languages, r0.arg2: Beer country / region, r0.rel: Type, r1.namespace: reverb, r1.arg1: Denmark) => Denmark; which countries speak germanic languages? => $x: ($x, "type", countries) ($x, speak, germanic languages) => $x: ($x, "type", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: freebase, r1.arg2: Germanic languages, r0.arg2: Olympic participating country, r0.rel: Type, r1.namespace: reverb, r1.arg1: Denmark) => Denmark; which countries speak germanic languages? => $x: ($x, "is a", countries) ($x, speak, germanic languages) => $x: ($x, "is a", countries) ($x, speak, germanic languages) => (r0.arg1: Denmark, r1.rel: spoke, r0.namespace: nell, r1.arg2: Germanic languages, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Denmark) => Denmark
which country invented nike?	us-oregon	0.46702880452880274	which country invented nike? => $x: ($x, "is a", country) ($x, invented, nike) => $x: ($x, "is a", country) ($x, invented, nike) => (r0.arg1: US-Oregon, r1.rel: invented, r0.namespace: nell, r1.arg2: Nike, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: Oregon) => US-Oregon
which country was michael jackson born?	mexico mexico city	0.5136252636252624	which country was michael jackson born? => $x: ($x, "is a", country) (michael jackson, born, $x) => $x: ($x, "is a", country) (michael jackson, born, $x) => (r0.arg1: Mexico Mexico City, r1.rel: was born in, r0.namespace: nell, r1.arg2: Mexico City, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the late Michael Jackson) => Mexico Mexico City
which country was michael jackson born?	mexico - mexico city	0.5136252636252624	which country was michael jackson born? => $x: ($x, "is a", country) (michael jackson, born, $x) => $x: ($x, "is a", country) (michael jackson, born, $x) => (r0.arg1: Mexico - Mexico City, r1.rel: was born in, r0.namespace: nell, r1.arg2: Mexico City, r0.arg2: country, r0.rel: is a, r1.namespace: reverb, r1.arg1: the late Michael Jackson) => Mexico - Mexico City
who are the coaches for the oakland raiders?	mcelwain	0.4869987155701426	who are the coaches for the oakland raiders? => $x: ($x, are the coaches for, the oakland raiders) => $x: ($x, are the coaches for, the oakland raiders) => (r0.arg1: McElwain, r0.namespace: reverb, r0.arg2: the Oakland Raiders, r0.rel: was the quarterbacks coach for) => McElwain; who are the coaches for the oakland raiders? => $x: ($x, are the coaches for, the oakland raiders) => $x: ($x, are the coaches for, the oakland raiders) => (r0.arg1: McElwain, r0.namespace: reverb, r0.arg2: the Oakland Raiders, r0.rel: was the quarterbacks coach for) => McElwain
who are the colorado representatives?	bill	0.2823780386280377	who are the colorado representatives? => $x: ($x, are, the colorado representatives) => $x: ($x, are, the colorado representatives) => (r0.arg1: The bill, r0.namespace: openie4, r0.arg2: the Colorado House of Representatives, r0.rel: was approved by) => The bill
who created arthur?	portraits	1.3986965415536838	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: Portraits, r0.namespace: reverb, r0.arg2: Arthur Rimbaud, r0.rel: created a photogravure series for) => Portraits
who created arthur?	sherlock holmes	1.3986965415536838	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: Sherlock Holmes, r0.namespace: reverb, r0.arg2: Arthur Conan Doyle, r0.rel: was created by) => Sherlock Holmes; who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: Sherlock Holmes, r0.namespace: reverb, r0.arg2: Sir Arthur Conan Doyle, r0.rel: was created by) => Sherlock Holmes
who created arthur?	metal gear solid	1.392039904539904	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: Metal Gear Solid, r0.namespace: reverb, r0.arg2: a King Arthur game, r0.rel: are creating) => Metal Gear Solid
who created arthur?	three investigators	1.382720612720612	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: The Three Investigators, r0.namespace: reverb, r0.arg2: Robert Arthur, r0.rel: were created by) => The Three Investigators
who created arthur?	detective	1.1374944499944495	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: a detective, r0.namespace: openie4, r0.arg2: Sir Arthur Conan Doyle, r0.rel: created by) => a detective
who created arthur?	pipe-smoking private eye	1.1281751581751576	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: the pipe-smoking private eye, r0.namespace: openie4, r0.arg2: Arthur Conan Doyle, r0.rel: created by) => the pipe-smoking private eye
who created arthur?	john macarthur	0.586848270776842	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: John MacArthur, r0.namespace: reverb, r0.arg2: The MacArthur Scripture Memory System, r0.rel: created) => John MacArthur
who created arthur?	u.n. command	0.583519952269952	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: the U.N. Command, r0.namespace: reverb, r0.arg2: General MacArthur, r0.rel: was created with) => the U.N. Command
who created arthur?	century	0.5788603063603059	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: Each century, r0.namespace: reverb, r0.arg2: its own Arthur, r0.rel: re-creates) => Each century
who created arthur?	team	0.5788603063603059	who created arthur? => $x: ($x, created, arthur) => $x: ($x, created, arthur) => (r0.arg1: the team, r0.namespace: reverb, r0.arg2: an ARTHUR/All Kids, r0.rel: created) => the team
who did darth vaders voice?	me--	0.5269385376528224	who did darth vaders voice? => $x: ($x, did, darth vaders voice) => $x: ($x, did, darth vaders voice) => (r0.arg1: me--, r0.namespace: reverb, r0.arg2: your Darth Vader voice generator, r0.rel: do with) => me--
who did denise van outen married?	lee mead	1.3268048618048605	who did denise van outen married? => $x: (denise van outen, married, $x) => $x: (denise van outen, married, $x) => (r0.arg1: Denise Van Outen, r0.namespace: reverb, r0.arg2: Lee Mead, r0.rel: has married) => Lee Mead
who did jackie robinson first play for?	montreal	1.3387868084296644	who did jackie robinson first play for? => $x: (jackie robinson, first play for, $x) => $x: (jackie robinson, first play for, $x) => (r0.arg1: Jackie Robinson, r0.namespace: reverb, r0.arg2: Montreal, r0.rel: played his first game for) => Montreal
who did jackie robinson first play for?	brooklyn dodgers	0.5069686266114825	who did jackie robinson first play for? => $x: (jackie robinson, first play for, $x) => $x: (jackie robinson, first play for, $x) => (r0.arg1: Jackie Robinson, r0.namespace: reverb, r0.arg2: the Brooklyn Dodgers, r0.rel: first played for) => the Brooklyn Dodgers; who did jackie robinson first play for? => $x: (jackie robinson, first play for, $x) => $x: (jackie robinson, first play for, $x) => (r0.arg1: Jackie Robinson, r0.namespace: reverb, r0.arg2: the Brooklyn Dodgers, r0.rel: played first base for) => the Brooklyn Dodgers; who did jackie robinson first play for? => $x: (jackie robinson, first play for, $x) => $x: (jackie robinson, first play for, $x) => (r0.arg1: Jackie Robinson, r0.namespace: reverb, r0.arg2: the Brooklyn Dodgers, r0.rel: plays his first game for) => the Brooklyn Dodgers
who did jackie robinson first play for?	brooklyn	0.46702880452880274	who did jackie robinson first play for? => $x: (jackie robinson, first play for, $x) => $x: (jackie robinson, first play for, $x) => (r0.arg1: Jackie Robinson, r0.namespace: reverb, r0.arg2: Brooklyn, r0.rel: first played for) => Brooklyn
who did lbj marry?	ladybird	1.2988469863469847	who did lbj marry? => $x: (lbj, marry, $x) => $x: (lbj, marry, $x) => (r0.arg1: LBJ, r0.namespace: reverb, r0.arg2: Ladybird, r0.rel: married) => Ladybird
who did paul revere marry?	sara orne	0.5469084486941622	who did paul revere marry? => $x: (paul revere, marry, $x) => $x: (paul revere, marry, $x) => (r0.arg1: August 4 , 1757 Paul Revere, r0.namespace: reverb, r0.arg2: Sara Orne, r0.rel: married) => Sara Orne
who did paul revere marry?	sarah orne	0.21248334998334817	who did paul revere marry? => $x: (paul revere, marry, $x) => $x: (paul revere, marry, $x) => (r0.arg1: Paul Revere, r0.namespace: openie4, r0.arg2: Sarah Orne, r0.rel: married) => Sarah Orne
who did richard nixon run against?	george mcgovern	1.2988469863469847	who did richard nixon run against? => $x: (richard nixon, run against, $x) => $x: (richard nixon, run against, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: George McGovern, r0.rel: ran against) => George McGovern
who did richard nixon run against?	john f. kennedy	1.2988469863469847	who did richard nixon run against? => $x: (richard nixon, run against, $x) => $x: (richard nixon, run against, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: John F. Kennedy, r0.rel: ran against) => John F. Kennedy
who did richard nixon run against?	davis	0.46702880452880274	who did richard nixon run against? => $x: (richard nixon, run against, $x) => $x: (richard nixon, run against, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: Davis, r0.rel: ran against) => Davis
who did richard nixon run against?	liberal democratic jerry voorhis	0.46702880452880274	who did richard nixon run against? => $x: (richard nixon, run against, $x) => $x: (richard nixon, run against, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: the liberal Democratic Jerry Voorhis, r0.rel: ran against) => the liberal Democratic Jerry Voorhis
who did richard nixon run against?	chaos	0.46702880452880274	who did richard nixon run against? => $x: (richard nixon, run against, $x) => $x: (richard nixon, run against, $x) => (r0.arg1: Richard Nixon, r0.namespace: reverb, r0.arg2: chaos, r0.rel: ran against) => chaos
who did sandra bullock marry?	jesse james	1.378726630512344	who did sandra bullock marry? => $x: (sandra bullock, marry, $x) => $x: (sandra bullock, marry, $x) => (r0.arg1: Sandra Bullock, r0.namespace: reverb, r0.arg2: Jesse James, r0.rel: was ?happily ? married to) => Jesse James; who did sandra bullock marry? => $x: (sandra bullock, marry, $x) => $x: (sandra bullock, marry, $x) => (r0.arg1: Sandra Bullock, r0.namespace: reverb, r0.arg2: Jesse James, r0.rel: does n?t marry) => Jesse James
who does darth vaders voice?	me--	0.5269385376528224	who does darth vaders voice? => $x: ($x, does, darth vaders voice) => $x: ($x, does, darth vaders voice) => (r0.arg1: me--, r0.namespace: reverb, r0.arg2: your Darth Vader voice generator, r0.rel: do with) => me--
who does david beckham play for?	ac milan	1.368741674991674	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: AC Milan, r0.rel: wanted to play for) => AC Milan; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: AC Milan, r0.rel: was playing for) => AC Milan; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: AC Milan, r0.rel: is off to play for) => AC Milan; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: her husband hunky David Beckham, r0.namespace: reverb, r0.arg2: AC Milan, r0.rel: was playing for) => AC Milan
who does david beckham play for?	real madrid	1.3454434454434443	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: Real Madrid, r0.rel: played for) => Real Madrid; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: footballer husband David Beckham, r0.namespace: reverb, r0.arg2: Real Madrid, r0.rel: played for) => Real Madrid
who does david beckham play for?	team	1.3268048618048605	who does david beckham play for? => $x: (david beckham, does play for, $x) => $x: (david beckham, does play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: a team, r0.rel: does play for) => a team; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: a team, r0.rel: does play for) => a team
who does david beckham play for?	la galaxy	1.2988469863469847	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: the LA Galaxy, r0.rel: plays for) => the LA Galaxy
who does david beckham play for?	manchester united	1.2988469863469847	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: Manchester United, r0.rel: played for) => Manchester United
who does david beckham play for?	galaxy	1.0722594072594058	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: the Galaxy, r0.rel: is still playing for) => the Galaxy; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: the Galaxy, r0.rel: is playing for) => the Galaxy; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: openie4, r0.arg2: the Galaxy, r0.rel: to play for) => the Galaxy
who does david beckham play for?	england	1.0722594072594058	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: openie4, r0.arg2: England, r0.rel: to play for) => England
who does david beckham play for?	long	0.5369234931734923	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: former captain David Beckham, r0.namespace: reverb, r0.arg2: long, r0.rel: has played for so) => long
who does david beckham play for?	milan	0.5269385376528224	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: Milan, r0.rel: is expected to play for) => Milan; who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: Milan, r0.rel: played the first half for) => Milan
who does david beckham play for?	l.a. galaxy	0.5269385376528224	who does david beckham play for? => $x: (david beckham, play for, $x) => $x: (david beckham, play for, $x) => (r0.arg1: David Beckham, r0.namespace: reverb, r0.arg2: the L.A. Galaxy, r0.rel: has signed to play for) => the L.A. Galaxy
who does jeremy lin play for?	eric musselman	1.3268048618048605	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: Eric Musselman, r0.rel: was playing for) => Eric Musselman
who does jeremy lin play for?	harvard	1.3268048618048605	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: openie4, r0.arg2: Harvard, r0.rel: played for) => Harvard; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: Harvard, r0.rel: played for) => Harvard; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: Harvard, r0.rel: previously played for) => Harvard
who does jeremy lin play for?	mavericks	1.2988469863469847	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: the Mavericks, r0.rel: played for) => the Mavericks
who does jeremy lin play for?	knicks	1.1042112649255496	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: the Knicks, r0.rel: plays for) => the Knicks; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: the Knicks, r0.rel: started playing for) => the Knicks; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: openie4, r0.arg2: the Knicks, r0.rel: started playing a lot for) => the Knicks; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: the 11 games Jeremy Lin, r0.namespace: reverb, r0.arg2: the Knicks, r0.rel: played for) => the Knicks
who does jeremy lin play for?	reno	0.5509024309024302	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: current New York Knicks point guard Jeremy Lin, r0.namespace: reverb, r0.arg2: Reno, r0.rel: played for) => Reno
who does jeremy lin play for?	while	0.5446895696895689	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin kid, r0.namespace: reverb, r0.arg2: a while, r0.rel: was playing pretty damn fantastic for) => a while
who does jeremy lin play for?	taiwanese aka	0.5269385376528224	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: the Taiwanese aka, r0.rel: has agreed to play for) => the Taiwanese aka
who does jeremy lin play for?	denver broncos	0.5269385376528224	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin ? Tebow, r0.namespace: reverb, r0.arg2: the Denver Broncos, r0.rel: plays quarterback for) => the Denver Broncos
who does jeremy lin play for?	first time	0.5136252636252624	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: Jeremy Lin, r0.namespace: reverb, r0.arg2: the first time, r0.rel: played critical minutes for) => the first time
who does jeremy lin play for?	reno bighorns	0.5136252636252624	who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: this article Jeremy Lin, r0.namespace: reverb, r0.arg2: the Reno Bighorns, r0.rel: played for) => the Reno Bighorns; who does jeremy lin play for? => $x: (jeremy lin, play for, $x) => $x: (jeremy lin, play for, $x) => (r0.arg1: ADVERTISEMENT Jeremy Lin, r0.namespace: reverb, r0.arg2: the Reno Bighorns, r0.rel: played for) => the Reno Bighorns
who does nolan ryan play for?	ny mets	-0.09319291819291937	who does nolan ryan play for? => $x: (nolan ryan, play for, $x) => $x: (nolan ryan, play for, $x) => (r0.arg1: Nolan Ryan, r0.namespace: nell, r0.arg2: ny mets, r0.rel: plays for the team) => ny mets
who does peter griffin voice?	macfarlane	0.5469084486941622	who does peter griffin voice? => $x: ($x, does, peter griffin voice) => $x: ($x, does, peter griffin voice) => (r0.arg1: MacFarlane, r0.namespace: reverb, r0.arg2: Peter Griffin?s voice, r0.rel: is essentially doing) => MacFarlane
who fought in the gulf war 1991?	netherlands	1.3188168973883245	who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: the Netherlands, r0.namespace: reverb, r0.arg2: the 1991 Persian Gulf War, r0.rel: fought in) => the Netherlands; who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: the Netherlands, r0.namespace: reverb, r0.arg2: the 1991 Persian Gulf War, r0.rel: fought in) => the Netherlands
who fought in the gulf war 1991?	soldier	0.5019761488511475	who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: a soldier, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: volunteered to fight in) => a soldier; who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: a soldier, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: volunteered to fight in) => a soldier
who fought in the gulf war 1991?	erik gustafson	0.46702880452880274	who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: Erik Gustafson, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => Erik Gustafson; who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: Erik Gustafson, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => Erik Gustafson
who fought in the gulf war 1991?	marine	0.46702880452880274	who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: a Marine, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => a Marine; who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: a Marine, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => a Marine
who fought in the gulf war 1991?	part	0.46702880452880274	who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: part, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => part; who fought in the gulf war 1991? => $x: ($x, fought in, the gulf war 1991) => $x: ($x, fought in, the gulf war 1991) => (r0.arg1: part, r0.namespace: reverb, r0.arg2: the 1991 Gulf War, r0.rel: fought in) => part
who fought the battle of gettysburg?	mass	0.4903270340770326	who fought the battle of gettysburg? => $x: ($x, fought the battle of, gettysburg) => $x: ($x, fought the battle of, gettysburg) => (r0.arg1: the mass, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: finally fought the battle of) => the mass; who fought the battle of gettysburg? => $x: ($x, fought the battle of, gettysburg) => $x: ($x, fought the battle of, gettysburg) => (r0.arg1: the mass, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: finally fought the battle of) => the mass
who fought the battle of gettysburg?	lee	0.46702880452880274	who fought the battle of gettysburg? => $x: ($x, fought the battle of, gettysburg) => $x: ($x, fought the battle of, gettysburg) => (r0.arg1: Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: fought the Battle of) => Lee; who fought the battle of gettysburg? => $x: ($x, fought the battle of, gettysburg) => $x: ($x, fought the battle of, gettysburg) => (r0.arg1: Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: fought the Battle of) => Lee
who founded new york university?	etsy	1.3765077515077508	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Etsy, r0.namespace: reverb, r0.arg2: a young New York University graduate, r0.rel: was founded by) => Etsy
who founded new york university?	sketch troupe	0.49498667998667856	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: sketch troupe, r0.namespace: reverb, r0.arg2: New York University, r0.rel: founded at) => sketch troupe
who founded new york university?	omega phi beta	-0.18318847818847883	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Omega Phi Beta, r0.namespace: freebase, r0.arg2: University at Albany, The State University of New York, r0.rel: Founding school) => Omega Phi Beta
who founded new york university?	nu alpha phi	-0.18318847818847883	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Nu Alpha Phi, r0.namespace: freebase, r0.arg2: University at Albany, The State University of New York, r0.rel: Founding school) => Nu Alpha Phi
who founded new york university?	millard fillmore	-0.18318847818847883	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Millard Fillmore, r0.namespace: freebase, r0.arg2: University at Buffalo, The State University of New York, r0.rel: Organizations founded) => Millard Fillmore
who founded new york university?	lambda alpha upsilon	-0.18318847818847883	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Lambda Alpha Upsilon, r0.namespace: freebase, r0.arg2: University at Buffalo, The State University of New York, r0.rel: Founding school) => Lambda Alpha Upsilon
who founded new york university?	nelson rockefeller	-0.18940133940134007	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Nelson Rockefeller, r0.namespace: freebase, r0.arg2: State University of New York at Purchase, r0.rel: Organizations founded) => Nelson Rockefeller
who founded new york university?	psi phi delta	-0.18940133940134007	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Psi Phi Delta, r0.namespace: freebase, r0.arg2: State University of New York at Potsdam, r0.rel: Founding school) => Psi Phi Delta
who founded new york university?	edward austin sheldon	-0.18940133940134007	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Edward Austin Sheldon, r0.namespace: freebase, r0.arg2: State University of New York at Oswego, r0.rel: Organizations founded) => Edward Austin Sheldon
who founded new york university?	delphic fraternity	-0.18940133940134007	who founded new york university? => $x: ($x, founded, new york university) => $x: ($x, founded, new york university) => (r0.arg1: Delphic Fraternity, r0.namespace: freebase, r0.arg2: State University of New York at Geneseo, r0.rel: Founding school) => Delphic Fraternity
who founded the afl?	center	1.392039904539904	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: The center, r0.namespace: reverb, r0.arg2: the AFL-CIO, r0.rel: was founded by) => The center
who founded the afl?	samuel gompers	1.2988469863469847	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: Samuel Gompers, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: founded) => Samuel Gompers
who founded the afl?	kemp	0.5602217227217221	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: Kemp, r0.namespace: reverb, r0.arg2: the AFL Players Association, r0.rel: co-founded) => Kemp
who founded the afl?	lamar hunt	0.5019761488511475	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: Lamar Hunt not, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: only founded) => Lamar Hunt not
who founded the afl?	person	0.46702880452880274	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: the person, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: founded) => the person
who founded the afl?	owners	0.46702880452880274	who founded the afl? => $x: ($x, founded, the afl) => $x: ($x, founded, the afl) => (r0.arg1: the owners, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: founded) => the owners
who founded the kkk?	slavery	1.2988469863469847	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: Slavery, r0.namespace: reverb, r0.arg2: the KKK, r0.rel: founded) => Slavery
who founded the kkk?	democrats	1.2988469863469847	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: Democrats, r0.namespace: reverb, r0.arg2: the KKK, r0.rel: founded) => Democrats; who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: Democrats, r0.namespace: openie4, r0.arg2: the KKK, r0.rel: founded) => Democrats; who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: the democrats, r0.namespace: reverb, r0.arg2: the KKK., r0.rel: founded) => the democrats
who founded the kkk?	poll taxes	1.2988469863469847	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: poll taxes, r0.namespace: reverb, r0.arg2: the KKK, r0.rel: founded) => poll taxes
who founded the kkk?	confederates	0.5369234931734923	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: the Confederates, r0.namespace: reverb, r0.arg2: the KKK., r0.rel: founded) => the Confederates
who founded the kkk?	33rd degree	0.5369234931734923	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: the 33rd degree, r0.namespace: reverb, r0.arg2: the KKK., r0.rel: founded) => the 33rd degree
who founded the kkk?	guy	0.46702880452880274	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: the guy, r0.namespace: reverb, r0.arg2: the KKK, r0.rel: founded) => the guy
who founded the kkk?	political party	0.46702880452880274	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: a political party, r0.namespace: reverb, r0.arg2: the KKK, r0.rel: founded) => a political party
who founded the kkk?	party	0.21248334998334817	who founded the kkk? => $x: ($x, founded, the kkk) => $x: ($x, founded, the kkk) => (r0.arg1: the party, r0.namespace: openie4, r0.arg2: the KKK, r0.rel: founded) => the party
who has played lex luthor?	robert downey jr	1.3268048618048605	who has played lex luthor? => $x: ($x, has, played lex luthor) => $x: ($x, has, played lex luthor) => (r0.arg1: Robert Downey Jr, r0.namespace: reverb, r0.arg2: Played Lex Luthor, r0.rel: Would Have) => Robert Downey Jr
who has played lex luthor?	spacey	0.5269385376528224	who has played lex luthor? => $x: ($x, has, played lex luthor) => $x: ($x, has, played lex luthor) => (r0.arg1: Spacey, r0.namespace: reverb, r0.arg2: playing Lex Luthor, r0.rel: would have turned down) => Spacey
who has pudge rodriguez played for?	rangers	0.49498667998667856	who has pudge rodriguez played for? => $x: (pudge rodriguez, played for, $x) => $x: (pudge rodriguez, played for, $x) => (r0.arg1: Pudge Rodriguez, r0.namespace: reverb, r0.arg2: the Rangers, r0.rel: was playing for) => the Rangers
who has ray allen dated?	1957-09-29	-0.967313813637343	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: scheduled: George Burns & Gracie Allen; Johnnie Ray; Ida Lupino & Howard Duff, r0.namespace: freebase, r0.arg2: 1957-09-29, r0.rel: Original air date) => 1957-09-29
who has ray allen dated?	1964	-0.978153096903097	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Trent's case book [comprising] Trent's last case, Trent's own case, with H. Warner Allen [and] Trent intervenes. With an introd. by Ben Ray Redman, r0.namespace: freebase, r0.arg2: 1964, r0.rel: Publication date) => 1964
who has ray allen dated?	2005-03-07	-0.9805969671354289	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Joan Allen; Sylvester Stallone, Sugar Ray Leonard, James Atlas, r0.namespace: freebase, r0.arg2: 2005-03-07, r0.rel: Original air date) => 2005-03-07
who has ray allen dated?	2008-06-18	-0.9805969671354289	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Kevin Garnett & Ray Allen, Jane Krakowski, Martha Wainwright, r0.namespace: freebase, r0.arg2: 2008-06-18, r0.rel: Original air date) => 2008-06-18
who has ray allen dated?	2008-02-14	-0.9870487845487848	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Martin Short, Ray Allen, The Kooks, r0.namespace: freebase, r0.arg2: 2008-02-14, r0.rel: Original air date) => 2008-02-14
who has ray allen dated?	1922-09-18	-1.0056873681873686	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Ray Steadman-Allen, r0.namespace: freebase, r0.arg2: 1922-09-18, r0.rel: Date of birth) => 1922-09-18
who has ray allen dated?	1903-09-28	-1.0289855977355986	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Ray Allen Billington, r0.namespace: freebase, r0.arg2: 1903-09-28, r0.rel: Date of birth) => 1903-09-28
who has ray allen dated?	1920-07-05	-1.0289855977355986	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Ray R. Allen, r0.namespace: freebase, r0.arg2: 1920-07-05, r0.rel: Date of birth) => 1920-07-05
who has ray allen dated?	1930-01-16	-1.0289855977355986	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Clarence Ray Allen, r0.namespace: freebase, r0.arg2: 1930-01-16, r0.rel: Date of birth) => 1930-01-16
who has ray allen dated?	2006-01-17	-1.0289855977355986	who has ray allen dated? => $x: (ray allen, dated, $x) => $x: (ray allen, dated, $x) => (r0.arg1: Clarence Ray Allen, r0.namespace: freebase, r0.arg2: 2006-01-17, r0.rel: Date of death) => 2006-01-17
who influenced samuel taylor coleridge?	william wordsworth	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: William Wordsworth, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => William Wordsworth
who influenced samuel taylor coleridge?	mary shelley	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Mary Shelley, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Mary Shelley
who influenced samuel taylor coleridge?	david alexander	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: David Alexander, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => David Alexander
who influenced samuel taylor coleridge?	ralph waldo emerson	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Ralph Waldo Emerson, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Ralph Waldo Emerson
who influenced samuel taylor coleridge?	robert southey	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Robert Southey, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Robert Southey
who influenced samuel taylor coleridge?	ben okri	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Ben Okri, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Ben Okri
who influenced samuel taylor coleridge?	sheridan le fanu	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Sheridan Le Fanu, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Sheridan Le Fanu
who influenced samuel taylor coleridge?	hall caine	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Hall Caine, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Hall Caine
who influenced samuel taylor coleridge?	theodore parker	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Theodore Parker, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Theodore Parker
who influenced samuel taylor coleridge?	martin meenan	-0.23910422910423046	who influenced samuel taylor coleridge? => $x: ($x, influenced, samuel taylor coleridge) => $x: ($x, influenced, samuel taylor coleridge) => (r0.arg1: Martin Meenan, r0.namespace: freebase, r0.arg2: Samuel Taylor Coleridge, r0.rel: Influenced By) => Martin Meenan
who inspired obama?	color	1.4211626914751911	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: color, r0.namespace: reverb, r0.arg2: Barack Obama?s paternal grandparents, r0.rel: was inspired by) => color
who inspired obama?	family members	1.4211626914751911	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: family members, r0.namespace: reverb, r0.arg2: Mrs. Obama?s address, r0.rel: will be inspired by) => family members
who inspired obama?	jesse dylan	1.4211626914751911	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: Jesse Dylan, r0.namespace: reverb, r0.arg2: Obama?s New Hampshire speech, r0.rel: got inspired by) => Jesse Dylan
who inspired obama?	songwriters	1.392039904539904	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: songwriters, r0.namespace: reverb, r0.arg2: Senator Barack Obama, r0.rel: is being inspired by) => songwriters
who inspired obama?	play	1.392039904539904	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: the play, r0.namespace: reverb, r0.arg2: Barack Obama, r0.rel: has been inspired from) => the play
who inspired obama?	fairey	1.392039904539904	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: Fairey, r0.namespace: reverb, r0.arg2: Barack Obama, r0.rel: is as inspired by) => Fairey
who inspired obama?	event	1.382720612720612	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: The event, r0.namespace: reverb, r0.arg2: President Obama, r0.rel: was inspired by) => The event
who inspired obama?	nancy pelosi	1.382720612720612	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: Nancy Pelosi, r0.namespace: reverb, r0.arg2: President Obama, r0.rel: was inspired by) => Nancy Pelosi
who inspired obama?	mccain	1.382720612720612	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: McCain, r0.namespace: reverb, r0.arg2: Clinton , Obama, r0.rel: has inspired) => McCain
who inspired obama?	hate speech	1.2988469863469847	who inspired obama? => $x: ($x, inspired, obama) => $x: ($x, inspired, obama) => (r0.arg1: hate speech, r0.namespace: reverb, r0.arg2: obama, r0.rel: inspire) => hate speech
who is kevin jonas married to?	danielle deleasa	0.5446895696895689	who is kevin jonas married to? => $x: (kevin jonas, is married to, $x) => $x: (kevin jonas, is married to, $x) => (r0.arg1: December 21 , 2009 Kevin Jonas, r0.namespace: reverb, r0.arg2: Danielle Deleasa, r0.rel: was married to) => Danielle Deleasa; who is kevin jonas married to? => $x: (kevin jonas, married to, $x) => $x: (kevin jonas, married to, $x) => (r0.arg1: December 21 , 2009 Kevin Jonas, r0.namespace: reverb, r0.arg2: Danielle Deleasa, r0.rel: was married to) => Danielle Deleasa
who is kevin jonas married to?	danllie	0.2590798090798079	who is kevin jonas married to? => $x: (kevin jonas, is married to, $x) => $x: (kevin jonas, is married to, $x) => (r0.arg1: kevin jonas, r0.namespace: openie4, r0.arg2: danllie, r0.rel: is getting married to) => danllie; who is kevin jonas married to? => $x: (kevin jonas, married to, $x) => $x: (kevin jonas, married to, $x) => (r0.arg1: kevin jonas, r0.namespace: openie4, r0.arg2: danllie, r0.rel: is getting married to) => danllie
who is louisiana state senator?	attendance	0.5269385376528224	who is louisiana state senator? => $x: ($x, is, louisiana state senator) => $x: ($x, is, louisiana state senator) => (r0.arg1: attendance, r0.namespace: reverb, r0.arg2: Louisiana State Senator Mary Landrieu, r0.rel: will be) => attendance
who is louisiana state senator?	barham	0.5136252636252624	who is louisiana state senator? => $x: ($x, is, louisiana state senator) => $x: ($x, is, louisiana state senator) => (r0.arg1: Barham, r0.namespace: reverb, r0.arg2: a former Louisiana State Senator, r0.rel: is) => Barham
who is president of israel?	gold	1.3862153471528464	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Gold, r0.namespace: reverb, r0.arg2: Israel?s Jerusalem Center, r0.rel: is currently president of) => Gold; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Gold, r0.namespace: reverb, r0.arg2: Israel?s Jerusalem Center, r0.rel: is currently president of) => Gold
who is president of israel?	schiller	1.3765077515077508	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Schiller, r0.namespace: reverb, r0.arg2: Temple Beth Israel, r0.rel: also was the first president of) => Schiller; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Schiller, r0.namespace: reverb, r0.arg2: Temple Beth Israel, r0.rel: also was the first president of) => Schiller
who is president of israel?	chaim weizmann	1.368741674991674	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was the first president of) => Chaim Weizmann; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was to become the first President of) => Chaim Weizmann; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected 1st president of) => Chaim Weizmann; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was the first president of) => Chaim Weizmann; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was to become the first President of) => Chaim Weizmann; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Weizmann, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected 1st president of) => Chaim Weizmann
who is president of israel?	head	1.3587567194710042	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: the head, r0.namespace: openie4, r0.arg2: Israel, r0.rel: is The president of) => the head; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: head, r0.namespace: reverb, r0.arg2: Israel, r0.rel: later was the first President of) => head; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: the head, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was appointed the first president of) => the head; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: the head, r0.namespace: openie4, r0.arg2: Israel, r0.rel: is The president of) => the head; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: head, r0.namespace: reverb, r0.arg2: Israel, r0.rel: later was the first President of) => head; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: the head, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was appointed the first president of) => the head
who is president of israel?	shimon peres	1.3587567194710042	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is the president of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: may be the President of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is to be the president of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected the ninth President of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is the president of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: may be the President of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is to be the president of) => Shimon Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Shimon Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected the ninth President of) => Shimon Peres
who is president of israel?	chaim herzog	1.3268048618048605	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Herzog, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected president of) => Chaim Herzog; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Chaim Herzog, r0.namespace: reverb, r0.arg2: Israel, r0.rel: was elected president of) => Chaim Herzog
who is president of israel?	peres	1.3268048618048605	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Peres, r0.namespace: openie4, r0.arg2: Israel, r0.rel: is the President of) => Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is the President of) => Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Peres, r0.namespace: openie4, r0.arg2: Israel, r0.rel: is the President of) => Peres; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Peres, r0.namespace: reverb, r0.arg2: Israel, r0.rel: is the President of) => Peres
who is president of israel?	paul	0.5602217227217221	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Paul, r0.namespace: reverb, r0.arg2: Beth Israel Deaconess Medical Center, r0.rel: is President/CEO of) => Paul; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Paul, r0.namespace: reverb, r0.arg2: Beth Israel Deaconess Medical Center, r0.rel: is President/CEO of) => Paul
who is president of israel?	rick	0.5469084486941622	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Rick, r0.namespace: reverb, r0.arg2: Beth Israel Synagogue, r0.rel: is past-president of) => Rick; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Rick, r0.namespace: reverb, r0.arg2: Beth Israel Synagogue, r0.rel: is past-president of) => Rick
who is president of israel?	pinkas	0.5469084486941622	who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Pinkas, r0.namespace: reverb, r0.arg2: the US-Israel Institute, r0.rel: is president of) => Pinkas; who is president of israel? => $x: ($x, is president of, israel) => $x: ($x, is president of, israel) => (r0.arg1: Pinkas, r0.namespace: reverb, r0.arg2: the US-Israel Institute, r0.rel: is president of) => Pinkas
who is ruling libya?	country	0.566878359735502	who is ruling libya? => $x: ($x, is, ruling libya) => $x: ($x, is, ruling libya) => (r0.arg1: the country, r0.namespace: reverb, r0.arg2: Libya?s ruling NTC, r0.rel: was condemned by) => the country
who is sir james dyson?	great example	0.46702880452880274	who is sir james dyson? => $x: ($x, is, sir james dyson) => $x: ($x, is, sir james dyson) => (r0.arg1: A great example, r0.namespace: reverb, r0.arg2: Sir James Dyson, r0.rel: is) => A great example
who is the texas state senator?	zaffirini	0.5069686266114825	who is the texas state senator? => $x: ($x, is, the texas state senator) => $x: ($x, is, the texas state senator) => (r0.arg1: Zaffirini, r0.namespace: reverb, r0.arg2: the second highest-ranking Texas state senator, r0.rel: is) => Zaffirini
who is the texas state senator?	brian birdwell	0.5069686266114825	who is the texas state senator? => $x: ($x, is, the texas state senator) => $x: ($x, is, the texas state senator) => (r0.arg1: Brian Birdwell, r0.namespace: reverb, r0.arg2: the most conservative Texas state senator, r0.rel: is) => Brian Birdwell
who is the voice of kitt?	april curtis william daniels	0.5069686266114825	who is the voice of kitt? => $x: ($x, is the voice of, kitt) => $x: ($x, is the voice of, kitt) => (r0.arg1: April Curtis William Daniels, r0.namespace: reverb, r0.arg2: Kitt WEB LINKS, r0.rel: is the voice of) => April Curtis William Daniels; who is the voice of kitt? => $x: ($x, is the voice of, kitt) => $x: ($x, is the voice of, kitt) => (r0.arg1: April Curtis William Daniels, r0.namespace: reverb, r0.arg2: Kitt WEB LINKS, r0.rel: is the voice of) => April Curtis William Daniels
who is thor heyerdahl?	ship	1.3547627372627362	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: The ship, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: was captained by) => The ship
who is thor heyerdahl?	hindu temples	1.3547627372627362	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: Hindu temples, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: were excavated by) => Hindu temples
who is thor heyerdahl?	deep waters	0.571870837495837	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: Deep Waters, r0.namespace: reverb, r0.arg2: Thor Heyerdahl?s 1947 expedition, r0.rel: was inspired by) => Deep Waters
who is thor heyerdahl?	research projects	0.5602217227217221	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: research and projects, r0.namespace: reverb, r0.arg2: Thor Heyerdahl?s, r0.rel: is connected to) => research and projects
who is thor heyerdahl?	guimar	0.5469084486941622	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: Guimar, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: were first earnestly studied by) => Guimar; who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: Guimar, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: were first seriously studied by) => Guimar
who is thor heyerdahl?	film	0.5369234931734923	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: The film, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: was the catalyst behind) => The film
who is thor heyerdahl?	question	0.5369234931734923	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: question, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: was also posed by) => question
who is thor heyerdahl?	expedition	0.5369234931734923	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: The expedition, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: was headed up by) => The expedition
who is thor heyerdahl?	heyerdahl	0.5369234931734923	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: The Heyerdahl, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: is probably named for) => The Heyerdahl
who is thor heyerdahl?	ahu ature huki	0.5229445554445544	who is thor heyerdahl? => $x: ($x, is, thor heyerdahl) => $x: ($x, is, thor heyerdahl) => (r0.arg1: Ahu Ature Huki, r0.namespace: reverb, r0.arg2: Thor Heyerdahl, r0.rel: was erected by) => Ahu Ature Huki
who made the laws in canada?	supreme court	0.46702880452880274	who made the laws in canada? => $x: ($x, made the laws in, canada) => $x: ($x, made the laws in, canada) => (r0.arg1: the Supreme Court, r0.namespace: reverb, r0.arg2: Canada, r0.rel: make the laws in) => the Supreme Court; who made the laws in canada? => $x: ($x, made the laws in, canada) => $x: ($x, made the laws in, canada) => (r0.arg1: the Supreme Court, r0.namespace: reverb, r0.arg2: Canada, r0.rel: make the laws in) => the Supreme Court
who played barbara gordon batgirl?	yvonne craig	1.382720612720612	who played barbara gordon batgirl? => $x: ($x, played, barbara gordon batgirl) => $x: ($x, played, barbara gordon batgirl) => (r0.arg1: Yvonne Craig, r0.namespace: reverb, r0.arg2: Batgirl/Barbara Gordon, r0.rel: played) => Yvonne Craig
who played jeannie?	kristen bell	1.382720612720612	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Kristen Bell, r0.namespace: reverb, r0.arg2: Jeannie Van Der Hooven, r0.rel: plays) => Kristen Bell
who played jeannie?	butch	1.3454434454434443	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Butch, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: played with) => Butch
who played jeannie?	barbara eden	1.2988469863469847	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Barbara Eden, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: played) => Barbara Eden
who played jeannie?	actress	1.2988469863469847	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: the actress, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: played) => the actress; who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: the actress, r0.namespace: openie4, r0.arg2: Jeannie, r0.rel: played) => the actress
who played jeannie?	lisa	0.571870837495837	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Lisa, r0.namespace: reverb, r0.arg2: the Jeannie Tanner Jazz Quartet, r0.rel: also plays with) => Lisa
who played jeannie?	bell	0.5602217227217221	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Bell, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: plays) => Bell; who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Bell, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: will play) => Bell; who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Bell, r0.namespace: reverb, r0.arg2: Jeannie Van Der Hooven, r0.rel: plays) => Bell; who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Bell, r0.namespace: reverb, r0.arg2: Jeannie Van Der Hooven, r0.rel: will play) => Bell
who played jeannie?	fairies , titania ,	0.5509024309024302	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: the Fairies , Titania ,, r0.namespace: reverb, r0.arg2: Jeannie Naughton, r0.rel: played brilliantly by) => the Fairies , Titania ,
who played jeannie?	dash	0.5369234931734923	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Dash, r0.namespace: reverb, r0.arg2: Jeannie, r0.rel: was playing with) => Dash
who played jeannie?	munro	0.5136252636252624	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Munro, r0.namespace: reverb, r0.arg2: Jeannie more, r0.rel: plays) => Munro
who played jeannie?	aniston	0.5136252636252624	who played jeannie? => $x: ($x, played, jeannie) => $x: ($x, played, jeannie) => (r0.arg1: Aniston, r0.namespace: reverb, r0.arg2: Jeannie Bueller, r0.rel: played) => Aniston
who played kirk?	chris pine	1.3986965415536838	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: openie4, r0.arg2: Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: particularly played) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: plays the younger version of) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: did a great job of playing) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: openie4, r0.arg2: James Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: openie4, r0.arg2: Captain Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: James Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: Captain Kirk, r0.rel: plays) => Chris Pine; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Chris Pine, r0.namespace: reverb, r0.arg2: a decent James Kirk, r0.rel: played) => Chris Pine
who played kirk?	william shatner	1.382720612720612	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: William Shatner, r0.namespace: openie4, r0.arg2: Kirk, r0.rel: playing) => William Shatner; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: William Shatner, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: did n?t play) => William Shatner; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: William Shatner, r0.namespace: openie4, r0.arg2: Captain Kirk, r0.rel: played) => William Shatner; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: William Shatner, r0.namespace: reverb, r0.arg2: Captain Kirk, r0.rel: played) => William Shatner; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: William Shatner, r0.namespace: reverb, r0.arg2: Captain James T Kirk, r0.rel: played) => William Shatner
who played kirk?	matt damon	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Matt Damon, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: is playing) => Matt Damon; who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: A Matt Damon, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: wanna be playing) => A Matt Damon
who played kirk?	alan thicke	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Alan Thicke, r0.namespace: reverb, r0.arg2: Kirk Cameron, r0.rel: played) => Alan Thicke
who played kirk?	ed westwick	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Ed Westwick, r0.namespace: reverb, r0.arg2: Captain Kirk, r0.rel: plays) => Ed Westwick
who played kirk?	robert downey jr.	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Robert Downey Jr., r0.namespace: reverb, r0.arg2: Kirk Lazarus, r0.rel: plays) => Robert Downey Jr.
who played kirk?	spock	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Spock, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: played on) => Spock
who played kirk?	robert downey jr	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Robert Downey Jr, r0.namespace: reverb, r0.arg2: Kirk Lazarus, r0.rel: plays) => Robert Downey Jr
who played kirk?	fairies	1.3454434454434443	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: fairies, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: played for) => fairies
who played kirk?	jennifer morrison	1.2988469863469847	who played kirk? => $x: ($x, played, kirk) => $x: ($x, played, kirk) => (r0.arg1: Jennifer Morrison, r0.namespace: reverb, r0.arg2: Kirk, r0.rel: played) => Jennifer Morrison
who played victoria barkley?	barbara stanwyck	1.3337943306693294	who played victoria barkley? => $x: ($x, played, victoria barkley) => $x: ($x, played, victoria barkley) => (r0.arg1: Barbara Stanwyck, r0.namespace: reverb, r0.arg2: Victoria Barkley ], r0.rel: played) => Barbara Stanwyck
who played victoria barkley?	stanwyck	0.46702880452880274	who played victoria barkley? => $x: ($x, played, victoria barkley) => $x: ($x, played, victoria barkley) => (r0.arg1: Stanwyck, r0.namespace: reverb, r0.arg2: Victoria Barkley, r0.rel: played) => Stanwyck
who plays billy elliot?	jamie bell	1.2988469863469847	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: Jamie Bell, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played) => Jamie Bell
who plays billy elliot?	boys	1.2988469863469847	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: the boys, r0.namespace: openie4, r0.arg2: Billy Elliot, r0.rel: playing) => the boys; who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: the boys, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played) => the boys
who plays billy elliot?	actors	0.5369234931734923	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: the actors, r0.namespace: reverb, r0.arg2: Billy Elliot for youngest winner, r0.rel: played) => the actors
who plays billy elliot?	kiril kulish	0.5369234931734923	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: Kiril Kulish, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played the lead in) => Kiril Kulish
who plays billy elliot?	three boys	0.5369234931734923	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: Three boys, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played the part of) => Three boys
who plays billy elliot?	brad wilson	0.5369234931734923	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: Brad Wilson, r0.namespace: reverb, r0.arg2: the Billy Elliots, r0.rel: played one of) => Brad Wilson
who plays billy elliot?	three actors	0.5019761488511475	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: the three actors, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: play Billy in) => the three actors
who plays billy elliot?	four children	0.46702880452880274	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: four children, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: play) => four children
who plays billy elliot?	actor	0.46702880452880274	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: the actor, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played) => the actor
who plays billy elliot?	guy	0.46702880452880274	who plays billy elliot? => $x: ($x, plays, billy elliot) => $x: ($x, plays, billy elliot) => (r0.arg1: The guy, r0.namespace: reverb, r0.arg2: Billy Elliot, r0.rel: played) => The guy
who plays edward scissorhands?	depp	1.1241811759668894	who plays edward scissorhands? => $x: ($x, plays, edward scissorhands) => $x: ($x, plays, edward scissorhands) => (r0.arg1: Depp, r0.namespace: openie4, r0.arg2: Edward Scissorhands, r0.rel: played the title role in) => Depp
who plays harley quinn?	tara strong	1.3337943306693294	who plays harley quinn? => $x: ($x, plays, harley quinn) => $x: ($x, plays, harley quinn) => (r0.arg1: Tara Strong, r0.namespace: reverb, r0.arg2: Harley Quinn, r0.rel: is playing) => Tara Strong
who plays harley quinn?	bell	0.5019761488511475	who plays harley quinn? => $x: ($x, plays, harley quinn) => $x: ($x, plays, harley quinn) => (r0.arg1: Bell, r0.namespace: reverb, r0.arg2: Harley Quinn, r0.rel: must play) => Bell
who plays harley quinn?	30	0.46702880452880274	who plays harley quinn? => $x: ($x, plays, harley quinn) => $x: ($x, plays, harley quinn) => (r0.arg1: 30, r0.namespace: reverb, r0.arg2: harley quinn, r0.rel: plays) => 30
who plays john connor?	ironside	1.392039904539904	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Ironside, r0.namespace: reverb, r0.arg2: the pre-John Connor leader, r0.rel: plays) => Ironside
who plays john connor?	christian bale	1.3862153471528464	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: plays) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: plays) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: now plays) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: to play) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: is playing) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: is playing) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: will play) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: the adult John Connor, r0.rel: plays) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: signed up to play) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: has signed up to play) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: an adult John Connor, r0.rel: is playing) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: alpha male Resistance leader John Connor, r0.rel: plays) => Christian Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Christian Bale, r0.namespace: reverb, r0.arg2: a grown-up John Connor, r0.rel: had agreed to play) => Christian Bale
who plays john connor?	nick stahl	1.368741674991674	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Nick Stahl, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: plays) => Nick Stahl; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Nick Stahl, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: plays) => Nick Stahl; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Nick Stahl, r0.namespace: reverb, r0.arg2: the young adult John Connor, r0.rel: plays) => Nick Stahl
who plays john connor?	edward furlong	1.1002172827172816	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Edward Furlong, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: played) => Edward Furlong; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Edward Furlong, r0.namespace: openie4, r0.arg2: the young John Connor, r0.rel: plays) => Edward Furlong
who plays john connor?	actor	1.04430153180153	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: the actor, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: played) => the actor
who plays john connor?	leven	0.5602217227217221	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Leven, r0.namespace: reverb, r0.arg2: John Connor?s friend Riley, r0.rel: plays) => Leven
who plays john connor?	dekker	0.5602217227217221	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Dekker, r0.namespace: reverb, r0.arg2: the young John Connor, r0.rel: is best know for playing) => Dekker
who plays john connor?	bale	0.5543971653346647	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: plays) => Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: plays) => Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: will play) => Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: will play) => Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: reverb, r0.arg2: hero John Connor, r0.rel: also plays) => Bale; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Bale, r0.namespace: reverb, r0.arg2: men John Connor ?, r0.rel: plays future leader of) => Bale
who plays john connor?	thomas dekker	0.5369234931734923	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Thomas Dekker, r0.namespace: openie4, r0.arg2: John Connor, r0.rel: played) => Thomas Dekker; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Thomas Dekker, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: played) => Thomas Dekker; who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Thomas Dekker, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: plays the role of) => Thomas Dekker
who plays john connor?	thomas	0.46702880452880274	who plays john connor? => $x: ($x, plays, john connor) => $x: ($x, plays, john connor) => (r0.arg1: Thomas, r0.namespace: reverb, r0.arg2: John Connor, r0.rel: plays) => Thomas
who plays kenneth?	jack mcbrayer	1.4036890193140188	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Jack McBrayer, r0.namespace: reverb, r0.arg2: Kenneth, r0.rel: plays) => Jack McBrayer; who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Jack McBrayer, r0.namespace: openie4, r0.arg2: Kenneth, r0.rel: plays) => Jack McBrayer; who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Jack McBrayer, r0.namespace: reverb, r0.arg2: NBC page Kenneth Parcell, r0.rel: plays) => Jack McBrayer; who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Jack McBrayer, r0.namespace: reverb, r0.arg2: NBC page Kenneth Parcell, r0.rel: plays the role of) => Jack McBrayer
who plays kenneth?	head	1.382720612720612	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: The head, r0.namespace: reverb, r0.arg2: Kenneth Branagh, r0.rel: is played by) => The head
who plays kenneth?	delhi	1.368741674991674	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Delhi, r0.namespace: reverb, r0.arg2: Kenneth Baggaley, r0.rel: played using) => Delhi
who plays kenneth?	george washington	1.368741674991674	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: George Washington, r0.namespace: reverb, r0.arg2: Kenneth Hammontree, r0.rel: played by) => George Washington
who plays kenneth?	gilderoy lockhart	1.1141962204462195	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Gilderoy Lockhart, r0.namespace: openie4, r0.arg2: Kenneth Branagh, r0.rel: played by) => Gilderoy Lockhart
who plays kenneth?	laurence olivier	1.1141962204462195	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Laurence Olivier, r0.namespace: openie4, r0.arg2: Kenneth Branagh, r0.rel: played by) => Laurence Olivier
who plays kenneth?	actor	1.04430153180153	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: the actor, r0.namespace: reverb, r0.arg2: Kenneth, r0.rel: plays) => the actor; who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: the actor, r0.namespace: openie4, r0.arg2: Kenneth, r0.rel: plays) => the actor
who plays kenneth?	two	0.5788603063603059	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: The two, r0.namespace: reverb, r0.arg2: both Roy and Kenneth, r0.rel: have played twice this year with) => The two
who plays kenneth?	games	0.5757538757538754	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Games, r0.namespace: reverb, r0.arg2: the Kenneth P. Lavalle Stadium, r0.rel: will be played at) => Games
who plays kenneth?	itzin	0.566878359735502	who plays kenneth? => $x: ($x, plays, kenneth) => $x: ($x, plays, kenneth) => (r0.arg1: Itzin, r0.namespace: reverb, r0.arg2: Kenneth Lay, r0.rel: will play the role of) => Itzin
who plays lex luthor on smallville?	guy	0.21248334998334817	who plays lex luthor on smallville? => $x: ($x, plays lex luthor on, smallville) => $x: ($x, plays lex luthor on, smallville) => (r0.arg1: The guy, r0.namespace: openie4, r0.arg2: Smallville, r0.rel: played Lex Luthor on) => The guy; who plays lex luthor on smallville? => $x: ($x, plays lex luthor on, smallville) => $x: ($x, plays lex luthor on, smallville) => (r0.arg1: The guy, r0.namespace: openie4, r0.arg2: Smallville, r0.rel: played Lex Luthor on) => The guy
who plays marshall eriksen?	jason segel	1.2988469863469847	who plays marshall eriksen? => $x: ($x, plays, marshall eriksen) => $x: ($x, plays, marshall eriksen) => (r0.arg1: Jason Segel, r0.namespace: reverb, r0.arg2: Marshall Eriksen, r0.rel: plays) => Jason Segel
who plays marshall eriksen?	segel	0.46702880452880274	who plays marshall eriksen? => $x: ($x, plays, marshall eriksen) => $x: ($x, plays, marshall eriksen) => (r0.arg1: Segel, r0.namespace: reverb, r0.arg2: Marshall Eriksen, r0.rel: plays) => Segel
who plays spike spiegel?	stephen dorff	1.368741674991674	who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Stephen Dorff, r0.namespace: reverb, r0.arg2: Spike Spiegel, r0.rel: was set to play) => Stephen Dorff
who plays spike spiegel?	keanu reeves	1.368741674991674	who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Keanu Reeves, r0.namespace: openie4, r0.arg2: Spike Spiegel, r0.rel: to play) => Keanu Reeves; who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Keanu Reeves, r0.namespace: reverb, r0.arg2: Spike Spiegel, r0.rel: will play) => Keanu Reeves; who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Keanu Reeves, r0.namespace: reverb, r0.arg2: protagonist Spike Spiegel, r0.rel: attached to play) => Keanu Reeves
who plays spike spiegel?	reeves	0.5229445554445544	who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Reeves, r0.namespace: reverb, r0.arg2: Spike Spiegel, r0.rel: would play) => Reeves; who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: Reeves, r0.namespace: reverb, r0.arg2: Spike Spiegel, r0.rel: hopes to play) => Reeves
who plays spike spiegel?	action film ? keanu reeves	0.5019761488511475	who plays spike spiegel? => $x: ($x, plays, spike spiegel) => $x: ($x, plays, spike spiegel) => (r0.arg1: action film ? Keanu Reeves, r0.namespace: reverb, r0.arg2: Spike Spiegel, r0.rel: will play) => action film ? Keanu Reeves
who plays voldemort?	ralph fiennes	1.392039904539904	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: reverb, r0.arg2: Voldemort, r0.rel: played) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: openie4, r0.arg2: Voldemort, r0.rel: played) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: played) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: openie4, r0.arg2: Lord Voldemort, r0.rel: plays) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: plays) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: plays the role of) => Ralph Fiennes; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Ralph Fiennes, r0.namespace: reverb, r0.arg2: the evil Lord Voldemort, r0.rel: hauntingly played) => Ralph Fiennes
who plays voldemort?	dumbledore	1.382720612720612	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Dumbledore, r0.namespace: reverb, r0.arg2: Voldemort, r0.rel: plays a trick on) => Dumbledore
who plays voldemort?	hero fiennes-tiffin	1.382720612720612	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Hero Fiennes-Tiffin, r0.namespace: reverb, r0.arg2: an 11 year-old Voldemort, r0.rel: played) => Hero Fiennes-Tiffin
who plays voldemort?	james carville	1.368741674991674	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: James Carville, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: could play) => James Carville
who plays voldemort?	christian coulson	1.368741674991674	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Christian Coulson, r0.namespace: reverb, r0.arg2: a young Voldemort, r0.rel: played) => Christian Coulson
who plays voldemort?	mr. potter	0.5912860287860285	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Mr. Potter, r0.namespace: reverb, r0.arg2: Voldemort?s demise, r0.rel: is to play a role in) => Mr. Potter
who plays voldemort?	9-year-old nephew	0.566878359735502	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: 9-year-old nephew, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: has already agreed to play) => 9-year-old nephew
who plays voldemort?	british actor	0.5509024309024302	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: the British actor, r0.namespace: reverb, r0.arg2: Lord Voldemort, r0.rel: set to play) => the British actor
who plays voldemort?	guy	0.5369234931734923	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: the guy, r0.namespace: openie4, r0.arg2: Voldemort, r0.rel: playing) => the guy; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: the guy, r0.namespace: reverb, r0.arg2: Voldemort, r0.rel: played) => the guy; who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: the guy, r0.namespace: reverb, r0.arg2: the infamous Voldemort, r0.rel: plays) => the guy
who plays voldemort?	frank dillane	0.5369234931734923	who plays voldemort? => $x: ($x, plays, voldemort) => $x: ($x, plays, voldemort) => (r0.arg1: Frank Dillane, r0.namespace: reverb, r0.arg2: 14 year-old Voldemort, r0.rel: played) => Frank Dillane
who voiced darth vader?	james earl jones	1.3862153471528464	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: James Earl Jones, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: was the voice of) => James Earl Jones; who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: James Earl Jones, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: provided the voice of) => James Earl Jones; who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: James Earl Jones, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: provided the powerful voice of) => James Earl Jones; who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: James Earl Jones, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: was only the voice for) => James Earl Jones; who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: James Earl Jones, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: will be doing the voice of) => James Earl Jones
who voiced darth vader?	tomtom	1.368741674991674	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: TomTom, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: recorded the voices of) => TomTom
who voiced darth vader?	matt sloan	0.5369234931734923	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: Matt Sloan, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: plays the voice of) => Matt Sloan
who voiced darth vader?	garmin tomtom	0.5369234931734923	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: the Garmin and TomTom, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: is the voice of) => the Garmin and TomTom
who voiced darth vader?	matt	0.5369234931734923	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: Matt, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: is the voice of) => Matt
who voiced darth vader?	tony award-winning actor	0.5369234931734923	who voiced darth vader? => $x: ($x, voiced, darth vader) => $x: ($x, voiced, darth vader) => (r0.arg1: Tony Award-winning actor, r0.namespace: reverb, r0.arg2: Darth Vader, r0.rel: voiced the roles of) => Tony Award-winning actor
who was anakin skywalker?	jaina solo~	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Jaina Solo~, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: Is the Granddaughter of) => Jaina Solo~
who was anakin skywalker?	center stage	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: center stage, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: is the battle between) => center stage
who was anakin skywalker?	republic	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: the Republic, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: was instrumental in recovering) => the Republic
who was anakin skywalker?	fans	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: fans, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: will be transformed into) => fans
who was anakin skywalker?	star wars	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Star Wars, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: is a story of) => Star Wars; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Star Wars, r0.namespace: openie4, r0.arg2: Anakin Skywalker, r0.rel: is the story of) => Star Wars
who was anakin skywalker?	movies	1.368741674991674	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: The movies, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: were the story of) => The movies; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: The movies, r0.namespace: openie4, r0.arg2: Anakin Skywalker, r0.rel: were the story of) => The movies
who was anakin skywalker?	force	1.3547627372627362	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: The force, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: was strong in) => The force
who was anakin skywalker?	darth vader	1.3547627372627362	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: openie4, r0.arg2: Anakin Skywalker, r0.rel: is) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: is) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: was once) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: returned to being) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: was once called) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: openie4, r0.arg2: Anakin Skywalker, r0.rel: to being) => Darth Vader; who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: Darth Vader, r0.namespace: openie4, r0.arg2: Anakin Skywalker, r0.rel: is actually) => Darth Vader
who was anakin skywalker?	c-3po	1.3547627372627362	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: C-3PO, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: was being constructed by) => C-3PO
who was anakin skywalker?	she?d	1.3337943306693294	who was anakin skywalker? => $x: ($x, was, anakin skywalker) => $x: ($x, was, anakin skywalker) => (r0.arg1: She?d, r0.namespace: reverb, r0.arg2: Anakin Skywalker, r0.rel: rather be) => She?d
who was demi lovato dating?	joe jonas	1.0792488761238748	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato, r0.namespace: openie4, r0.arg2: Joe Jonas, r0.rel: is dating) => Joe Jonas
who was demi lovato dating?	celebuzz.com	0.566878359735502	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato?s ?Summer Tour 2009, r0.namespace: reverb, r0.arg2: Celebuzz.com, r0.rel: dates) => Celebuzz.com
who was demi lovato dating?	2008-08-26	-0.9805969671354289	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Dance Like...Sing Like...Be Like a Pop Star with...Demi Lovato, r0.namespace: freebase, r0.arg2: 2008-08-26, r0.rel: Initial release date) => 2008-08-26
who was demi lovato dating?	2011-09-20	-0.9805969671354289	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato, Kathy Bates, Christina Applegate, r0.namespace: freebase, r0.arg2: 2011-09-20, r0.rel: Original air date) => 2011-09-20; who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Dana Carvey, Demi Lovato, Clap Your Hands Say Yeah, r0.namespace: freebase, r0.arg2: 2011-09-20, r0.rel: Original air date) => 2011-09-20
who was demi lovato dating?	2010-03-22	-0.9845071595071597	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Tom Bergeron, Demi Lovato, the All-American Rejects, r0.namespace: freebase, r0.arg2: 2010-03-22, r0.rel: Original air date) => 2010-03-22
who was demi lovato dating?	2009-07-23	-0.9845071595071597	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Kevin Nealon, Demi Lovato, Twisted Sister, r0.namespace: freebase, r0.arg2: 2009-07-23, r0.rel: Original air date) => 2009-07-23; who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Kevin Nealon, Demi Lovato, Jeff Musial, r0.namespace: freebase, r0.arg2: 2009-07-23, r0.rel: Original air date) => 2009-07-23; who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato, Miss USA 2009 Kristen Dalton, r0.namespace: freebase, r0.arg2: 2009-07-23, r0.rel: Original air date) => 2009-07-23
who was demi lovato dating?	2012-09-17	-0.9845071595071597	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Simon Cowell, Demi Lovato, Nancy & Beth, r0.namespace: freebase, r0.arg2: 2012-09-17, r0.rel: Original air date) => 2012-09-17
who was demi lovato dating?	2009-01-30	-0.9870487845487848	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato, Geraldo Rivera, Jeannine Pirro, r0.namespace: freebase, r0.arg2: 2009-01-30, r0.rel: Original air date) => 2009-01-30
who was demi lovato dating?	2010-06-03	-0.9870487845487848	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Demi Lovato, Carrot Top, Taio Cruz, r0.namespace: freebase, r0.arg2: 2010-06-03, r0.rel: Original air date) => 2010-06-03
who was demi lovato dating?	2008-07-18	-0.9870487845487848	who was demi lovato dating? => $x: (demi lovato, dating, $x) => $x: (demi lovato, dating, $x) => (r0.arg1: Tim Allen; Demi Lovato; One Republic, r0.namespace: freebase, r0.arg2: 2008-07-18, r0.rel: Original air date) => 2008-07-18
who was frida kahlo influenced by?	striking contrast	0.5136252636252624	who was frida kahlo influenced by? => $x: (frida kahlo, influenced by, $x) => $x: (frida kahlo, influenced by, $x) => (r0.arg1: Frida Kahlo, r0.namespace: reverb, r0.arg2: the striking contrast, r0.rel: influenced as well by) => the striking contrast
who was frida kahlo influenced by?	diego rivera	-0.2670621045621062	who was frida kahlo influenced by? => $x: (frida kahlo, influenced by, $x) => $x: (frida kahlo, influenced by, $x) => (r0.arg1: Frida Kahlo, r0.namespace: freebase, r0.arg2: Diego Rivera, r0.rel: Influenced By) => Diego Rivera
who was in the israeli palestinian conflict?	peace	1.3765077515077508	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: peace, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: can be achieved in) => peace; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: peace, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: can be achieved in) => peace
who was in the israeli palestinian conflict?	internet	1.3765077515077508	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: the internet, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: is a theatre in) => the internet; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: the internet, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: is a theatre in) => the internet
who was in the israeli palestinian conflict?	archaeology	1.368741674991674	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: archaeology, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: is being used in) => archaeology; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: archaeology, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: is being used in) => archaeology
who was in the israeli palestinian conflict?	christians	1.368741674991674	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: Christians, r0.namespace: reverb, r0.arg2: the Israeli/Palestinian conflict, r0.rel: be involved in) => Christians; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: Christians, r0.namespace: reverb, r0.arg2: the Israeli/Palestinian conflict, r0.rel: be involved in) => Christians
who was in the israeli palestinian conflict?	friends	1.368741674991674	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: friends, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian Conflict, r0.rel: are interested in) => friends; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: friends, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian Conflict, r0.rel: are interested in) => friends
who was in the israeli palestinian conflict?	progress	0.5446895696895689	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: no progress, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: had been made in) => no progress; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: no progress, r0.namespace: reverb, r0.arg2: the Israeli-Palestinian conflict, r0.rel: had been made in) => no progress
who was in the israeli palestinian conflict?	outlining	0.5446895696895689	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: outlining, r0.namespace: reverb, r0.arg2: the Palestinian/Israeli conflict, r0.rel: must be done in) => outlining; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: outlining, r0.namespace: reverb, r0.arg2: the Palestinian/Israeli conflict, r0.rel: must be done in) => outlining
who was in the israeli palestinian conflict?	northern sinai	0.5369234931734923	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: northern Sinai, r0.namespace: reverb, r0.arg2: the Palestinian-Israeli conflict, r0.rel: is enmeshed in) => northern Sinai; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: northern Sinai, r0.namespace: reverb, r0.arg2: the Palestinian-Israeli conflict, r0.rel: is enmeshed in) => northern Sinai
who was in the israeli palestinian conflict?	any shows	0.4869987155701426	who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: any shows, r0.namespace: reverb, r0.arg2: the Israeli Palestinian conflict, r0.rel: is happening in) => any shows; who was in the israeli palestinian conflict? => $x: ($x, was in, the israeli palestinian conflict) => $x: ($x, was in, the israeli palestinian conflict) => (r0.arg1: any shows, r0.namespace: reverb, r0.arg2: the Israeli Palestinian conflict, r0.rel: is happening in) => any shows
who was jesse james killed by?	robert ford	1.3268048618048605	who was jesse james killed by? => $x: (jesse james, was killed by, $x) => $x: (jesse james, was killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: Robert Ford, r0.rel: was killed by) => Robert Ford; who was jesse james killed by? => $x: (jesse james, killed by, $x) => $x: (jesse james, killed by, $x) => (r0.arg1: Jesse James, r0.namespace: openie4, r0.arg2: Robert Ford, r0.rel: killed by) => Robert Ford; who was jesse james killed by? => $x: (jesse james, killed by, $x) => $x: (jesse james, killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: Robert Ford, r0.rel: was killed by) => Robert Ford
who was jesse james killed by?	man	0.49498667998667856	who was jesse james killed by? => $x: (jesse james, was killed by, $x) => $x: (jesse james, was killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: a man, r0.rel: Was killed by) => a man; who was jesse james killed by? => $x: (jesse james, killed by, $x) => $x: (jesse james, killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: a man, r0.rel: Was killed by) => a man
who was jesse james killed by?	bob ford	0.49498667998667856	who was jesse james killed by? => $x: (jesse james, was killed by, $x) => $x: (jesse james, was killed by, $x) => (r0.arg1: Jesse James, r0.namespace: openie4, r0.arg2: Bob Ford, r0.rel: was killed by) => Bob Ford; who was jesse james killed by? => $x: (jesse james, was killed by, $x) => $x: (jesse james, was killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: Bob Ford, r0.rel: was killed by) => Bob Ford; who was jesse james killed by? => $x: (jesse james, killed by, $x) => $x: (jesse james, killed by, $x) => (r0.arg1: Jesse James, r0.namespace: openie4, r0.arg2: Bob Ford, r0.rel: was killed by) => Bob Ford; who was jesse james killed by? => $x: (jesse james, killed by, $x) => $x: (jesse james, killed by, $x) => (r0.arg1: Jesse James, r0.namespace: reverb, r0.arg2: Bob Ford, r0.rel: was killed by) => Bob Ford
who was kobe bryant drafted by?	charlotte hornets	0.49498667998667856	who was kobe bryant drafted by? => $x: (kobe bryant, was drafted by, $x) => $x: (kobe bryant, was drafted by, $x) => (r0.arg1: Kobe Bryant, r0.namespace: reverb, r0.arg2: the Charlotte Hornets, r0.rel: was drafted by) => the Charlotte Hornets; who was kobe bryant drafted by? => $x: (kobe bryant, drafted by, $x) => $x: (kobe bryant, drafted by, $x) => (r0.arg1: Kobe Bryant, r0.namespace: reverb, r0.arg2: the Charlotte Hornets, r0.rel: was drafted by) => the Charlotte Hornets
who was married to jane wyman?	number	0.4903270340770326	who was married to jane wyman? => $x: ($x, was married to, jane wyman) => $x: ($x, was married to, jane wyman) => (r0.arg1: a number, r0.namespace: reverb, r0.arg2: Jane Wyman, r0.rel: was married twice to) => a number; who was married to jane wyman? => $x: ($x, was married to, jane wyman) => $x: ($x, was married to, jane wyman) => (r0.arg1: a number, r0.namespace: reverb, r0.arg2: Jane Wyman, r0.rel: was married twice to) => a number
who was queen victoria's husband?	castle	0.5543971653346647	who was queen victoria's husband? => $x: ($x, was, queen victoria 's husband) => $x: ($x, was, queen victoria 's husband) => (r0.arg1: The castle, r0.namespace: reverb, r0.arg2: Queen Victoria?s husband, r0.rel: was bought by) => The castle
who was queen victoria's husband?	prince albert	0.5369234931734923	who was queen victoria's husband? => $x: ($x, was, queen victoria 's husband) => $x: ($x, was, queen victoria 's husband) => (r0.arg1: Prince Albert, r0.namespace: reverb, r0.arg2: Queen Victoria?s husband, r0.rel: was) => Prince Albert
who was queen victoria's husband?	leading light	0.5369234931734923	who was queen victoria's husband? => $x: ($x, was, queen victoria 's husband) => $x: ($x, was, queen victoria 's husband) => (r0.arg1: leading light, r0.namespace: reverb, r0.arg2: Queen Victoria?s husband, r0.rel: was) => leading light; who was queen victoria's husband? => $x: ($x, was, queen victoria 's husband) => $x: ($x, was, queen victoria 's husband) => (r0.arg1: leading light, r0.namespace: reverb, r0.arg2: Queen Victoria?s husband, r0.rel: was) => leading light
who was stephen r covey?	productivity	1.3547627372627362	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: productivity, r0.namespace: reverb, r0.arg2: Stephen R. Covey, r0.rel: is) => productivity
who was stephen r covey?	answer	0.5814019314019311	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: The answer, r0.namespace: reverb, r0.arg2: Stephen R. Covey?s, r0.rel: is YES ? look forward to) => The answer
who was stephen r covey?	outline	0.5814019314019311	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: The outline, r0.namespace: reverb, r0.arg2: Stephen R. Covey?s 7, r0.rel: below is an adaptation of) => The outline
who was stephen r covey?	tasks	0.5757538757538754	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: tasks, r0.namespace: reverb, r0.arg2: Stephen R. Covey?s ?Time Management Matrix, r0.rel: is) => tasks
who was stephen r covey?	stephen	0.5543971653346647	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: Stephen, r0.namespace: reverb, r0.arg2: Stephen R. Covey, r0.rel: is the son of) => Stephen
who was stephen r covey?	characteristics students	0.5543971653346647	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: characteristics students, r0.namespace: reverb, r0.arg2: Dr. Stephen R. Covey, r0.rel: is based on) => characteristics students
who was stephen r covey?	stephen m.r. covey	0.5543971653346647	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: Stephen M.R. Covey, r0.namespace: reverb, r0.arg2: Stephen R. Covey, r0.rel: is the son of) => Stephen M.R. Covey
who was stephen r covey?	michelle	0.5543971653346647	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: Michelle, r0.namespace: reverb, r0.arg2: Stephen M.R. Covey, r0.rel: is currently partnering with) => Michelle
who was stephen r covey?	trust organization	0.5543971653346647	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: Trust organization, r0.namespace: reverb, r0.arg2: Stephen M.R. Covey, r0.rel: is headed up by) => Trust organization
who was stephen r covey?	workshop	0.5469084486941622	who was stephen r covey? => $x: ($x, was, stephen r covey) => $x: ($x, was, stephen r covey) => (r0.arg1: The workshop, r0.namespace: reverb, r0.arg2: Stephen M.R. Covey, r0.rel: is based on) => The workshop
who was the first president of the afl?	samuel gompers	1.2988469863469847	who was the first president of the afl? => $x: ($x, was the first president of, the afl) => $x: ($x, was the first president of, the afl) => (r0.arg1: Samuel Gompers, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: was the first president of) => Samuel Gompers; who was the first president of the afl? => $x: ($x, was the first president of, the afl) => $x: ($x, was the first president of, the afl) => (r0.arg1: Samuel Gompers, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: was the first president of) => Samuel Gompers
who was the first president of the afl?	sam gompers	0.46702880452880274	who was the first president of the afl? => $x: ($x, was the first president of, the afl) => $x: ($x, was the first president of, the afl) => (r0.arg1: Sam Gompers, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: was the first President of) => Sam Gompers; who was the first president of the afl? => $x: ($x, was the first president of, the afl) => $x: ($x, was the first president of, the afl) => (r0.arg1: Sam Gompers, r0.namespace: reverb, r0.arg2: the AFL, r0.rel: was the first President of) => Sam Gompers
who was wesley snipes?	interest	1.368741674991674	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: interest, r0.namespace: reverb, r0.arg2: Mr. Wesley Snipes, r0.rel: is news about) => interest
who was wesley snipes?	vampire	1.3547627372627362	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: vampire, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: was played by) => vampire
who was wesley snipes?	st . louis native	0.5543971653346647	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: a St . Louis native, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: has been a stunt double for) => a St . Louis native
who was wesley snipes?	one celebrity	0.5543971653346647	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: one celebrity, r0.namespace: reverb, r0.arg2: Wesley Snipes country, r0.rel: is a one-way ticket to) => one celebrity
who was wesley snipes?	mr semi-dollar	0.5469084486941622	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: Mr Semi-Dollar, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: was the original replacement for) => Mr Semi-Dollar
who was wesley snipes?	superhero actor	0.5469084486941622	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: Superhero Actor, r0.namespace: reverb, r0.arg2: either Wesley Snipes, r0.rel: is currently held by) => Superhero Actor
who was wesley snipes?	wong	0.5469084486941622	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: Wong, r0.namespace: reverb, r0.arg2: direct Wesley Snipes, r0.rel: is now set to) => Wong
who was wesley snipes?	role	0.5369234931734923	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: the role, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: was taken by) => the role; who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: The role, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: was instead taken by) => The role
who was wesley snipes?	cast	0.5369234931734923	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: the cast, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: are) => the cast; who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: the cast, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: is the return of) => the cast
who was wesley snipes?	past two years	0.5369234931734923	who was wesley snipes? => $x: ($x, was, wesley snipes) => $x: ($x, was, wesley snipes) => (r0.arg1: the past two years, r0.namespace: reverb, r0.arg2: Wesley Snipes, r0.rel: are those dealing with) => the past two years
who were jesus siblings?	james	0.5912860287860285	who were jesus siblings? => $x: ($x, were, jesus siblings) => $x: ($x, were, jesus siblings) => (r0.arg1: James, r0.namespace: reverb, r0.arg2: Jesus?s half-siblings, r0.rel: was ? The oldest of) => James
who were wright brothers?	eeg	1.378726630512344	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: EEG, r0.namespace: reverb, r0.arg2: a Wright brother plane, r0.rel: is equivalent to) => EEG
who were wright brothers?	praise	1.378726630512344	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: Praise, r0.namespace: reverb, r0.arg2: Brother John Wright, r0.rel: is due also to) => Praise
who were wright brothers?	december	1.378726630512344	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: December, r0.namespace: reverb, r0.arg2: Wright Brothers ? Day, r0.rel: is recognized as) => December
who were wright brothers?	appraisers	1.378726630512344	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: Appraisers, r0.namespace: reverb, r0.arg2: the Wright Brothers, r0.rel: are much more like) => Appraisers
who were wright brothers?	madagascar	1.3547627372627362	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: Madagascar, r0.namespace: reverb, r0.arg2: the Wright Brothers, r0.rel: was like) => Madagascar
who were wright brothers?	flying squirrels	1.3547627372627362	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: Flying squirrels, r0.namespace: reverb, r0.arg2: the Wright Brothers, r0.rel: are basically) => Flying squirrels
who were wright brothers?	howard dean	1.3337943306693294	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: Howard Dean, r0.namespace: reverb, r0.arg2: the Wright brothers, r0.rel: was) => Howard Dean
who were wright brothers?	december 17	1.0792488761238748	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: December 17, r0.namespace: openie4, r0.arg2: Wright Brothers Day, r0.rel: is) => December 17
who were wright brothers?	details	0.5602217227217221	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: details, r0.namespace: reverb, r0.arg2: the Wright Brothers ? website, r0.rel: can be found on) => details
who were wright brothers?	cei	0.5469084486941622	who were wright brothers? => $x: ($x, were, wright brothers) => $x: ($x, were, wright brothers) => (r0.arg1: the CEI, r0.namespace: reverb, r0.arg2: Wright Brothers ? side, r0.rel: has been by) => the CEI
who won the battle of gettysburg?	northern virginia	1.3387868084296644	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Northern Virginia, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: could have won the Battle of) => Northern Virginia; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Northern Virginia, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: could have won the Battle of) => Northern Virginia
who won the battle of gettysburg?	south	1.3387868084296644	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the South, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: might have won the Battle of) => the South; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the South, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: might have won the Battle of) => the South
who won the battle of gettysburg?	robert e. lee	1.3387868084296644	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Robert E. Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: could have won the battle of) => Robert E. Lee; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Robert E. Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: could have won the battle of) => Robert E. Lee
who won the battle of gettysburg?	george g. meade	1.3221452158952145	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: George G. Meade, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: won the crucial battle of) => George G. Meade; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: George G. Meade, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: won the crucial battle of) => George G. Meade
who won the battle of gettysburg?	scrabble	1.2988469863469847	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Scrabble, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: win the battle of) => Scrabble; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Scrabble, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: win the battle of) => Scrabble
who won the battle of gettysburg?	lee	0.46702880452880274	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: wins the battle of) => Lee; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: Lee, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: wins the battle of) => Lee
who won the battle of gettysburg?	north	0.46702880452880274	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the North, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: won the Battle of) => the North; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the North, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: won the Battle of) => the North
who won the battle of gettysburg?	confederates	0.46702880452880274	who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the Confederates, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: win the Battle of) => the Confederates; who won the battle of gettysburg? => $x: ($x, won the battle of, gettysburg) => $x: ($x, won the battle of, gettysburg) => (r0.arg1: the Confederates, r0.namespace: reverb, r0.arg2: Gettysburg, r0.rel: win the Battle of) => the Confederates
who wrote st trinians?	ronald searle	-0.13725768279339712	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: St. Trinian's, r0.rel: Film writing credits) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: The St Trinian's Story, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: St Trinian's: The Cartoons, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: Hurrah For St Trinians, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: The curse of St. Trinian's, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: The terror of St Trinian's, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: St. Trinian's: The Entire Appalling Business, r0.rel: Works written) => Ronald Searle; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Ronald Searle, r0.namespace: freebase, r0.arg2: The Female Approach: The Belles of St. Trinian's and Other Cartoons, r0.rel: Works written) => Ronald Searle
who wrote st trinians?	jamie minoprio	-0.14724263831406703	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Jamie Minoprio, r0.namespace: freebase, r0.arg2: St. Trinian's, r0.rel: Film writing credits) => Jamie Minoprio
who wrote st trinians?	nick moorcroft	-0.14724263831406703	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Nick Moorcroft, r0.namespace: freebase, r0.arg2: St. Trinian's, r0.rel: Film writing credits) => Nick Moorcroft
who wrote st trinians?	jonathan m. stern	-0.14724263831406703	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Jonathan M. Stern, r0.namespace: freebase, r0.arg2: St. Trinian's, r0.rel: Film writing credits) => Jonathan M. Stern
who wrote st trinians?	piers ashworth	-0.14724263831406703	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Piers Ashworth, r0.namespace: freebase, r0.arg2: St. Trinian's, r0.rel: Film writing credits) => Piers Ashworth
who wrote st trinians?	frank launder	-0.15523060273060296	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Frank Launder, r0.namespace: freebase, r0.arg2: Blue Murder at St Trinian's, r0.rel: Film writing credits) => Frank Launder; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Frank Launder, r0.namespace: freebase, r0.arg2: The Belles of St Trinian's, r0.rel: Film writing credits) => Frank Launder; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Frank Launder, r0.namespace: freebase, r0.arg2: The Great St Trinian's Train Robbery, r0.rel: Film writing credits) => Frank Launder
who wrote st trinians?	sidney gilliat	-0.15833703333703364	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Sidney Gilliat, r0.namespace: freebase, r0.arg2: Blue Murder at St Trinian's, r0.rel: Film writing credits) => Sidney Gilliat; who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: Sidney Gilliat, r0.namespace: freebase, r0.arg2: The Belles of St Trinian's, r0.rel: Film writing credits) => Sidney Gilliat
who wrote st trinians?	d. b. wyndham lewis	-0.162220071595072	who wrote st trinians? => $x: ($x, wrote, st trinians) => $x: ($x, wrote, st trinians) => (r0.arg1: D. B. Wyndham Lewis, r0.namespace: freebase, r0.arg2: The terror of St Trinian's, r0.rel: Works written) => D. B. Wyndham Lewis
